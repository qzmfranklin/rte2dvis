###############################################################################
#  A set of template files to organize projects with a single Makefile
#  Copyright (C) 2013 Zhongming Qu <qzmfrank@umich.edu>
#  
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.  
###############################################################################
#	Welcome! The comments in this file will guide you through the process.
#  Please read all the comments very carefully before changing anything.
#  	The idea of this set of template files (Makefile, Makefile.vars, and
#  all the makevars.mk) aim to help organize any C/C++ project with a single
#  Makefile. The advantage is speed. The usual drawback are bad maintainence
#  and modularity. This set of files attempt to cut down all the repetitive
#  work that are usually done manually, i.e., listing target-prerequisites
#  while preserving almost the same degree of modularity as the recursive
#  make approach.
#  	If you have any suggestions and/or ideas, please let me know.
###############################################################################
#QUIET MODE
#	One can comment out the following line to get into verbose mode for
#  all the linking command.
QUIET	:=@
###############################################################################
#PHONY TARGETS AT THE TOP LEVEL
TARGET_ALL	:=
TARGET_TEST	:=
TARGET_ASM	:=
TARGET_LIST	:=
#PROJECT STRUCTURAL DIRECTORIES
SRC	:=src
BIN	:=bin
INCLUDE	:=include
EXAMPLE	:=example# Data files for various tests
BUILD	:=build# Out-of-source build - object and dependency files
DEBUG	:=DEBUG# Profiling and assembly files for debugging use
OUTPUT	:=OUTPUT# Testing result files
STRUCTURAL_DIRS:=${BIN} ${BUILD} ${DEBUG} ${OUTPUT}
#DEPENDENCY FILES
DEPFILES:=# *.d
#DISTRIBUTION FILES
SRCFILES:=# All source files
HDRFILES:=$(wildcard ${INCLUDE}/*)# All header files
MAKFILES:=Makefile Makefile.vars makevars.mk# the ./makevars.mk is the template
MKVFILES:=$(shell find ${SRC} -type f -name "makevars.mk")# All the makevars.mk's
DOCFILES:=# Documentation
MANFILES:=# Manuals
EXPFILES:=$(wildcard ${EXAMPLE}/*)# Examples
#The following line is put in the Makefile AFTER including all makevars.mk's.
###############################################################################
#PROJECT-WIDE COMMON COMPILATION OPTIONS
#	The author of this set of template files is using a MacBookPro. If one 
#  needs to build the same project in a different architecture, e.g., Linux or
#  other Unix-like system, one would most probably only need to modify the 
#  compiling options and linking libraries below. Of course, if one has some
#  architecture-dependent options in some subdirectories, he/she also needs to
#  modify those parts accordingly.
CC	:=icc
CXX	:=icpc
CFLAGS 	:=-O3						\
	-Wall						\
	-prec-div -no-ftz				\
	-MMD -MP					\
	-std=c99					\
	-restrict					\
	-Wno-deprecated

	# 						\
	-fPIC						\
	-fno-inline-functions				\
	-Wno-deprecated					\

CXXFLAGS:=${CFLAGS}

ASMFLAGS:=-S -fsource-asm# Generate source code commented assembly code
#PROJECT-WIDE INCLUDE AND LINKAGE OPTIONS
#	Intel Math Kernel Library
MKL_INCS:=
MKL_LIBS:=-mkl
#	MathLink 
ML_DIR	:=/Applications/Mathematica.app/SystemFiles/Links/MathLink/DeveloperKit/MacOSX-x86-64/CompilerAdditions/
ML_INCS	:=-I${ML_DIR}
ML_LIBS	:=-L${ML_DIR} -lMLi3 -lstdc++ -framework Foundation
MPREP	:=${ML_DIR}/mprep
#	LibraryLink 
MLL_INCS:=-I/Applications/Mathematica.app/SystemFiles/IncludeFiles/C/
MLL_LIBS:=-L/Applications/Mathematica.app/SystemFiles/Libraries/MacOSX-x86-64/
#PROJECT-WIDE DEFAULT LINKING LIBRARIES AND INCLUDE DIRECTORIES
INCS	:=${MKL_INCS} -iquote ${INCLUDE}
LIBS	:=${MKL_LIBS}
###############################################################################
#	Clear all existing pattern rules.
#	Define top level C++ linkage pattern rules.
.SUFFIXES:
.SUFFIXES:.tm .c .cpp .o .exe .s .d 
${BIN}/%.exe: ${BUILD}/%.o 
	@echo Linking  "${B_RED}$@${NONE}"...
	${QUIET}${CXX} -o $@ ${filter %.o,$^} ${LIBS} 
${BUILD}/%.exe: ${BUILD}/%.o 
	@echo Linking  "${B_RED}$@${NONE}"...
	${QUIET}${CXX} -o $@ ${filter %.o,$^} ${LIBS} 
################################################################################ 
#COLORFUL SHELL ECHO!
NONE		:=\033[00m 
#	Normal with color
BLACK		:=\033[00;30m
RED		:=\033[00;31m
GREEN		:=\033[00;32m
BROWN		:=\033[00;33m 
BLUE		:=\033[00;34m
MAGENTA		:=\033[00;35m
CYAN		:=\033[00;36m
GREY		:=\033[00;37m 
#	Bold
B_BLACK		:=\033[01;30m
B_RED		:=\033[01;31m
B_GREEN		:=\033[01;32m
B_BROWN		:=\033[01;33m 
B_BLUE		:=\033[01;34m
B_MAGENTA	:=\033[01;35m
B_CYAN		:=\033[01;36m
B_GREY		:=\033[01;37m 
#	Underlined
U_BLACK		:=\033[04;30m
U_RED		:=\033[04;31m
U_GREEN		:=\033[04;32m
U_BROWN		:=\033[04;33m 
U_BLUE		:=\033[04;34m
U_MAGENTA	:=\033[04;35m
U_CYAN		:=\033[04;36m
U_GREY		:=\033[04;37m 
#	Blinking
BLK_BLACK	:=\033[05;30m
BLK_RED		:=\033[05;31m
BLK_GREEN	:=\033[05;32m
BLK_BROWN	:=\033[05;33m 
BLK_BLUE	:=\033[05;34m
BLK_MAGENTA	:=\033[05;35m
BLK_CYAN	:=\033[05;36m
BLK_GREY	:=\033[05;37m 
#	Reversed foreground and background color
REV_BLACK	:=\033[07;30m
REV_RED		:=\033[07;31m
REV_GREEN	:=\033[07;32m
REV_BROWN	:=\033[07;33m 
REV_BLUE	:=\033[07;34m
REV_MAGENTA	:=\033[07;35m
REV_CYAN	:=\033[07;36m
REV_GREY	:=\033[07;37m 
