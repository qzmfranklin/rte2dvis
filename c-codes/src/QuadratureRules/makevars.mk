###############################################################################
#  A set of template files to organize projects with a single Makefile
#  Copyright (C) 2013 Zhongming Qu <qzmfrank@umich.edu>
#  
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.  
###############################################################################
#	Welcome! The comments in this file will guide you through the process.
#  Please read all the comments very carefully before changing anything.
#  	The idea of this set of template files (Makefile, Makefile.vars, and
#  all the makevars.mk) aim to help organize any C/C++ project with a single
#  Makefile. The advantage is speed. The usual drawback are bad maintainence
#  and modularity. This set of files attempt to cut down all the repetitive
#  work that are usually done manually, i.e., listing target-prerequisites
#  while preserving almost the same degree of modularity as the recursive
#  make approach.
#  	If you have any suggestions and/or ideas, please let me know.
###############################################################################
#				STEP 1
#DIRECTORY NAME FROM THE ROOT DIRECTORY
#  Be very careful:
# 	NO SPACE ( tab is OK )
# 	NO DEFERRED-EVALUATION ( always use colon-equal, i.e., := ) #
DIR001		:=src/QuadratureRules# Please, NO SPACE 
###############################################################################
#				STEP 2
#DIRECTORY-SPECIFIC SOURCE FILES
#  	Remember to add the ${DIR001}/ to whatever source files(s) you wish to add.
#  The dependencies are automatically resolved by the dependency files (*.d 
#  files) generated by the compiler through the -MD -MP and/or similar options.
#  Note that:
#  	a) The GNU make does NOT support recursive include directive. So we must
#  NOT include any *.d file in this file. All the *.d files are included in the
#  Makefile in the root directory AFTER all the makevars.mk's are include.
#  	b) So far, only supports C/C++ files. Maybe Fortran support is needed TODO
#  	c) Please refrain from using $(wildcard) command. It only helps when not
#  really nessaccery and complicates the situation when we have forgotten about
#  it. Yes, be explicit. Manually list all the source files here.
#  	d) Dependencies are readily dealt with by the setup of the Makefile. One
#  NEVER needs to specify the dependency for any .o file.
${DIR001}CFILES		:=
${DIR001}CPPFILES	:=	${DIR001}/DunavantRule.cpp 			\
				${DIR001}/WandzuraRule.cpp			\
				${DIR001}/GaussQuadratures.cpp
################## DO NOT MODIFY ################
${DIR001}OBJFILES	:=	${${DIR001}CPPFILES:${DIR001}%.cpp=${BUILD}%.o}	\
				${${DIR001}CFILES:${DIR001}%.c=${BUILD}%.o}
${DIR001}DEPFILES	:=	${${DIR001}OBJFILES:%.o=%.d}
${DIR001}ASMFILES	:=	${${DIR001}OBJFILES:${BUILD}%.o=${DEBUG}%.s}
################## DO NOT MODIFY ################ 
###############################################################################
#				STEP 3
#DIRECTORY-SPECIFIC BINARY FILES
#	Executables listed in ${DIR}BINFILES are considered the final output of
#  this project. All of them should be built into ${BIN} instead of ${BUILD}
#  for all other executables. 
#  	So far, only supports CPP source files. TODO
${DIR001}BIN	:=		
################## DO NOT MODIFY ################
${DIR001}BINCPP	:=		${${DIR001}BIN:%=${DIR001}/%.cpp}
${DIR001}BINOBJ	:=		${${DIR001}BINCPP:${DIR001}%.cpp=${BUILD}%.o}
${DIR001}BINDEP	:=		${${DIR001}BINOBJ:%.o=%.d}
${DIR001}BINEXE	:=		${${DIR001}BINOBJ:${BUILD}%.o=${BIN}%.exe}
${DIR001}BINASM	:=		${${DIR001}BINOBJ:${BUILD}%.o=${DEBUG}%.s}
################## DO NOT MODIFY ################
#  The default build rule for ${DIR001}BINEXE is:
#${${DIR001}BINEXE}: ${${DIR001}BINOBJ} ${${DIR001}OBJFILES} 
#  Comment the above line and specify your own rules here:
#  Note that we can take advantage of the following pattern rule:
#		rule ${BIN}/%.exe: ${BUILD}/%.o
###############################################################################
#				STEP 4
#DIRECTORY-SPECIFIC TEST FILES
#	Speicify all the test files. All test files must be CPP files. But when
#  listing the them in ${DIR001}TST, do NOT write the .cpp extension. For example:
#  if one wishes to add test-mytest.cpp, he should write:
#
#  		${DIR001}TST:=test-mytest
#
${DIR001}TST	:=		test-QuadratureRules
################## DO NOT MODIFY ################
${DIR001}TSTCPP	:=		${${DIR001}TST:%=${DIR001}/%.cpp}
${DIR001}TSTOBJ	:=		${${DIR001}TSTCPP:${DIR001}%.cpp=${BUILD}%.o}
${DIR001}TSTDEP	:=		${${DIR001}TSTOBJ:%.o=%.d}
${DIR001}TSTEXE	:=		${${DIR001}TSTOBJ:%.o=%.exe}
${DIR001}TSTASM	:=		${${DIR001}TSTOBJ:${BUILD}%.o=${DEBUG}%.s}
SRCFILES	:=		${SRCFILES} ${${DIR001}CFILES} ${${DIR001}CPPFILES} ${${DIR001}TSTCPP} ${${DIR001}BINCPP}
DEPFILES	:=		${DEPFILES} ${${DIR001}DEPFILES} ${${DIR001}TSTDEP} ${${DIR001}BINDEP}
################## DO NOT MODIFY ################
#  The default build rule for ${DIR001}BINEXE is:
${${DIR001}TSTEXE}: ${${DIR001}TSTOBJ} ${${DIR001}OBJFILES} 
#  This is using all the object files generated in this directory plus the
#  object files of the test CPP files. In case where this is either not enough
#  or too much, please modify the following line.
#  Comment the default build rule and specify your own rules here:
#  Note that we can take advantage of the following pattern rule:
#		rule ${BIN}/%.exe: ${BUILD}/%.o
${BIN}/mshtodat.exe: ${BUILD}/mshtodat.o ${BUILD}/file-io.o 
###############################################################################
#				STEP 5
#DIRECTORY-SPECIFIC COMPILING AND LINKING OPTIONS
#	Options specified here are used in this directory. By default, all 
#  builds use the same options. When different compiling and/or linking options 
#  need to be assigned to different targets, the programmer needs to list all
#  the speical target-prerequisite dependencies manually.
#  	By default, the local options inherits the corresponding global ones 
#  from the makevars.mk in the root directory. If one wishes to add any 
#  additional options that are specific to this very directory, add them after 
#  the global ones. For example:
# 	 	${DIR001}CFLAGS	:=${CFLAGS} [directory-specific options]
#  	Usually, ${DIR001}INCS and ${DIR001}LIBS should not need to be modified if
#  the build in this directory does not require some extra libraries and/or 
#  hearder files. But in case it did, free at ease to modify these two 
#  variables.
${DIR001}CFLAGS 	:=${CFLAGS}
${DIR001}CXXFLAGS	:=${CXXFLAGS}
${DIR001}INCS		:=${INCS}
${DIR001}LIBS		:=${LIBS} 
###############################################################################
#				STEP 6
#	Write whatever extra dependencies here:



###############################################################################
###############################################################################
###############################################################################
#	Congratulations! You have completed everything you need to do to build
#  this directory. You do not need to modify this file unless some C and/or
#  CPP source files are added, removed, or renamed. In that case, just go over
#  STEP 1-6 again and it is done!
###############################################################################
###############################################################################
###############################################################################
#				WANRING
#  Please do not modify the following part if you are not 100% sure about it.
#  The design of this file is that one only needs to modify the part above.
#  If you find you need to modify any of the parts below, be very careful!
#				WANRING
###############################################################################
###############################################################################
############################################################################### 
#DIR001ECTORY-SPECIFIC PATTERN RULES
#  C++ linkage at the top level
${BIN}/%.exe: ${BUILD}/%.o 
	@echo Linking  "${B_RED}$@${NONE}"...
	@${CXX} -o $@ ${filter %.o,$^} ${${DIR001}LIBS} 
${BUILD}/%.exe: ${BUILD}/%.o 
	@echo Linking  "${RED}$@${NONE}"...
	@${CXX} -o $@ ${filter %.o,$^} ${${DIR001}LIBS} 
#  C++ sources
${BUILD}/%.o: ${DIR001}/%.cpp
	@echo Compiling "${MAGENTA}$@${NONE}"...
	@${CXX} -o $@ -c $< ${${DIR001}CXXFLAGS} ${${DIR001}INCS}
${DEBUG}/%.s: ${DIR001}/%.cpp
	@echo Generating "${CYAN}$@${NONE}"...
	@${CXX} -o $@ $< ${ASMFLAGS} ${${DIR001}CXXFLAGS} ${${DIR001}INCS} 
#  C sources
${BUILD}/%.o: ${DIR001}/%.c
	@echo Compiling "${MAGENTA}$@${NONE}"...
	@${CC} -o $@ -c $< ${${DIR001}CFLAGS} ${${DIR001}INCS}
${DEBUG}/%.s: ${DIR001}/%.c
	@echo Generating "${CYAN}$@${NONE}"...
	@${CC} -o $@ $< ${ASMFLAGS} ${${DIR001}CFLAGS} ${${DIR001}INCS} 
#DIR001ECTORY-SPECIFIC PHONY TARGETS
.PHONY: ${DIR001}-all ${DIR001}-test ${DIR001}-asm ${DIR001}-list
TARGET_ALL	:=${TARGET_ALL} ${DIR001}-all
TARGET_TEST	:=${TARGET_TEST} ${DIR001}-test
TARGET_ASM	:=${TARGET_ASM} ${DIR001}-asm
TARGET_LIST	:=${TARGET_LIST} ${DIR001}-list
${DIR001}-all: ${${DIR001}OBJFILES} ${${DIR001}BINEXE}
	@echo Finished building "${B_BLUE}$@${NONE}".
${DIR001}-test: ${${DIR001}TSTEXE}
	@echo Finished building "${B_BLUE}$@${NONE}".  
${DIR001}-asm: ${${DIR001}ASMFILES} ${${DIR001}TSTASM}
	@echo Finished generating "${B_BLUE}$@${NONE}".  
${DIR001}-list:
	@echo \#\#\#\#\#\#\#\#"${B_BROWN}BEGIN $@${NONE}"\#\#\#\#\#\#\#\#
	@echo "${BROWN}CFILES${NONE}":${${DIR001}CFILES}
	@echo "${BROWN}CPPFILES${NONE}":${${DIR001}CPPFILES}
	@echo "${BROWN}OBJFILES${NONE}":${${DIR001}OBJFILES}
	@echo "${BROWN}DEPFILES${NONE}":${${DIR001}DEPFILES}
	@echo "${BROWN}ASMFILES${NONE}":${${DIR001}ASMFILES}
	@echo "${BROWN}TSTCPP${NONE}":${${DIR001}TSTCPP}
	@echo "${BROWN}TSTOBJ${NONE}":${${DIR001}TSTOBJ}
	@echo "${BROWN}TSTDEP${NONE}":${${DIR001}TSTDEP}
	@echo "${BROWN}TSTEXE${NONE}":${${DIR001}TSTEXE}
	@echo "${BROWN}TSTASM${NONE}":${${DIR001}TSTASM} 
	@echo "${BROWN}BINCPP${NONE}":${${DIR001}BINCPP}
	@echo "${BROWN}BINOBJ${NONE}":${${DIR001}BINOBJ}
	@echo "${BROWN}BINDEP${NONE}":${${DIR001}BINDEP}
	@echo "${BROWN}BINEXE${NONE}":${${DIR001}BINEXE}
	@echo "${BROWN}BINASM${NONE}":${${DIR001}BINASM} 
	@echo \#\#\#\#\#\#\#\#"${B_BROWN}END $@${NONE}"\#\#\#\#\#\#\#\#
