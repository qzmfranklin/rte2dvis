###############################################################################
#				STEP 1
#DIRECTORY NAME FROM THE ROOT DIRECTORY
#  Be very careful:
# 	NO SPACE ( tab is OK )
# 	NO DEFERRED-EVALUATION ( always use colon-equal, i.e., := ) #
DIR		:=src/QuadratureRules# Please, NO SPACE 
###############################################################################
#				STEP 2
#DIRECTORY-SPECIFIC SOURCE FILES
#  	Remember to add the ${DIR}/ to whatever source files(s) you wish to add.
#  The dependencies are automatically resolved by the dependency files (*.d 
#  files) generated by the compiler through the -MD -MP and/or similar options.
#  Note that:
#  	a) The GNU make does NOT support recursive include directive. So we must
#  NOT include any *.d file in this file. All the *.d files are included in the
#  Makefile in the root directory AFTER all the makevars.mk's are include.
#  	b) So far, only supports CPP files. C support will be added TODO
${DIR}CFILES	:=
${DIR}CPPFILES	:=		${DIR}/DunavantRule.cpp 			\
				${DIR}/WandzuraRule.cpp				\
				${DIR}/GaussQuadratures.cpp
################## DO NOT MODIFY ################
${DIR}OBJFILES	:=		${${DIR}CPPFILES:${DIR}%.cpp=${BUILD}%.o}	\
				${${DIR}CFILES:${DIR}%.c=${BUILD}%.o}
${DIR}DEPFILES	:=		${${DIR}OBJFILES:%.o=%.d}
${DIR}ASMFILES	:=		${${DIR}OBJFILES:${BUILD}%.o=${DEBUG}%.s}
################## DO NOT MODIFY ################ 
###############################################################################
#				STEP 3
#DIRECTORY-SPECIFIC TEST FILES
#	Speicify all the test files. All test files must be CPP files. But when
#  listing the them in ${DIR}TST, do NOT write the .cpp extension. For example:
#  if one wishes to add test-mytest.cpp, he should write:
#
#  		${DIR}TST:=test-mytest
${DIR}TST	:=		test-QuadratureRules
################## DO NOT MODIFY ################
${DIR}TSTCPP	:=		${${DIR}TST:%=${DIR}/%.cpp}
${DIR}TSTOBJ	:=		${${DIR}TSTCPP:${DIR}%.cpp=${BUILD}%.o}
${DIR}TSTDEP	:=		${${DIR}TSTOBJ:%.o=%.d}
${DIR}TSTEXE	:=		${${DIR}TSTOBJ:%.o=%.exe}
${DIR}TSTASM	:=		${${DIR}TSTOBJ:${BUILD}%.o=${DEBUG}%.s}
CFILES		:=		${CFILES} ${${DIR}CFILES}
CPPFILES	:=		${CFILES} ${${DIR}CPPFILES}
DEPFILES	:=		${DEPFILES} ${${DIR}DEPFILES} ${${DIR}TSTDEP}
################## DO NOT MODIFY ################
###############################################################################
#				STEP 4
#	The default build rule for all the files specified in ${DIR}TST is
#
#		${${DIR}TSTEXE}: ${${DIR}TSTOBJ} ${${DIR}OBJFILES} 
#
#	This is using all the object files generated in this directory plus the
#  object files of the test CPP files. In case where this is either not enough
#  or too much, please modify the following line.
${${DIR}TSTEXE}: ${${DIR}TSTOBJ} ${${DIR}OBJFILES} 
#DIRECTORY-SPECIFIC COMPILING AND LINKING OPTIONS
#  	By default, the local options inherits the corresponding global ones 
#  from the makevars.mk in the root directory. If one wishes to add any 
#  additional options that are specific to this very directory, add them after 
#  the global ones. For example:
# 	 	${DIR}CFLAGS	:=${CFLAGS} [directory-specific options]
#  	Usually, ${DIR}INCS and ${DIR}LIBS should not need to be modified if
#  the build in this directory does not require some extra libraries and/or 
#  hearder files. But in case it did, free at ease to modify these two 
#  variables.
###############################################################################
#				STEP 5
#DIRECTORY-SPECIFIC COMPILING AND LINKING OPTIONS
#	Options specified here are used in this directory. By default, all 
#  builds use the same options. When different compiling and/or linking options 
#  need to be assigned to different targets, the programmer needs to list all
#  the speical target-prerequisite dependencies manually.
${DIR}CFLAGS 	:=${CFLAGS}
${DIR}CXXFLAGS	:=${CXXFLAGS} \
	-Wno-deprecated # No warning on deprecated and/or antiquiated headers
${DIR}INCS	:=${INCS}
${DIR}LIBS	:=${LIBS} 
###############################################################################
#				STEP 6
#	Write whatever dependencies here:














###############################################################################
###############################################################################
#	Congratulations! You have completed everything you need to do to build
#  this directory. You do not need to modify this file unless some C and/or
#  CPP source files are added, removed, or renamed. In that case, just go over
#  STEP 1-6 again and it is done!
###############################################################################
###############################################################################
###############################################################################
#				WANRING
#  Please do not modify the following part if you are not 100% sure about it.
#  The design of this file is that one only needs to modify the part above.
#  If you find you need to modify any of the parts below, be very careful!
#				WANRING
###############################################################################
###############################################################################
############################################################################### 
#DIRECTORY-SPECIFIC PATTERN RULES
#  C++ linkage at the top level
${BUILD}/%.exe: ${BUILD}/%.o 
	@echo Linking executable "${RED}$@${NONE}"...
	@${CXX} -o $@ ${filter %.o,$^} ${${DIR}LIBS} 
#  C++ sources
${BUILD}/%.o: ${DIR}/%.cpp
	@echo Compiling "${MAGENTA}$@${NONE}"...
	@${CXX} -o $@ -c $< ${${DIR}CXXFLAGS} ${${DIR}INCS}
${DEBUG}/%.s: ${DIR}/%.cpp
	@echo Generating "${CYAN}$@${NONE}"...
	@${CXX} -o $@ $< ${ASMFLAGS} ${${DIR}CXXFLAGS} ${${DIR}INCS} 
#  C sources
${BUILD}/%.o: ${DIR}/%.c
	@echo Compiling "${MAGENTA}$@${NONE}"...
	@${CC} -o $@ -c $< ${${DIR}CFLAGS} ${${DIR}INCS}
${DEBUG}/%.s: ${DIR}/%.c
	@echo Generating "${CYAN}$@${NONE}"...
	@${CC} -o $@ $< ${ASMFLAGS} ${${DIR}CFLAGS} ${${DIR}INCS} 
#DIRECTORY-SPECIFIC PHONY TARGETS
.PHONY: ${DIR}-all ${DIR}-test ${DIR}-list
TARGET_ALL	:=${TARGET_ALL} ${DIR}-all
TARGET_TEST	:=${TARGET_TEST} ${DIR}-test
TARGET_LIST	:=${TARGET_LIST} ${DIR}-list
${DIR}-all: ${${DIR}OBJFILES} ${${DIR}BINFILES}
	@echo Finished building "${B_BLUE}$@${NONE}".
${DIR}-test: ${${DIR}TSTEXE}
	@echo Finished building "${B_BLUE}$@${NONE}".  
${DIR}-list:
	@echo \#\#\#\#\#\#\#\#"${B_BROWN}BEGIN $@${NONE}"\#\#\#\#\#\#\#\#
	@echo "${BROWN}CPPFILES${NONE}":${${DIR}CPPFILES}
	@echo "${BROWN}OBJFILES${NONE}":${${DIR}OBJFILES}
	@echo "${BROWN}DEPFILES${NONE}":${${DIR}DEPFILES}
	@echo "${BROWN}ASMFILES${NONE}":${${DIR}ASMFILES}
	@echo "${BROWN}TSTCPP${NONE}":${${DIR}TSTCPP}
	@echo "${BROWN}TSTOBJ${NONE}":${${DIR}TSTOBJ}
	@echo "${BROWN}TSTDEP${NONE}":${${DIR}TSTDEP}
	@echo "${BROWN}TSTASM${NONE}":${${DIR}TSTASM}
	@echo \#\#\#\#\#\#\#\#"${B_BROWN}END $@${NONE}"\#\#\#\#\#\#\#\#
