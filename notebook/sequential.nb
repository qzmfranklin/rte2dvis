(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    362453,       7428]
NotebookOptionsPosition[    358092,       7297]
NotebookOutlinePosition[    358470,       7314]
CellTagsIndexPosition[    358427,       7311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The following codes shall only be run once!!!\
\>", "Text",
 CellChangeTimes->{{3.591223811268855*^9, 3.591223824243198*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Developer`\>\"", "]"}], "\n", 
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"$LibraryPath", "=", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$LibraryPath", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<../MLL-lib\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"LegendreRule", ",", "DunavantRule"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LegendreRule", "=", 
   RowBox[{"LibraryFunctionLoad", "[", 
    RowBox[{"\"\<lib-franklin\>\"", ",", "\"\<LegendreRule_MLL\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Integer", ",", "Real", ",", "Real"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "2", ",", "\"\<Shared\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DunavantRule", "=", 
   RowBox[{"LibraryFunctionLoad", "[", 
    RowBox[{"\"\<lib-franklin\>\"", ",", "\"\<DunavantRule_MLL\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"Real", ",", "2", ",", "\"\<Constant\>\""}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "2", ",", "\"\<Shared\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<../ML-exe\>\""}], 
       "}"}], "]"}], "]"}], ";", "\n", 
    RowBox[{"Install", "[", "\"\<DunavantRule.exe\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Install", "[", "\"\<LegendreRule.exe\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Install", " ", "More", " ", "Executables", " ", "Here"}], 
      "..."}], "*)"}], "\n", 
    RowBox[{"ResetDirectory", "[", "]"}], ";"}], "\n", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.590769835991131*^9, 3.5907698527545443`*^9}, {
   3.590770232568589*^9, 3.590770246456628*^9}, {3.5907706393315973`*^9, 
   3.590770651147347*^9}, {3.590770710970009*^9, 3.59077071546248*^9}, 
   3.590771160609254*^9, {3.591186973783227*^9, 3.591186974039253*^9}, {
   3.59118782592146*^9, 3.5911878269071693`*^9}, {3.591221319683359*^9, 
   3.5912213200350447`*^9}}],

Cell[CellGroupData[{

Cell["Quadrature Rules and Numerical Integration - Modular", "Section",
 CellChangeTimes->{{3.5907712289369993`*^9, 3.5907712477997847`*^9}, {
  3.59077143380797*^9, 3.590771437997287*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "QuadratureProduct2D", "]"}], "\n", 
 RowBox[{
  RowBox[{"QuadratureProduct2D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1_", ",", " ", "w1_"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"q2_", ",", " ", "w2_"}], "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q", ",", "w"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"q", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", "q1", ",", "q2"}], 
          "]"}], "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "N"}], "//", 
       "ToPackedArray"}]}], ";", "\n", 
     RowBox[{"w", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "w1", ",", "w2"}], "]"}], "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "N"}], "//", 
       "ToPackedArray"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"q", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", "w"}], 
      "}"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"NIntegrateDuffyTriangle", ",", "NIntegrateNonSingularTriangle"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NIntegrateDuffyTriangle", "[", 
   RowBox[{"p_", ",", "fun_", ",", 
    RowBox[{"{", 
     RowBox[{"q_", ",", "w_"}], "}"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "qq", ",", "ww", ",", "P0P1", ",", "P1P2", ",", "P1P2Sq", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", "A", ",", "b", ",", "n", ",", 
      "DetA"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"P0P1", "=", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{
       "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"P1P2", "=", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{
       "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"P0P1", ",", "P1P2"}], "}"}], "//", "Transpose"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DetA", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"Det", "[", "A", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "q", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P1P2Sq", "=", 
      RowBox[{"Total", "[", 
       SuperscriptBox["P1P2", "2"], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]1", "=", 
      RowBox[{
       RowBox[{"P0P1", ".", "P1P2"}], "/", "P1P2Sq"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]2", "=", 
      RowBox[{"DetA", "/", "P1P2Sq"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"qq", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
           "}"}]}], "+", "b"}], "&"}], "/@", "q"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ww", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"w", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
              "\[Lambda]1"}], ")"}], "2"], "+", 
           SuperscriptBox["\[Lambda]2", "2"]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DetA", "/", 
       RowBox[{"Sqrt", "[", "P1P2Sq", "]"}]}], "*", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        RowBox[{"ww", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        
        RowBox[{"fun", "[", 
         RowBox[{"qq", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "]"}]}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"NIntegrateNonSingularTriangle", "[", 
   RowBox[{"p_", ",", "fun_", ",", 
    RowBox[{"{", 
     RowBox[{"q_", ",", "w_"}], "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "A", ",", "b", ",", "AreaOver2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "q", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "-", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "-", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
        "}"}], "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{
       "p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AreaOver2", "=", 
      RowBox[{"0.25", "*", 
       RowBox[{"Abs", "[", 
        RowBox[{"Det", "[", "A", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AreaOver2", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        RowBox[{"w", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        RowBox[{"fun", "[", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", ".", 
             RowBox[{
             "q", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "+", "b"}], ")"}]}], "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.590769835991131*^9, 3.5907698527545443`*^9}, {
   3.590770232568589*^9, 3.590770246456628*^9}, {3.5907706393315973`*^9, 
   3.590770651147347*^9}, {3.590770710970009*^9, 3.59077071546248*^9}, 
   3.590771160609254*^9, {3.590872986453992*^9, 3.590872995808711*^9}, {
   3.59087311813139*^9, 3.590873120529707*^9}, {3.5908741828287687`*^9, 
   3.590874183253937*^9}, {3.591186906243067*^9, 3.591186930368384*^9}, 
   3.591187534772026*^9, {3.5911878475674343`*^9, 3.591187854390823*^9}, {
   3.591221258509321*^9, 3.5912212670745277`*^9}, {3.591221318050521*^9, 
   3.5912213236476183`*^9}, {3.5912225932241697`*^9, 
   3.5912226496750317`*^9}, {3.5912230296327553`*^9, 3.5912230356042767`*^9}, 
   3.591226436180539*^9}],

Cell[TextData[{
 "Compute the near singular integral over the triangle:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", ",", "0"}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{"0", ",", "2"}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{"3", ",", "2"}], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.59087386172996*^9, 3.590873886906324*^9}, {
   3.590874136626711*^9, 3.590874144001214*^9}, 3.59087442054228*^9, {
   3.590874451677026*^9, 3.5908744521545877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"p", ",", "fun", ",", "a0", ",", "x", ",", "y"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5"}], 
       SuperscriptBox["x", "2"]}], "-", 
      SuperscriptBox["y", "2"], "+", 
      RowBox[{"1.4", "x", " ", "y"}]}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"2", "y"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<true value = \>\"", ",", 
    RowBox[{"a0", "=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fun", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "]"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "-", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", 
          RowBox[{"y", "/", "2"}]}], ",", 
         RowBox[{"1", "+", "y"}]}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qx", ",", "qy", ",", "w", ",", "q", ",", "n1", ",", "n2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"qx", ",", "qy", ",", "w"}], "}"}], "=", 
          RowBox[{
           RowBox[{"QuadratureProduct2D", "[", 
            RowBox[{
             RowBox[{"LegendreRule", "[", 
              RowBox[{"n1", ",", "0", ",", "1"}], "]"}], ",", 
             RowBox[{"LegendreRule", "[", 
              RowBox[{"n2", ",", "0", ",", "1"}], "]"}]}], "]"}], "//", 
           "Quiet"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"q", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"qx", ",", "qy"}], "}"}], "\[Transpose]"}], "//", 
           "ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"w", "=", 
          RowBox[{"w", "//", "ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"Log", "@", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NIntegrateDuffyTriangle", "[", 
               RowBox[{"p", ",", "fun", ",", 
                RowBox[{"{", 
                 RowBox[{"q", ",", "w"}], "}"}]}], "]"}], "-", "a0"}], ")"}], 
            "/", "a0"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "30"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n2", ",", "30"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"ListPlot3D", "[", 
        RowBox[{"#", ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<n1\>\"", ",", "\"\<n2\>\"", ",", 
            "\"\<Log(relative error)\>\""}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"fun", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "&"}]}], "//", 
     "Print"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5908736609997253`*^9, 3.590873846076429*^9}, {
   3.590873905007139*^9, 3.590873973149897*^9}, {3.590874373283963*^9, 
   3.590874413485298*^9}, {3.591187769700542*^9, 3.591187770593132*^9}, {
   3.5911878989797*^9, 3.5911879003364067`*^9}, {3.591220747396124*^9, 
   3.591220764153922*^9}, {3.591220804930767*^9, 3.591220805248407*^9}, {
   3.59122099199186*^9, 3.591221018709684*^9}, {3.591221096450376*^9, 
   3.591221122611052*^9}, {3.591221274681069*^9, 3.591221287399325*^9}, {
   3.591221357606131*^9, 3.5912213678189287`*^9}, {3.591222412638151*^9, 
   3.591222414548922*^9}, {3.591222665759694*^9, 3.591222826891234*^9}, 
   3.591223063174519*^9, {3.591224917679332*^9, 3.591224922053651*^9}, {
   3.5912251807342653`*^9, 3.591225207581037*^9}, {3.591225237853841*^9, 
   3.591225238021721*^9}, {3.591225589339859*^9, 3.5912256035798473`*^9}, {
   3.5912275655269814`*^9, 3.591227626676564*^9}, {3.591227679494018*^9, 
   3.5912276815952387`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"true value = \"\>", "\[InvisibleSpace]", 
   "0.42197476884477664`"}],
  SequenceForm["true value = ", 0.42197476884477664`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.590874413800235*^9, 3.590874423330186*^9}, {
   3.591187765421288*^9, 3.591187771494319*^9}, {3.5912207558576*^9, 
   3.591220765888507*^9}, 3.591220930532337*^9, {3.591221119323996*^9, 
   3.591221123050435*^9}, {3.591221279137065*^9, 3.591221296461606*^9}, {
   3.591221353475976*^9, 3.591221368455625*^9}, {3.5912217545156927`*^9, 
   3.591221757224875*^9}, 3.5912218458453207`*^9, 3.591222535657942*^9, {
   3.5912226757259912`*^9, 3.591222827562558*^9}, 3.591223064020265*^9, 
   3.591224864027217*^9, {3.59122491553442*^9, 3.591224922537672*^9}, {
   3.59122518690656*^9, 3.591225240747504*^9}, {3.591227301922521*^9, 
   3.591227323241712*^9}, 3.591227591514888*^9, 3.59122762783174*^9, 
   3.5912276822422943`*^9, 3.591296891942898*^9, 3.591297706832765*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0nXdUFEnXxhFzRkUFRRwRAQFhcp7xmrNizu4YVlfXnLNjWHPAnF3MWTGs
OYw5K+asmLOLAZUgfr3f232ruqtm//Hs7/TpaR4eam5XPXWrXKc+TX739fHx
0eT38cnuI/2XUln6t2CrMcWnFUkV/98HJJ7cqvr1M83fizwP8tXRuysGFZC4
H/JJM+p2/3OYxP2Rh35y1szXR+IByH2DOv1jQB6EvMWVUdpqyFXII1ZmlqmC
PAT5zZdFWhAeinzrqVKNCQ8jfMsgikcg15zvR/FI5Htm0zwa+cN1NI9BPnQ1
zdXI/5VxDfI7Mq5Ffl/Gdcifyrjey/0NyC/KuBH5FRk3Ib8l42Yv97Egvyrj
VuRvZdyG/JGM25E/k3EH8mQZd3rhKejfiv61Nwb8enZU+n/p36zSs+ueLvlO
4WcfaGRa8HTGw0Pi9X7Iv4QM7nUm/3GFn33gk/tA/XtTTyj87APrLNmvH+lx
XOFnH+jZ/VzBzrOOK/zsA8F75rUoMPO4ws8+8PHPYtEfZhxX+NkHdIuewyfk
Yci/75hUkvAI5MVMNSgeiVyV2JTi0ci7/t2M4jHIg/vQXI38ZX+aa5A3l3Et
8okyrkN+Usb1yLfLuAF5LRk3Iu8s4ybk/WTcjDxaxi3IN8i41Qu3IZf/XHbk
cn0cyJfIuNMLT0GfTvTtpUnW3FSMz3ngW+C5j8ljMo5K/y/9uyAs4N8DvW4r
/JwHPpurr8vX+pPI/ZEv/ev0ygF9/hV5APLAQn9Wm7rwo8iDkK/Mue5+sdsS
VyFvstFVcdpViYcgH/vj8MHeyEOR2y/+cWIU8jDkP0aEbxuJPAJ5w5m5thMe
ifzQ0IBEwqORz3ufm+IxyM1ZNFcjf5YnD8U1yCvKuBa5XcZ1yNvKuN7L9Qbk
dWTciFwt4ybkVWXcjNwi4xbkXWTcijxcxm3Ia8i4HXkHGXcgl+vjRC5/fsnP
flAlND7f9wmXFH72g80viwadzX5P4Wc/yDbH1ujn8wyFn/1g51HDxYkpPp7/
/b8/8txvDua82CKHyAOQX4+8e6xpgZwiD0L+9du6uTf3SNerkI9Z3j/sokfi
IciLx/6Z24M8FHmtfn8OXIs8DPnnVbsKbEAegXznzV3ZCI9EPnVw8K/1yKOR
F/VpTvEY5NsCm1FcjXxsZlOKa5CfyKK5Fvl2Gdch3y3jei/cgHyyjBuRr5Fx
E3L555qRy+9vQT5Pxq3I5fe3IZff3+7legfyBBl3Ij8j45Kf/WH90xll5t2/
rPCzP9SI755ctdVjhZ/94e3l4fo23VMVfvaHUc7rvQqE5fdI/y/9u6fXzvz3
xxQXeQDyxIcd3tUpVFTkQciHan5zrWxQTOQq5JYc/jMWBEs8BPn+zUcOVy0r
8VDk8+ePDDiIPAz5pODiM7cij0BetVLlZMIjkU/oN+MD4dHIh7St/p7wGOSf
htajuBp5VHh9imuQtwyguRb5CxnXIW8YSHM98igZNyB/IONG5IEybkIuv78Z
+QrZ81iQh5SiuRW5/HlsyOWfa0cuf04HcrkOTuTHZFzycwAMbT8vxXZC6ecA
qFfx5dyMYko/B8DKc7u/tLur9HMA3Gz37VnhGnk90udJvHHe7yeLXVH6OQA8
DSc2PTAtQORByONNu1f7nQgSuQr5pzslep5ylxV5CPLqvUv9qNtX4qHIv1ww
5ozrKvEw5COeNOs8vJvEI5CPdE7o3R95JPJHUy/U74c8GnlA8y89CI9BfjDU
RHE18m3OcIprkFf4J4LiWuRl9tFch3zDLprrkc85RHODl+uNyLcn0tyE/Mgm
mpuRy5/TgvzNIppbvVxvQy5/HjvyuNU0dyCX6+D0ch/Jz0HQckbg6jknlX4O
gki/06lpRZV+DoI98UGr028r/RwE2VaW7RPWVOnnILiYt+j8oMgSHuk5JN6o
46EyF96U9Ej/L/3rn63r2ezoTxXyJr5b21wbHybyEOTpBeHahUMVRB6KfN6T
z75ul8TDkL9e9rng9B4Sj0Cuj72ZUR15JPLy+l5GG/Jo5DW2ZKtiRx6DvJhH
byVcjXzDlo0WwjXIh5feS3Et8hoz9lBch1y1nuZ65Du/0tyAXLeE5kbkuyvT
3OTlejPyQrtpbkH+LoDmVuSt3DS3IZf/XHbkfr/+obgDuVwfJ/Jb9+j7SH5W
wYEKRQaNZ/ysghfd63VuzIzPKnDNSN/Yi/GzChpPPvjmSjOln1XQ7kObRyc1
Sj+rwHh4zcPnj5R+VsHOmi1mb9uv9LMKuiUMgOD2YSIPQV5iWom03/8KF3ko
8hfppgKZNyNEHoZ8n+fsjQsJEo9AvjAjzRi7SuKRyM/1/PrhN+TRyDsYA/e2
QR6DPOifGXcJVyP331b1AeEa5GvH+1Bci/zl6WwU1yG/N9mX4nrkMJG+3oA8
PF92ihuRL65BX29CLn8eM3L5/S3IlzXJRXEr8hm56ee0IdfVprkdufznciCX
6+BE7j5HXy/5OQTKHK2fYwLj5xAove7C+XqMn0OgQY9Wd4Yzfg6BGx9PXVrA
+DkErr8bW2C0WunnELjd+v7fV5OVfg6BtDXdbsZsUfo5BAx107ZV0Um+DUGe
e6cjOlu3iiIPRR64IOfeog2jRR6GXF374eTrjhiRRyDPcT9beMdwiUci7/yu
ZoFOoRKPRt7Bc/vzLuQxyO3JXW7sQK5G3kLzbiPhGuQHtpfaRrgW+c8r+Siu
Q94vz79bCdcjD2h9huIG5OP83lHciDw42Ze6vwl57sYXqOvNyFernlHcgvym
+TbFrcjl97chP6W+T11vRy5/Tgdy+ec6vdxH8nMoxHe59Isdn0Mhm78pjfVz
KNSpFduc9XMolJw8Y95ixs+h8H3a/pB4xs+h8K7F/lu7GT+Hwl8TdZvSGD+H
woSm216cLa/0cyiMbV3q79sWpZ9D4ZimwXZNw0oiD0N+cWm2tmV7a0UegbyH
v2YivNWJPBL5nZel/2jcTuLRyE/FlqlQ5Q+JxyAfk2tng5RuElcjn+JzOPUN
cg3yiFl7Fr5FrkW+UVdlJuE65LcfPJtGuN7L9QbkoZPqU9cbkX99uHEG4Sbk
+SdOnEK4Gbkp2TCbcIuX+1iRT9OOmE64DXmHKXeo57QjX3+v5WTCHch3PZu0
gHAncv/HfWYRLvk5DHoefc/xcxisvbfnB+vnMJg3IYXj5zD49th/BuvnMMg3
bPSjWYyfwyBzpbvZP4yfwyB967Vc3xg/h0GlvgsXFQ5V+jkMKj6s1DnBqvSz
wP8pcEBfW+nnMAjZWdz9IkzSIQL5ndq/Fc48IPk8EnnP+b2q7Jgo8WjkK00v
6lyeJvEY5MXNIWW2IFcjX/FY12sjcg3yKqX2JRKuRX78zd6thOuQj7r0fTPh
euTffn7fRrgBefdTQ6jrjcjfp+2lrjd5uY8Z+e1PJopbkLc4/H0T4Vbk+14M
oZ7fhvxJ6hDqPnbk1h0m6j4O5PLncSJf8/D7FsIlP0fAtax3HD9HwM7iiRw/
R8DVJaVasH6OgNXXyk1n/RwB0z5PvMP6OQJG7k1oz/o5AoJevjmTyvg5Ak4W
cdbxZ/wcAQ3P3Ni6lfFzBAzquP/zlVpKP0fA29Syo4ZZlH4Wnqdx6dGjtiv9
HAHzm/02vPYopZ8jYPe18VcM45R+joDwLnee+o9T+jkCHs8KbFR0nNLPgj4Z
I2YQrkVevImT4jrkic3/mk643gs3IF+xwYe6jxG5/HNNyAfsujmVcDPyE775
qPtbkN/x7zWZcKuX+9iQyz/XjnxIwO5JhDuQ39o+cxrhTuQNWl+kuOTnSAjI
zhufI2HnGJ6fI2H16ACOnyNh4adYjp8jYeqN9xw/R0L7Zd/asX6OBN2NrRdZ
P0fC6RP2D8UYPwvPP3PRhi2MnyMh7crf224zfo6EnBfLffxlUvo5Egoe7Xqo
TaLSz5FwYWCb2lmMnyOhrzYh5F/Gz5GwN9qjusz4ORKqn+k+9QLj50hoVMj3
7AXGz5Gw+PHF0xcYP0fC02m1z1xg/BwJUeaTFDcgj25fjLqPEXljXWOKm5Av
PjCKeh4zcvn9Lcjl97d6ud6GvPGbnecuMH6OBM24TicvMH5W6uNE/jxx4akL
jJ+jYawvz8/RMG4kz8/RYJ7K83M0lF/D83M09Bv+luPnaJh/Lp3j52gY9mom
x8/RED5v8b+sn6NhcL2W21k/R8OdGX1GsH6Ohl5pzdbkNSv9HA39L9/I3pzx
czQEtDAtTGP8HA0t55Vp/ZbxczQETmrY+hzj52g4ti356GnGz9Ewvk7JbGcY
P0fDtPPtfc4wfo6GI42OZJ5m/CzoWW/Nr9OMn5XXG5HPTC1L3d+EfMvQLz9P
M35WPqcF+em1Van7W5EfH+6muA35osFdqee0I392bXb6acbP0bA2pE/WacbP
0bDi4luKS36OgUtcP8d48XMMFOH6OQYur+b5OQbeDeH5OQY2XOL5OQZGnuT5
OQaML5Zw/BwDxVxtOX6OgVKD63H8HAPbrm3awvo5BhL7nvrZjPFzDHyIfDSL
9XMMvD9YuTnr5xhYsHVvM9bPMTB7svkw6+cY2HV5COUfLfL3ESWo368OeTnf
3t9ZP8fA/ZEFM1g/x0D6xnZprJ9j4FbjetT1JuSP119JZ/0cA+eTclD+tCC/
FjYlg/VzDOxNs/xk/ay83o486Pbm76yflc/pRJ51IziN9bMavnD9rIb+XD+r
IYjrZzU84/pZDcO4flbD3Qs8P6vhznmen9Vw5relHD+rofahdhw/q8G3TSuO
n9Xwpqp2M+tnNVyMH8Hxsxq6rTwxm/WzGop+2NmC9bMa6myp3pT1sxrO5x1z
iPWzWjF+apFfzjidwfpZrRj39MjlfxcG5AVb/P6D9bPy/ibkn5reSWP9rIal
KyN+sX5WQ+roJWmsn9WKvy8b8jxRq3+wflbex4Fc/nfkRB5WSf2d9bPGy/is
gdNcP2u8jM8a+MT1swaqDOP5WePFzxr4+JDnZw08asGrNzRwqnlrjp81UEDb
lONnDfRsUIkzPmtgqLp1FutnDVQ/EDuX9bMGbMFhrVg/a+DltsgWrJ81sKxV
Ow/rZw1MHHjXh603NLDq+5Ys1s8ahW/1XrgBudyfRuTyvwsTcrnPzcjl46oF
uXz8tyLf0ECTxfpZo/CnHbn8e8GBXP534UQu/3klP2vhPdfPWtjO9bMWynL9
rIUgbv2sBdNQnp+1EMX1sxbm3Ob5WQv7CvHqDS20W96C42ct5D7dnONnLbyo
ZN/I+lkLV/v4+7D1sxbmPW48n/WzFurcXcnxsxb+jc7ijM9aeJnjd079rFV8
L2uRy79ndcjl45geudyHBuSvfzZNZ/2s9VI/axX1qhn5wdBMTr2h5FYv97Eh
l4/zduQlt7zh1BvK653I+X7WeZnf0MEqrp91UIHrZx285Y7POijC9bMO6l/k
+VkHF6/x/KyD0SG8ekMH17bwxmcdFM/XkONnHdh+e7KS9bMOQpOMv9jxWeel
ftbBwHzF27B+1sFIXzunftZB2Ymbj7B+1inGSS1yeR2iQy5/D9Ijl4/DBuRF
x4Zz6g2dl/pZp/C/Gbn8PdGCXF4/WJHLn9OGfPvqf36yflbq4EAu/zt1Ipc/
v+RnPXTh+lkPc7h+1kNerp/1UJk7PuthBrfe0MPe8zw/673UG3ov47Mexq/i
zW/ovcxv6OFt9ri1rJ/1cDzmuy87Push9PrSeayf9ZD5qgnHz3pQZzvXhPWz
HqZWWsKpN/QKn2iRy3/vOi/X65HL5wcMyLP7POH4Wa+YDzEhl9cVZuR8P+sV
vrIil4/bNuTyeRI7cn69oYdRX+ZQ1zuRy30u+dkAFbn1hgFGcP1sgCpcPxsg
mDs+GyBwEM/PBih0lednA7TZz/OzARL/WM7xswE+h3fk+NkA1arqOX42wPya
A/eyfjbA0MaeDHZ8NkDNzoaZrJ8N8NjnZDPWzwZYlvW0EetnAzzSV+G8DxoU
9YMWufw9Tofcdtf8jfWzQfF+ZEDuftjkC+tnAxi3Df7G+tmgqIfNyOWfa0G+
eErbz6yfDVC/zZhU1s8Gxd+dHbn8eRzIG/9VJZUdnw2KeR7Jz0YYwfWzESZz
/Wz0Uj8bvcxvGCE3d37D6OV90Ah9L/L8bPQyX2cE6++8+Q0j+K2I4/jZCIM6
ld/G+tkIH2ad59QbRi/1hhEWn0/hzG8YAcYsi2P9bIS9hRbvZ/1sVIxjWuT8
+tmoqB/0yPn1hlHhKyNyfv1shKhWn7+xfjYqfG5BLp83syKXj5825Pz5OiPU
jD2cyvrZqBi3ncjl89iSn02wjetnk5f3QROU4/rZ5GX+2QTtufWzCfTc+WcT
5L7M87MJWt3j1c8meN+mDcfPJqi9TcPxswm6mk2bWD+bYF5cYc78hgmeebZx
xmcTrPurZ0vWzyYv9YbJy/hsUvx+tcjldakOuby+1SPn1xsmhd+MyOV/Rybk
/Pk65XNavFxv9XK9Dbl8Xt2OnF9vmBTzPE7kcn0kP5thENfPZnjF9bPZi5/N
8IDrZ7OX9RSzl/UUMxQ7zfOzGfxTePN1Zi/vg2a48s9Ajp/NoH24divrZ7OX
+WczGON85rB+NsNueM3xsxlKtmjA8bPZy/ugWTEPoEUuX3fTIZfPd+mRy/1j
QM6f3zAr5lVMyGernv5i/ay8vwW5evzub6yfzQq/2ZDLfWtHXiVHBmd8Niu+
F5zI5e8Fkp8tXuoNC+i5frZAE66fLTCA62cL/OTWzxZYksTzswXM23h+tnip
ny1we5iL42cL9CpUhuNnCzy88IlTP1tg2ZyHP1g/W0BbYf1U1s8WmPWsY2PW
zxZoHRnQmPWzcP0+/wOsny2KcVWLXP571CGf22HxZ9bPFuiUa/JX1s8WGDjp
Mqd+tijqc5MXbkYur0MsyHu3K/CV9bNFUd/akMvrZDty/nydRfH34kQur+cl
P1vByZ3fsEIS189WeDWF52craLjzG1Yv8xtW2HqW52crPH3B87MVGjxYxPGz
1cv8sxWyPrTh+NkKLwNqrmf9bIV/GnXgzD9bIdcvO2d8tsLOb9nbsX62wpOd
49uwfrZC2o3Jx1k/W6H3p5zZ2fUUq6I+1CHnj89WxTytwQs3Ipd/L5iQy+dV
zMjl6yMW5Pz5Zyv0PF2N+rlsyOWfa0cu/ztyeLneiVxe/0t+tnlZT7HBfq6f
bVCcOz7b4Ad3fLZ5WU+xwUTu/LMNKt7l+dkGCwJ59YbNSx7JBi+vduP42eYl
j2Tzsp5i8zJfZ4PphQdx3gdtcCH79uasn21e6g2blzySzcv6oM3LfJ2SG5DL
v9+NyOU+NyHnzz8r729BLv/etyKX+82GXD7PbEcuXwd0IJf/vTiR8/NIdi9+
tkNbrp/tXvIbdljD9bMdDg7m+Vm4z2Wen+1e6mc7lK/Cex+0Q6ce7Tl+tkPw
09ocP9u91M92KPdpeSZbb9ihwIaqM1g/2+HM1ItNWT/b4cWv5px6w+4lv2FX
1Jla5H9o6n5l/WxXjGN65Pw8kt3Lerfdy3yd8v5m5HKfW5Dz17vtXvJIdkVd
YUcu18GBXP4+60Qun7eR/OyA61w/O7zkNxyQxq03HF7GZ4eX/IYDrnDzog5o
+YDnZwe0q8Sbr3PA4+y8+Q0HvHP8zvGzw8v6oAPGFP7MGZ8d8PvMmZz1boeX
8dnhZXx2eFlPcXh5H3Qoxh8dcvl7mR45f3x2KMZDI3L5erEJufx7wYxcPs5b
kMt9bvXCbcjlf192L9c7kMtzs07k/PUUJ6Rx/ez0sp7ihJzc8dkJN7l+dkIF
bv7Z6aXecILhKs/PTphzmudnJ6yIa8Xxs9PLercT1s09u471sxMeNNzKWR90
wu7TLzh5JCccz+jMyW84vcxvOGGI7x2On51e8qJOxXirQy4fx/TI5fMhBuT8
/LNTMa6akPPXB50KH1qQ8/N1yp/Lhpw/v6H8XAfyKX8v5fhZ8XO5c4k8pfJH
/ZjW7wPFPo3IfcBv+dHwdbE7RF4Urz9Xr/Ouj/3fK7gP7HzoY9FliP3xPIF4
/RBr8DKb1AcSuQ/M+Lh/y+nh4vVu0kd07uds0dg3ErkPzOn8dVoOqR+jivQR
LTNQRfpMqkg/xivnGjqxX58nHK931+xPrkfuA30nNiD9/VxReH2VBKqPJXIf
SGhG9wOMxet3y/pexuL1vv2o6+NIf9G79PVxpE9jF7rfoIr0F31OX4/cB47R
16eQvqOX6euR+0BD+nqPEa+/QV+P3Ad609fHk76jsj6lyH2gP329i/QdfUlf
7yL9G5fS16tJ31FZP1XkPnCHvh59mwd6WLbWnXxD7C+K/swDpf9+pTI3S/kf
Rx/mgS73cgxusUvsg4d+ywPBP78XnCD1x1ORvojmvf47sS8i+icPZN/ylvRF
RJ/kAVdAQarPXizymdmp/ntxpJ9hLN2XD3+/eaAlzfH3mAdq0xx/X3nASXP8
veSBxjR3kX6DWpqjznmgGc1RZz/oV2eHxvb0u0JnP5i0uKJff7/sHrnOflBO
v3rG+5difzbU2Q+eH0sMPif1bVORfn2dvv67HPv1oc5+0OZKsezYlw919oOA
1GpU/7dYwvNT/ffiSJ+9w3S/ONRZ0dcOdfaDaTRHnf1gC81RZz9YRXMX6YO3
geaosx+spjnq7A9PD0T0OvTws0Jnf6ijemXLP6mo+DyByFv5zorxWSJy1Nkf
Arc5Fx+T+supSB+50OBblQ9IfcZQZ3/4813aTew/hjr7Q1vtZqovWSzyQklU
X7g40v9tPN3HDHX2h7p0PzTU2R+u0hx19ocqNEed/WEozV2kP1sozVFnf9hG
c9Q5AI5v/RQ3zfBFoXMAWBfeaf5bB6XOAbC0y5ISKZ1Lifchfc9qHil5Zd1I
sR5Tkf5m9bcGbO4k9TdDnQPgQZPgXgOkvliocwC8fDGxI+mXFYt8tyaW9NGK
I33Jiu6h+muhzgFwajfFUecAMNEcdRZ+3i0UR50DoNpairtI37AF9H1Q5wAw
rqc46hwELUYXaPebXqlzEMTpsxV9s1ipcxAYFnZ9PV5fWrwP6cdlPzV7n1+T
MPHnJX236jxcdULVUezLhDoHwdsHAY8aSP2aUOcgOFBz1wfSXysWeQfjv6S/
Uxzpl5X3X6rvE+ocBNcSKY46B8H9vymOOgfB3PEUR52D4Hw7irtIPyvNXxRH
nYOgi57iqLMKbpY+8TZFp9RZBW9+Xsjl+7dSZxW06141aHlDpc4qKNZ2WYx6
fZj485J+UFVzH8uz8ZrYLwh1VoHtxq7zvlIfIdRZBb/tdbRqh/2FYpEv0ry+
h32H4kgfp42vqb5JqLMKJv1B9SlCnYWf6xPFUWcVhOym7oM6q0BvyUG4i/RZ
ulCWug/qrIKRXSiOOodARKc67TMYnUMgOq5roagVSp1DYM+B2t3O11HqHAKR
XerO1HjE9zUV6VNkLVL+ZKFeYp8i1DkENtV2DIiNFPvboM4hkDTqfJsl2Pcm
Fvm5PBFHsR9OHOkvdGV/cdKHB3UOgYlF35L+OahzCOS/+Zpw1DkELunvEo46
h0Dl3g8Id5H+P+2zvhCOOofA5LlvCEedQ+FB1vOv6YzOofDLPfOJkdE5FI5c
cH4pWlepcyhkb553Xv2NSp1DIXjOvjFFz4jvv6hzKLSocMF16ID4/os6h0LG
2QLWiV2k9+JY5BPG7y33QerTEkf63sQ/PTYP+7egzqGwY1Is6RuDOofC+6sj
SB8b1DkUcrabNRU56hwKn4JNpD+Mi/SlKaXrQPrVoM6h0PqBD7k/6hwGP36O
SGV1DoM1qeP+YXUOA9ukCauKMDqHQc/8jgu7GJ3DoHRC7+CZd5Q6h0G2EoMd
w86K76eocxik3KhsMkyV3mdjkd/LH3Vqk9Q/JI70YwnMf3Y79hVBncNg+vWW
pN8I6hwGn89uJ/1VUOcw+Jr5ivQtQZ3DoOGNzuQ+LtIv5cy726RfCuocBsuP
lib3R50j4PKj5RydI6DE9iU7WJ0j4OlB1XRW5wgIO9p51QFG5wgofV5Tftw9
pc4RkO9lxs9DHqXOEVD3z9drNruVOkdA9vQfi4qNU+ocAQv2/EH6ZqDOir4f
qHME9Pnyg3DUOQKG1RhD+magzhHw76FspF+Hi/TxGFnoBrkedY6Au3TfD9Q5
Ep5EL+PoHAkhvg85OkfChZO3ZrA6R0KbPcWCWJ0jYXiB4Zo2jM6RsEW1olOj
Y0qdIyG6W49HnccqdY6ErLR5Ny8yOkfCnj4rSZ8H1DkS/szWinDUORIe9Igh
/SJQ50g4s+gzuR51joTMQ0nkehfpLyHrU4E6R8KQnn6kLwTqHA2hRp7O0dBg
xH2OztGwccEFjs7RkJFtSllW52iI0Fczt2V0joar158vrMfoHA3PEv4K+o3R
ORo+LFlY4CyjczTcavyQzJuhztFgKVyazMuhztEwYvt7Mp+GOkfD84Wjyfw2
6hwN3bf+RriL9D3Q7l9A7o86R8NtOk+LOsdADq7OMbBpGE/nGFg7hadzDHzI
Po2jcwwUCoy2sDrHQErQqrmszjGwzDm7JKtzDPiX/pGH1TkGXtTtTnRDnWNg
6Kcn31mdYyBi75A0VucYaD/nYzqrcwzEVDmaweocAys3LcxkdY6Bskda/2B1
VkMBrs5q6MrVWQ1/TOPprIZXe3g6q+FoUF6Ozmrw66bl6KyGXhUiAlmd1ZDv
/pPcrM5qGJ+zH0dnNcDvf2eyOqth4ag9P1id1fJ1E9RZDcHb8mSyOqshekWF
dFZnNTToXSid1VkDubk6a2DicJ7OGjg+l6ezBha14I0bGli8oTxHZw2U2F1s
HquzBrKCF5diddbAsfHV8rM6a2DMjCjOuKHY/4s6a2B5vaLprM4amNY2NYPV
Wfi5VHHprM4auLnCxRk3NHC58n2OzloowtVZC6+5ftbConiezlroqOXprIXO
/57hjM9amNfNMp/VWQtwf1FpVmctvF20Iy+rsxaq0L5FnbUQXyg5jdVZC6cr
/cnRWQu/tbzPGZ8V+2pdZF9tlZ27s1idtaAaXiON1VkHJbg66+A0V2cdhM7i
6ayDYqemcnTWQdvmN02szjrIHTKdM27oYMnzZxw/66DhyQEcnXXQ+NJcjs46
mDyqdharsw5gZlXOuKGD53RuE3UW7tfgG8fPOqj+cDBHZx183dmes26lhywD
T2c9nOSOG3ooyx039LB5AM/Pehg6vxPHz3roVqcqp94Qrt8xhVNv6KH9Qp6f
9VAmLPknq7MevlSbxBk39KApmMnRWQ/ZU2Zlsjrr4cbTgRw/62Fik4kcnfVQ
sKY/R2cDRHL9bIBTQ3g6G2D7RJ7OBnC3msnR2QCfJvaxsjobICjJyPGzAf7u
s7cEq7MBDgcWzcXqbIDop5Y0VmcD7DvR8hurswGG74z/wupsgLz0OjLqbIC+
dL7XRfbH/VWr63dWZwNM22P/xupsBD+uzkYoyx03jFB6Ok9nI5hq8OoNI4z2
cXG+B43g3DSfMz4bYdePAwGszkbIPF0qJ6uzEa7TfkOdjdB7afsfrM5GePnm
ZCqrsxEmHHWksTob5b9HF9m3lXJhewarsxGerU3k6GyCYlydTfCJq7MJ4mfw
dDbBqOE8nU3Qd/gpzrhhgpkN5nH8bIKK5h0cnU2Qu/RfnLrOBOVrr0xndTbB
pH1t01mdTfAgh5FTP5sglL4P6mwCXeJ8zvhsgmW5szh1nQlu0DkE1NkMxbk6
m2ELV2cztJzK09kM1R/zxmczBIT15/jZDK3vuTk6m2HGqcKc70EzlO49kvOe
Yoa/bcc447NZXqehzmYYEteNU2+Y4V4J8y9WZzOcmXr1B6uzGe7eHZDG6myG
Zk2Xc/xsAQNXZwt0GcrT2QKzxvJ0tkB6NG98toDvkO6c8dkCJwM98azOFig6
uVYxVmcLDOy3gDNuWKCUUcPxswVm6G5/ZnW2QOey9zjjs2JfBupsgdnpcams
zhbYWLUIZ3y2QM/d27+zOlvhJbfesMIxbr1hhYHzeTpbYXb9yRydrWDznckZ
N6xwv7aNMz5bof65VE69YYUP1SYWYnW2Qv7Sz7Ox7ylWeE6/j6POin0EqLMV
emZ//pPV2Qqru47/yepshWx5B5LPRZ2t0CN6Eqd+tkE+rp9t8IQ7btig4Bye
zjYotI6nsw1Sv9g4Otsgx9hlnPdBG2yJfsJ57xbuU71SPlZnG3wo3ILzPqjI
n6PONnj/PFsGq7MNbtLjKupsg0v+gZz5DRuMCz/Jqets0NzegzM+2yE/V2c7
POeOG3ZYxB2f7TDgAu970A6rCtfhjM92WP3xyBxWZzt8GHCsOKuzHe5MeMup
6+yQq32t7+y4YYdXbQ5w6g07uNe943wPKvLP8SRfvfPRWU69YYelD2ycesMO
L+nPRZ0d8JU7bjhgEnfccMDb2TydHfAzhPc+KNy/+DvO+6ADBqcV5owbDlDn
rsT5HnTApkWhnPkNB5w4Mz+L1dkBBfvd4nwPOuTzbKizA7rS85/xJPdbPWAq
p95wQBR3HskBtW4M4vjZCelcnZ1QmDv/7IQ5M3k6O6F4RZ7OTnht688ZN5ww
aK+a8z7ohJhpmRydnVBryxzO+6ATVPP3cOpnJ7hKleTMbzghmL4edXbK67R4
kkctP/0fjp+dEOoZypkXdcLA5SM574M/K7uGXhy4ocAuRf4zvXJf7efTAwff
V+Q8v1euY5qS35HrqSLP+bXy8u3OjY1GvlTkNj9VLmXu5vPX57eKfGZW5cld
Sy6/PuCyIoeZUflRkfc7m4bdUeQtf1QOdK2+0GFKsiJXmVp54f6kw3N/PVfk
Jz9Xziiatf3soDeKnOSvyqp5tjZP3WcVecjMytdGDi1yP/qmIveYVnlO7PXU
6oGPFPnGb5VjP5XodXvcM0WO8UvlyXWr/1Yg7ZU8xyj8m9h9SYERnmMKP+cE
q8/dOTO+PpHnGN3ZYU+7O7ujLt9U5Bh94W2fy8NfvPTIc4xuH+jyeJFv1467
FDrnhq+ju8c/7PRWnmN054Rnr7XPPh6Szm2XdM4BpT9oe/jE3JPnGN2+sCPj
V+maJ88pcozZwJP30PS5vYfLdXbnhh+GTapKS94rcoy5IP/R+P7Ory/kOUZ3
Dhga/3Hy38seKXKM2cG16mD08bir8hyjOxtMvhpSdW6xRHmO0V0IxpQO+5n7
WoZC54KwZuiEnM8+/FLonB8K6CNOLj6QrtA5H+S9bdF9/Ziq0DkPlJoXm1or
3ydFXrQwPFjw8WVwWTEniToXhBGt6zuubpHOTZZ0LgCFM5tH5R6UqdA5H2RW
Kfngz/jvCp3zQvPxd6Ynbf4sz4u6C4PnUXD/Z/9K+UxJ50IwccyY8/NHZfPI
dS4AevDUiC+RpdA5P8SPHfvtqyZNoXNeeHq86vrWDb7KdYZi8HHT182nlyty
jMK/4xctruS73M8j09lTBFwD2jd+cKCAR65zEcis988Iq0rcNyHpDH6QvcOr
y/F3xPOjJZ3dxeDcWN+1x3MXlevsKQp/HKt37UlnP4XORcFX/+1dNndBj0xn
KAL/NLTowJzPI9PZ7QcRf40cPjoll0ems6cY6H+MbbBvrvS9I+lcDK7MKd/v
9r9+cp2hKNxsN7Xih4WFPDKd3UUgbfalvlFx4rnDks4eP7Cd9dvXPU8ej1zn
krDg1qQNR8yK70F3CZiabef2mfsU34Oe4uBryPHAdbiEQuficGjFzfXZdSUU
OvtD01KRBU3PFXlRd0kY3WbwtWGPyih0LgHpo040zTG7tELnEpDU1rJ5VrVA
hc7FoUa+ldlLf5M+V9LZH/Zszd1u3QZ/hc4lwedtXW3qqmCFziWh+cQdU93N
gxQ6l4CzqoBn+fOUUuhcHEpdH21beKCkQmd/mDzkxdyQXsUVOpeG8b8G9flT
mWN0lxKuf3O7+kKlzoFwKnrD4CWzlPVGINydF/BzZOVyCp0D4I+7cdVWFFIp
dC4Nv9+e5TtwV6hC51IQ8jVRpVtZXqFzKRj/d6ch6TNDFDoHQo98ky4fGyl9
rqRzAKi3bqgwpYdKoXNpGDi4Z7YbhZQ5xtJwKO/MVkszyyt0LgVrmm/f3ult
iELnQFhQ6WquyDvlFDoHwJjbn9t/OqVS6FwWEu4nXH2vrOvcwTD1+OXKO5V1
nacMbPqnUcKRZkqdy8D4LrWqmk6GKXQOgomV/TwT5inyou6ycKzw3atWmyLH
6AmGLYOePUpKkPZVSToHg/9e27R6ucIVOpeBAv16Xzz1p/S5ks5BkCO7MOhe
VeRFPWUhqfajT3d6K3OMZWHj5166pjfCFToHg3NU9kGXLOEKnctA3Xdz9tT6
O0yhcxBM1of+OJYjTK5zQjlo/lufBCbHCOXgS7s1JwxKnZNVsNQ3n/Wf2gqd
hX+vhHbNWFBWUT+rVHCgke+EYdEV5Tp7ysGBvQdGzhxcSa6zqxzAnrgdaX9K
5zNKOpcDy4BDVSZ2jpLrnKAC98HVP4u3jZTrDCp4GmLbs7ZJRbnOyeXg0ZCL
MP2iVM+LOrvLQfTlVmmlT0bLdVaVg90H8u7cfDBKrrNHBb5DdvWw7YqU6+xS
QdzaduUvbKqo0Lk87E7d+5l5T4HyUNW/TjvmPSU5BDp/6BhaXvme4g6BPDOz
Rb3ardQ5BDR9Uwen3lLkRT3lwXX6x9abcYoco6s8/F2hT+l2BZXvKeWh2b7v
fco5NAqdQ2DG9AauEr3UCp1DoMHAY6VLWGMVOpeH4Wk5+84OUeQY3eVhOrwI
mthE8Z6iKg8/bfsvDR+nUegsfG7g5xF9dqoVOofApc/Hmp89GavQuQJs8BnH
vg9CBYic/2YPq3Mo+PY62ZZ5H3SHwgdDoVOjle+Dwr9v/NtWj3qkeB/0VADj
3OtDXTsU74OuCtCpYYtq3y8qda4Ahb70f3gxTfE+mBAKQzMWNCxRXpEXhVDI
cNXs26m+Ii+aXAEatFuzv9dixfuguwJ8G7Tm5f7jSp0rwKL3Owvneq94H/SE
woUMi6VJcUVe1BUKNZ/M/22FU5EXTQiHfOoVHJ3DYX6Vs+x7d3IYnN+eNZHV
OQxST70ss5fROQzmvS68Iln53i38O3t5m9E9jih1DoeZj4M6Lxuv1Dkc0p+V
MT6eqNQ5DHblXzVo02TFezeEwfjRec8OlnKnqHM4fC2j+rVZ+d7tDociNS43
HTpBqXM4TL6ZuqH6RKXOYfCq17BsRaTPRZ3D4LvP0GYPpyjeuxMqwptwzvwG
VITm7e5xdI6AAgONM1mdI+Buon9HZn5DFQGPcjT51ITRWfjcF6PmjVbOb7gq
QtCH/IWimPmNirCn+EpjX+X8RkIEXKn6e5/6yvkNiIBfmg+7KirnN5Irwu6R
w7UeRueKcKvu4WHLlfMbqoqwosb2Q8OV8xueCFi3/g/fVsr5DVcExO85Xs2g
nN9IiIK6vHlRiILrUzjzSMmRYHGcY+eR3JGw8/cTZVidIyG8P/zBzCN5oiC0
d3DHuozOUTBiSfJcF6NzFBzqFdf3PKNzJITsX1HnPKNzJNzJ3iyGyYsmR0GN
bb3rnGF0joLmr/KpzzI6R8G15vWKn2N0joR5hVdmnmN0joRaydUfn2d0rsTP
MUIlOMCb50+OhjaTOPN17mgIyc2Zr1NFQ9y/Ddj5Z08lONtxITv/7KoEpYIe
cub5K8HNSZzcV0I0NPv3JTsvCtHQyTCZXU9JrgT+ocfY+Wd3Jah3sDyb31BV
gl/Nv7PrKZ5oqE1fjzpHw44lu9ncV0IsFOTqHAuduDrHQC9ersAdA+ltOPP8
qhgokfsnOy/qiYU8wzqy67CuWOjaN56z3h0LiW2XsuuwCTFwYXoKOy8KMbDL
FsvO8yfHwvA7s9icjDsWehQzsPOiqlg47ruRnX/2xICh51h2nt8VAx/+GsnO
8yepITtP5wQ1jOfN8/dV83OMoIaaDzl+9lND4dERrJ+T1XC6yVdW50Q1WFqG
s/PPbjX0H5fEzj/HqcHwvBW73q3ykhdNUfNzjB7FOUSSzvFqiHv5gl23cqnl
61OSzmq1PNeHOmugKFdnDSTz/NxXA+m8HCNoYPQGzvqgnwY2TODkN5I1MGHa
QnY9JVEDC2M/cnTWwMu7Z9j1QeHf7XnL/GJ11kCL3VXY9cEUDaRaJ3J01sjX
E1FnDay92ZrNfbk0UL7gTHZ9UK2BnS0S2PWUJC0/x5ighSSuzloYx1tPAS04
v3HyG35amDn/AbtulayFByOGsOuwiVooVHARu97t1sKku804ftbC4mbFOH7W
wjzLKnY9JUULR4Z2ZMcNjxaucf2shZq8dSuXFvLOrcjRWSvPj6HOOvjFW7dK
0MFu7rihg+zzeDrrYExV3rihg08VOfsmknVwdeCNBazOOnjVsxCby3ULnxvw
J8fPOphe8gk7Pgv/dqPX+1BnHVQdlMLRWQdzdwzj6Kzj5xhdOhg44uAvVmcd
/P5pwE9WZz1Ec/2sh0xejrGvHoLH83TWQ66bnO9BPz1cKrOezckk6+F0rc9s
TiZRD/P772W/B916fu4rTg/3Cpo4OuvBxtufIvx76+JpNifj0UNH3r6JeD1o
6H6kqLMe8tG5UNRZD12yneKMzwYozNXZAOm8XEFfA+Tl5Z/BANfCZ3B0NkCv
HjU434MGOH76KMfPBmhkNXJ0NsCmXEdysDob4L6nHJtHUhlgztktbF40xQDD
uy1hc4weA2zrdf0bq7MB7hrvcXQ2QFauE2weSW2Q5xxQZyM/z59ghFTu+GyE
S7y6Doyw5jhv3DCCfcRTzrhhhKRrRTjjsxHq5/Vj62e3EQrf683mN+KMsIv+
3kGdhftcGMjWdSlG+NAzkq2fhX9b0fUD6myE+fQ4jzobYf+WUE69YYTboT04
OnvJiyaY+Put+pqgBC8nAyb41pA3bpggXyMdx88mOJqzGKeuM8GJ2rk4Optg
Q7UDbP0cZ4LRwSc4Opsg5+rhbF40xQTm+y059YYJltF5MNTZxM8xukxgWliN
o7NJnvdAnc3g4OpshqHcccMMr8bwdDbDX3N4Opvh4+qDnPHZDP8uHTyL1dkM
43+fy+aR3GZomlvD8bMZUtrd5YzPZhhlKs7mZFLM0IPuJ4k6m+EH3R8MdTZD
+tcmnHHDDJaR1zjjhhkKXSzD5kWTLPCIW29YYAW33rDA28U8nS1w/x+ezhZY
7dOMM25YwHo0js3JJAo8dQGnfrbAxjG89xQLFKC/j1BnC3ytGfWV1dkCr+j9
mKizBWrGd2Tfu+MtYKf9jzpboAm9fw11FvjOEM73oJWfr0uwwnvuuGGFZ9zv
QSuUHMp7T7FC/UexHJ2t8HVNOmd8tkKnqeU544YV3Ms4+2HjrNCh/CY2L6qy
yvvmoc5WGEH7HHUWnv9MG874bIWMcnrO+6AVCkw94MPkRdVWuLysCkdnG3/f
RIINvnLHDRvs5u2HBRucq8T7HrRBb7+unPHZBpHX5s1mdbZBl8YFOfWGDc7n
Ksnxsw0yNCU57yk2+b5g1NkGjlylOOOzDVLocz1QZxv8saYDR2cbZFuSn90/
qLZBp8OJnPHZDh+544YdhnLHDTu04L6n2OHaJ57Odng+JonzPmgHw5TJnLrO
DvpG89l9x2477CvB2XccZ4dJMxZz6jo7dOTl61Ls8lw06myHWvR8COqs6MeL
OtthBr1fAHW2wyf694U6O/j72hIcUIKXY+zrgAK8/SnggOg9vPduB4zNnMQZ
NxzwOmkuR2cHzK8zlvM+6IByvP2wcQ64Re9LRZ0dkEjXe6izAxqsusrR2SHv
e486O+T1OersgLXtx3HGZwcY6Xk8qV+roPeQ8zmjtlwSdZb6uwo807/t1f39
Toh5wjx4/aeNTydP7XxDvN4P+YsmBVPLt3oncn/kE2be2Zs/4bXIA5B7bjzt
UjbrlciDkK8acHVUbrV0vQp5vtmzRi2KkngI8nt9h90bhzwU+aXeBx7PRB6G
vNO+330IjyD3Lx6cjfBI5LdTMygeTZ5/6EeKxyBvNYXmauS3ZtNcg7yGjGuR
N5FxHfLuMq5HHifjBuS/ybgReR0ZN5Hnl3Ez8mYybkHeT8atyCvLuA15Gxm3
I+8h4w7kVWXciby2jEt+Lgqb/c7dmtfqocLPRaHKwd7GwLaXFX4uCkUDxnfY
e/u7ws9F4VOMuXF649ye/3F/5NU8nSJioYjIA5BH5Xx9ecRgMbeGfi4K/Zfc
vLL4RWGRq5C39Dl5ZPI2iYcgbzT5W5+22yUeinxQzupvXyEPQ179RPtvt5FH
IP/nj8+t7iCPRN7auuwPwqORt2tSvBvhMcgvJ5ehuBr5uu3BFNcg/7ac5lrk
CStorkNe4W+a65Gnya43ID8tu96I/KHsehPy8rLrzcjryK63IA9JoLkV+RfZ
9TbkT2TcjjxJ9rkO5Etk1zuRj5Rx0c/C91uD4H2PpmI/7RTMlfdYte3R1RMK
Pwv8gLp/yrE7ij7bAt/Q447HUk/RZ1vgk+76Jrz6Jub6JD8L/PG3n5ufVA8Q
eRC5/69j2Q9+FPONkp8Fnie46Mxn/4g5N8nPAlcNOlElpo3EQ5EX3HJsXFaM
xMOQ++XIt3OvTuIRyK2Dq7ZfgDwS+aOc3U/NRh5NdIv6q+oc5DHI2y9oUZlw
NfLIGsUprkH+Y2ZpimuRL2hMcx3ytW1prkde0k1zA/Ks5jQ3Io+vRHMT8pFN
aW5Gvq8jzS3IXxenuRV5YD2a25C3iKO5HfnEgjR3IL88i+ZO5DX601wan1Xw
eWjUz0ZKPwu8WIHkRaSffB68fmmOOal9lX3j/7tPuSOrjin7xgs8fcvzigM0
ir7xAu/QRVvI9VjRN17g1Ve0WdVwj6JvvMDv5SsetH5OmMhDkF9rlnzq4k8p
9xiKfGfHd3uy7Zb6yYchX/D00rGCecRcHI7PKuj/JWPniOwSj0Tet8CUQcm+
Eo9G/uhOnlyfkMcgfz6m2qIU5GrCL2+ZRbgG+aZCk+IJ1yKPzjuB4jrkng2j
KK5H/i29P8UNyI/kp683IrduGUtxE/Is4wCKm5HffT+M4hbkkdOHU9yKfIdj
HMVtyFuNG0pxO/KTm0ZS3IG8eRn6/k7kjZ/R9xH9LLxP/OkXm1ZP6WeBO9tc
+cX4WeDBbW3NmXMQBD7/Z/F5zDkIAj97b1BwvPIcBIEvuzD/0W7lOQgCzxz6
s0+a8hwEgTd68SDuUnnFOQgCPzS7bdRzi+IcBIH/qJj2+GoDxTkIAtc8bHJ4
8zDpPSIC+Y7vJ5z1b0t9ICORH8u24/fvDSUejbxaYvfvw9pIPAb5orwb80Uj
VyMf3lv/oQJyDfJ762tOCUOuRZ7/b7ObcB3yJ6VfjCJcj7xhQn3qegPyPLZG
1PVG5LuPHhhDuAn51OUPRxBuRt44W67xhFuQvz04mrqPFfmRn1NHE25DHua+
Rj2nHbnfnUHDCXcgb/mi0GTCnch/dqg9lnCp3giHuI/0+R1SvREOL0q8Z/0s
8LytirPnegi8gR7Ycz0E3vZZjbvMuR4Cv7h7JHuuh8ADfp2+wpzr8V/u0VFx
F3Oux3/P83ZMDuZcD4G/v7B62gPluR4C77d19M8wk+JcD4H/kVQt7oPyXA+B
JwZVmTtotMSjkTf5deXRH5i3jEG+dkW587WQq5HfvvtAWwO5BnmnMc/6Ea5F
nv+vBhTXId+0ZkBfwvXI92+6TnEDctP0KxQ3Im85YjV1fxPyE5mt+xBuRr7O
04i6jwX56+5HehJuRX4orSJ1HxvyW8OXUp9rRz5rWg7qPg7kS+5mUPdxIr9z
7hPFRT+7omDsKI6fBZ7oy/GzwBdP5JxTI/CWhzjn1Px3vfEde06NwAeOSGP9
LPABsxex59QIPO/cBx8ZPwu8TqJtK+NngY9b1Xsac06NwO0ZXZbmUp5TI/BV
3cddaqH08386NJpTKEN5To3Aj/5e4s67cQo/C/xevlW3Mcco+VngPSZGVcZ5
MMnPAs++HsYQrkVedqxrNOE65FPG5R1JuB75hBox1PUG5CnPNowg3Ij8fqvC
1PUm5DW3OkcRbkYe0KwS9ZwW5CUeN6Xub0X+ZW1O6jltyPu3WUF9rh355ryr
hxHuQF63QC/qeZzIv173obh0vlIsDB/J8bPAk3l+FngJ7rlLsXCHe+5SLOzk
nisdCx7uuUuxsOkM79ylWBgdwjsXLxZiCrXjnLsUC4VeN+acuxQLF6d+3Mye
uxQLR9wJnHOlYyHyZVI8e+5SLIxpltacPXcpFlKis5qy5y4Jz3nuPudcvFgw
0zkTPHcpVt6HE89dioX+zu/UOUd65Ge45y7FQg7ZOYxG5PJzjkzI+ec8xsrX
TfDcpVh5Pzo8dykW6tB5Wjx3KRY+cM9Jj/VyLl4sxBXZQD2nE3nRseE/mPnn
OA0c5flZ4Ld5fhY499xSgWfx/Czwj7xzSwW++gLHzwL/dJ/jZ4E3ieecWyrw
0JGcc8QEXtenGetngc/5UoX1s8Cr736WxfhZ4B9+v8eeI/ZffvJsffYcMYHX
OT2SPRdP4AMKFWbPERN4hRV7fzF+Fvi1ASt+Mn4W+FmZb/XIZflkyc8CL5SW
xZ7zKPCQxqvYc/H+03/S0kzGzwKPKvGTPSdd4C3co1k/C9yUUD2L8bPA8/v6
/GT8LHD1uVdpjJ8F3vJHc/bc0jhFX1N8H9RBAs/PAg/JzvHzf5znZ4Gn8vws
cOD5WeCBvPFZ4OobHD8LPKcPZ3wW+OQ/W7N+FvgMaxPWzwK/qmu0ivGzwH/c
3/aL8bPAvz4exI7PAq9wOqgN42eBN1lVsBnjZ4EXaPuGPYdX4GPubctk/Cxw
u/VhJuNngaueXshi/CzwK+P/TWP8LPCURCc7Pgu8EN0HBt8HdfJ8Eb4P6vjn
8Ar8aewP9hxegcvPi7Qh73GnHHuutMC7uupmMn4W+EnZOZVO5MXpfILk5xQ9
jOT5WeAO3vgscCfPzwJX8/wscNcgjp8FvjGJ42eBrz7I8bPA/XTLWT8LfOks
F+tngWd+M7F+FngP3yZ7GD8LvMFRHXsOr8Crn186k/GzwBv/G8TWGwI/1aFI
HONngXc/OZGtNwQuy/9Lfha4rL+T5GeBa8fv/sb4WeDj6D6ckp8FvuHo5i+M
nwVeYHLe74yfBX6235g0xs/M51qQl5n49jPjZ4F/Cfueyvj5P50j09l6Q+BX
HYe+MX4WuH5Zrm+MnwV+aPau74yfPUZYy/OzwFfy/CxwFc/PAr/O87PA8/DG
Z4E/5I3P/33uJY6fBe63nDM+C9z9kHMOr8CtPSysnwX+tqqWrTcE3kM1mq03
BN51aTrrZ4E/W9CgJeNnge9OdrDnlgq8WdTCg4yfBV6f3v+C8xtGOKRvkMb4
WeCy/mM4v2GEsAGd0xk/C7zJNyM7Pgs8JeAUW2/8l7O4Gcz6WeCy/lE4v2EE
/deN7LmlAi+ybFEG4+f/9Hzdn/WzwPfnncbWGwLfsfqfn4yfBf5eVueLfo43
wzienwU+lOdngTt4fhb4Sp6fBX6Td066wOOucPws8A37OH4W+PtnHD8LvIKb
c076f/fpVo31s8D7z+27i/GzwK/ueJrO+FngOSIeseekC7zRFnszxs8CH9nr
b/acdIGP3lmCHZ8FLq+Htchl/WklPwt8mmsfOz4LfO6ERez4LPBa7zZ8Y/ws
8PV0zkfy83/842b2HF6Bz2vy9QfjZ4F3/mBIZfws8FzVU78zfhZ4X7qPseRn
gcv6iEp+FniE/6PvjJ8Fru3RiR2fXVY4w/OzwMvy6meB/+Cdky7woDW8+Tor
FOSdky7w4PMcPwu8zBOOnwVe+8si1s8CX/eoBetngQ868RvrZ4EHbo1iz5UW
uGdpVfacdIHPnqli3wcFnsP1sTXjZ4FbPu1qxfhZ4N1uFz/G+Fngg/vX9z2j
9LPAM1+qfjF+FvhR2TnReuSy8wJwvs4KX+m+7jhfp7zehHwCfX4HztdZ4XyZ
UlmMnwX+7Vu/DMbP/+ncqgT1c9mQJ8rGWzvyJV26sOOzwHvRfV9xvs4K+lxb
fjF+VtuhD8/PAn/FG58Fzp3fEPhu3vgscD1vvk7gDS9x/CxwOM/xs8B7F+SM
zwKveIYzXyfwZjrOOekCn5ezH1tvCPz6nl7sfJ3AHc+S2HpD4FvK12fHZ4En
JIax9YbAR6uqH2b8LPBB3fez9bPAxzWs/Y3xs8C19PkCkp8FXlT2/W5ALtsn
IvlZ4A2en2brZ4G3PjmHrTcELjunQ/KzwPfK6gQrcrfsPdeGPP7Pmuz4LPA5
svHfgTyP7P3UiXwevc/L5yfJhYY9LXLV9EPM5RYCid/sOHrl04di30Iohvzt
8UZLfHaKOT0oibyHI6b0ihQx/wmlkT8+PEd9VCNdXxb5yoC0npOlvF9COeQd
Oo7oMhZ5eeRP7bv9ZiGvgHxR+0FZM5BXRD5+dSbJEyZEIf8+nsoZJlRCXmIS
zWOR55hD8SSS/3TSecUkkv9sLuMk/9lTxkn+U5bzTCI5z/oybkTeWsZJzlOW
L00iOc+hMk5ynrI8ZxLJecryokkk59lbxu1e7kNynvI8ZzrmNo++nPF1cNBF
kRcEiffWjqm2V5vL87//L4F8dIH2r//QijlMdynkX4zz4m/4iv0G3cHIn63c
W+viJjF3B+WQ7228OOM3KY8H5ZGvet/5ySfkFZCvTqz68xbyisjzOOd1x1wf
VEKuN1F5P4hFvvAAxRNI3rIMnatMIHnL9XRuMIHkLWW5xwSSt5TlKhNIrvKa
jJP8ZC0ZJ/nJGDonmUDykx9k15P8pCyfmUDykzdkz0nyk8tk15P8ZC9ZTvI7
5iFDdw34NfvULnFcyg8SD9sekTrOIvbz9BRHnvTbpYwTB8TvTU8Z5Gtce/6Z
nCL25Usm+cZyAzrtTOog5tmSQ5Dv3lGk5CWNxEm+0Xfm7DOdpfxbMskxdvrx
vATm4pJJXvH7+GkkL9eX5BLXVaBydH1JLtFD5/T6klziy3Y0J7nE+aNoTvKH
XWNoTnKGFzvQnOQJI6rRnOQJj8meh+QJg4vSnOQJv06hOckTThxA5wa/Yj7w
R+iyc5/Dton1Uj6QeP8nHdY9zP9THB+KIx+R52ChyculuqgMcr+tzqf9doq/
X3cI8tsN5kTM3iuda0xyfeaGHd99ihVzX26S35tqavD+oJQHc5Oc3i1Vz9GY
EwOSxxu9bR/JjwHJ3dUpSeXlgOTu3h6icnFA8nVrf1E5NyA5uueRVF4OSF4u
c9BfFCe5uFrDqfwbkFzcpW1U/g1ILq5DOTr/9glzbp937odrqWJfaDfJuV3/
OPrJ/DVirh5Inq3lz5uD5tQTfy9AcmtFVjTO1qKe2PdSFYLcPuZc38PDxfpT
RfJmwx88n537htQXjuTK6rqX3xgi5Zr8SH4sdGfPT5gf8yM5sZrLg0ieyo/k
vuKc40nuy4/ku84uu0ryXX4kx9X3yDqS4/Ijea0HI2ZS9ye5rCbPPk4i+ass
zFnlqrXUsqT6XdHPuUHi9bOC/qxQXOwn7FMY+aKEzF+jJon7FNzFkFs61Rp8
5pfYJ9ZdEvm2Poe2Jm4S3wvcpcl9Do/c32uX2D/WXRb5n8PHqzpaw/7HPeWQ
9wiq9O7ud6k/Z3nk71PO+ESelvouVkA+5njQ4kvrxHrSUxF5maa/3mdJ/eI8
Ucjz5z/mOCXVn55KyBdk7S9cX8r5eGKRv1xzbzLmf5JJzqrgj/7dCSc5q1LT
tpLcUTLJWWk3bCa5pmQvOatkkqc6M9BG3ceIvGpmY5JHSiZ5qorHu1H3IXmq
oX3DehFO8lTbv97tTTjJU10dOoL6XJKnCp03neSmkkmeyjepM/U8JE/19JKG
ynFlYD4qeFDmklkzk8TvU7Hu+i9HNO/G1hvXc4j6F0X+YUeeZ0uMUj/kEsh9
e+1ZvbG16DdPKeQ+cds3lnOI+wg8wcizH90ddOO+1Ne3HPLC2bZ/XjZX6kNb
Hvn79tMDD2QX/eaqgDy9c7VmnnNS/8yKyF+E3fq8d4b487oqIV9TwBxxU/Kb
KxZ58MSwQvi+mUjyTlf8svXEfE4iyTvtK3uM5H8SSd5p54OnJEeUSPJOW//O
TV1Pck3/5swk+Z9Ekl+6V78bySklkvzSX+XvU/cn+aXxHUdTnOSXSpzITn0u
yS+9qFifup7kl8aq65G8UyLJL1UocpzKKf3APFKJbwM/Fet0VByvCoDEB39d
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
9LqYHufI9Y55uvfqY/vhten13k96Xaw+soniDdLr6tfmUlzhkl43oMcbKk7L
ty1PHCLPa589XJBc72b7uYNvbxjzB1rkenlN8Y8SHTdUXVY1/31274MrFaSn
lSjes0rT61zS66rqtDhEnbM+O/SOxh3S6+bO17gaN8uec2RTMMV80i374I8b
Iiez1zv43f7q4op187z9Ai/84/vqt2V9TjXOlj0SLe6+r+7Blij+YSTSruKf
WtLr7r2u6XUu6XWJB9r9W/VdLPuTBk2vc0iv+3mHFnfFSa9zo7t43CXqMeZP
pth5AT54NXyT7Xvgpefy+vKz9wFRx/Jw2IrK9SXHR+h1eTHf791ZPtrgTTXR
Wefr5L3WEsV3Tr7hK5I6WC3pdffX97Uofcwiva4uFSI9zSW9bvDAZ3QvV44b
+P7G8WbFHdLrJp7OpDqHcdLrRoveJX3PT3pd5ubBZvZ30e+fOl7Q9LrpcUa/
h5Zr53I/6XWrL/U1qnPTJb2ua/IXul8n2y/qxbWdpjhK/r64t2Y698G3ec4v
0uumln7K/ZLAS4bCdB65pNd53rvJ9oB73q07pNd57snIdoq6OqZ2ggdMvhjg
F77Qzh3ZfvDRFZ3ct0Xcmxo4z/1xxL2p8jT58bmk1/3glnF/EPCeiQHupyD0
QP3daJz0usLBzVOsv5inRv9N8LQprhB1dUz+m+AD+zQfELW+AvZwcS4fB/B1
XXf4OAjd7KtT3FdF1LE58x33qQFfeC7Kvzt4jn7PxCG97i/9PmGc9LpnL/3N
fR7Bb+v34hKk13n82vpJrzsbqjnK1ouoe2DymUW7lpnGX8QhuwzrAjz23wT3
HxT3EJa9X8jWBfh1vd6IHB+Rfx/L4T6hGI9HJr8S8a7ZNP/Bk45h/oOPH13E
/VXBO9+8xb87+Obql2ez+Z+t16l9JmRXmnxbhI5X9oT3C9/T6E8N/p5pnoNf
MPmfgocWt/F5Dr6ht53vV+B/zlpdyPoLfujrJPeFBLd2V3H/GqEf6u9q5TiA
b9X/v3NIr/Pcw4mTXlcw/f73f5ZnPVM=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHn8VcP/x+9yzpnzmdtiiUqWSJIW2beypGwlpCSyhCSRJRUqlaxZvvZs
2QnZQ0jZU8mapUJKUgkpRFL9Xk+v+8fvj3nM686dc+45586Zeb9f79d7tj3t
vK4DSoVC4fJQKJRVN1YpqtBWX2VPlT1UNlLZWaW1yrFpobCX6vt0QB3VrVRa
qtRSaaGyk0qX1H1vU58jU39/i/BRwm2E7xBuqHrvgs/VTe37qH5A7ZOzQmGp
LmBNUihk+ryk5M/Hqc8B6vOw2haoz+6qt1bbVmprq7KfSiOVfQs+V/fUbQ+p
X9fU93Gv8Caqdyn4OjZT2V1lN5VO6tNc9Y3qU6N6R5VmKp1T39NNaj9bpZNK
Z5WfdA2HqN5R3y8XPkK4ufBZqg8v+/Op+nyMjn1a+EThw4QfFz5T+BThicLH
pP79u4WPFt5V+E7hdqp7qZyo0kftJ6l+oexncHLBn3N9XqZn85PKQfp8asHn
7av+vVW/qO9f07X9qO//1vN8PXPff4QTfbe45O9+U/lU5TOVP1S+UPlS5dnM
bb+o//OZ21YIvyA8h+OEXxT+WniV8GrVX5X83XNq/1z1r2pfpXp2yZ/nqH07
/fbmusbPhRvxnwi34/9U2UblK7U3Vr2Z2juobqqyg8qBKtuWffxE9Zmn863U
+dvrcxOV7VXmZq7r69ifM/9XOwn/rb5zSz7mcbW/w73r2JeFv+O+hV8V/kH4
L+Go45YL/6xSFP5e9SKVDSoLVBaqvJK5bbX6T8rc9qdwLfX/hXtXeSvzc9mg
9rczX0dB1/OE8HvCS9T+tPAs4eXCTwnP5D8VXqv6G5VvVV7KXP+u9meEP+La
hKdkvsa1wutUzy/5fvbTNWypspXKObyHKl1UBvAeMtZUTtaxO6vvvTr2KOGN
hW8QPkO4rfBDwl2E6wpfL9xKdZ2SP+/HWNJkcYna9+WdFb5Y+B/VX6t8o9JH
7fur78Nq7yfcUXg8/VU3UtlSpZvat1B9i9rPFj6U/0d4b9UNS/6ur9rbq35U
7WcJdxB+TPhM4QOFHxH+W783V2Weym6MT9UXMCZVf1X05x3UN6jkKp3Up0b1
tepzmHAifJXwocIl4SuFjxSuLXydcAvVtUr+3FwlqlRUtldJVTKVwzPXV6v/
EZl/5xrh3TNf14XCe2R+NgOF/1X9rcp8lfUq36ksUNkzc9tF6nOscAOd52bh
A4V/V/tlwgcIrxQeLrynvq9fcr/dVTZT2VzlaPXZRPWNief37VS2VRmpD71V
Tit7vmfe30blMI3LJqqvYQ4Tbio8pvzfcC1sX/B3WioKOxT83eX67nSVM1TW
ZK73UucrVPdhnuM9yDzuWqh9hXBX4VbCizO/802Ez2ceLPu739R+rOrWvLOZ
r3FP4UNTX/tVzK2p5+brhX/NPJZbqu0v4VOF9xD+Xbin8C7MqcxdutHzE4/3
jUoe6+PV/pbqxWrvmXl8jBU+Rrie8P+Ed1W9acmfu2Z+rjep/U/hXjr/bjr/
MNUn8T6prM5c7672VcI9hNsID1J9XNmfV6q9u+qd1T5E9fFlX+slKiewVqgM
VOlWdr8/Mrftqv6XqT6l7Pv8IvP7vanav8w8d9ZjLVW9RdlzK+tXRc/qf2Wv
cVH4huozzIWvK3utY82L1XVzS9UPlr2usr5uXV1XWV/57uTU9gDreIvq2l+7
OkYYK1nVLsA+qFuwDcD3N5c9dhhD/DZjjL7Xlj02GaN6tP/910yTV5Y9Jmm7
mvtOvXazPvZOvXazpp+W2lbBJrlceLDwm8LfUau8pTI+db1Y7YtUv6vyHp9V
pqm8r/Jk6nqp+jyR+vslwo8LvyP8o/BC1W8X/HmU2i9S/Qb/f+p7xubplfq5
YPMcn/q58B71SH2fvF/YM42r4xl7ied0K/9/6v8DO6Rn6ufFOMfuaiA8rmy7
Cftpi6rtRH1/2et+e+FHhc/mnfl/9saBwo/wrFQfrNJB5QyVjiqHqJyVuu0x
9emXum182TYItsj+VTuEGhsMGwRbhPPyDLqrHKdygfp0U/2s+lyo+tiCP/dT
OUKlk0p/9Tlc9RP0SX3cc2XbL9gx3EPfgu0l+j2lPjNV/1T2f9tD5XiV4Wo/
V/Vk5qHUzwUbkrGJzbpxwTYn9e1l21r1hO8q2ybcXPiesscO9i7PlzGFXch3
2GObqh5b9rjDduTzkNTP8SW1DxPuL/ya8NDU9/mq8MjU9z9V+GLVPVVOUBmU
+tlh+w1MfR/P0yf1//Ey95j6WWC/LVU9o+D7n6D26aqXqf0x4TeEfxC+Wfg2
4Y+Fbxe+T3i28Ivct8odjEu136v6M+5FL90Xmg/PSzwWuBfsxTZqn632Adh4
jMeCz3uHjn1A9ec69h5sF+G5wlcyH/EulP39KJXLGdNqH8k7Vva1jCj48//U
fpPqD9X+oX6rjuqK2u5WGa/2Ofp8k/Atwh8JX536fO+xHqjUVdlI5aPMdS18
EdUNVBqqzM5cb6z2z4Tr0x+7W3VzlZ1Uvlb7jvRX+7zMdmWD1LZ8s7K/m5bZ
zkuYDzLbf6nwB5lt7hr8GH5HZROVjzPXtVlrmI+Zh1U+Zb3gulP7K5uV/bkl
fcu+/1mZbc2oPp9kPq6OcOfM9sWYxP/b8IKf9Z0ql6hcyvug8oHKLJWnU9fL
dfwcxiBjUuVnnjfPk7bU891f6vNM6rafGSfC3wivEn449XELhefxbqm8rvKQ
2l9RvUDtjwpPFV5U9nFTCv78oNpfVv0d4yH1GJov/DnvSsHf/abyKeNQ5ZHU
5/5efb5UPang37hbZajKMOYRnovqX9RnYuprWin8lOobVG5UuVbtV6p+X+03
pm6bJXyN8GjhacJXpD7f28KjUz+/t4SfU31zwWPuGcZowWP0BvW5nufLM1F9
RcG/cX/qY74t+z0Yo3JdweP3Gq6FNvW5WvV0nhXvQ8Gff+UdLfh+rk993Ez1
uS71cTOEzxfuyrWwJur/L5dsmx7CQqn6Co2H27R4llmLtGi/ocX0Ur2zhwvX
UXsT9RkuPEXtF6v9UOG3hYcLdxKeJjxKuIvwD8JThE8Xfld4hHBn4Y10nqY6
z2XCUXgb4aHCmwnvJDxKeFPhHYVHCtcS3lZ4mPDWwrthPwvXCG8lfKlwJrwO
f0F4S+FduBfhyfrdwWrvKPyq8EXCHYRfED5XeH/hmcJXCncV/kT4CeHuwl8J
Pyd8ovBHwuOFuwl/JjxBuIfw58JPC/cU/lD4UeFjhecKvyDcS/h74cnCpwkv
EH5VuLfwc8L9hdsKPyvcT3g/4ReFzxM+UPhl4QuE2wtPFx4tfLRwfd1jS93j
5cLfqv1ltZ8i/LXwi8InCTdUn9bqM1o4EV6r9iHCJeE1woOFz4SbEY7CQ4X3
FN5cuJvwKg2JovAlwrurfTPhIcK7CterMa/TTrih8GXC+wjXF+4h/AfDSfjY
4HcRA/DI4DlkrX7/JOF/hFO1nya8QTgXPkO4qPPUCJ8o/LfaE+GewquFy8Ij
hfdTnwbCRwXPM//qnMcEj/31wo1V9sDnUp9+as/Uv5bwucJRuI7wcuGFwmcJ
LxV+S7iv8J/CP7N+Cf8svEi4n/Aq4WXC5wr/JrxEuL/wr8KLhc/GyNXv/iU8
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
S2xjc77uiWP+3A92KT4HdjKxCvwL6j0S6wUYN9if6AV4Ftir3De+HP8xtuKH
Ra+PrF/8r9iuaDd4pvgXcMZwx+hLsCWxKWcVbUtiU84sWg/CvfWprt3vFu0f
YTNiO04rek1mbeY7/JG7i/Yv8Gt4P45J7Jfgd/Ac0ZvwHPEpsFc5B+sstuV0
xnBim5lrOTuxXcxa/3HRdijrMv2wpWlj3cfmYo1GV4ody7X3S2xfYxt8WrTd
S806TlyRGBzaBeKNxB3RLhALJSaK/gDeHs5wQzXOgp4WPhWeHx4SP544C9rl
NTXm/OEk1wtvFzzP/yNcOzjf6m/hFsF847/CfYM5hNrReh44k7rROqiFwhXh
k4N5nppo/RIcTp1oTRQ8PHwJWin4ilrRuia4mo2i9T/wMzE6XgOHubbGcSJ4
yHU1jmujLSGWih4A3QixafQCxKnRlBDHJp7Nd8ThiUej0SGOjw7nzcS6APQB
aHTQERDX5jvi6sRG0TcQw0XzQJyUuCXxSz4Thyf+y3UQJye2i2YFHQI1+gHi
+GNKjhET30c7NDOxHgz+PI+O7/M7xFKJ2xNXpR86NLjrEK1ng3fNouOh2PNJ
tOYX7S8xNnS2xIy2TK2xRWvLZ3S46HGJS5FfRtyzaeqcMHLD+IxmmO8bpdYe
c74tUmt60f2iAUaTizaXGB65aOSnYDuSc0buGfFOctOot0+dc7F/2TksaH33
KDsnkRw04rM7pNb0Ev/aKrX+Fx0wn9FU8F+hMViUmZ8lT2RhZu6S/JckOCfx
rxrHAfGhinom32bmaslrOzDY5yJ54/BgX6wcreXDh0qjY4v4SiXh+Zm5afJx
vsnMsZK3iD4anTTx4x8yc9nkzvyYmXslz+W7zNw3uTZwveTmcZ9oqjmOXMjv
M/PL5LagryY23Sz1M0ZjzWe0JejN0E6ge2Esv5dYV4K+gu/ey5y/Rm7g9Mz/
AfmA72bml9F4v5OZX0bjPTXzWEFPTu4dOXjEDsl5JLaIZptcSfTbxBfJM6XO
U9tx5JoSRyQPknxItE3YhuQuohMi5xFtFXl85DaiF1qXON+R/D70TOTi8Zto
ubEZyaWkH7mTfL8+cU4l5/s3cX4h2m+u783MYxoNOZoItBFosNAtoA/8IbEu
Aj3YssRaEbRVixJrNpgvv0us/WC+nJ9Yk4I2BfsSHQp6FI5HR8G5lybWoaBH
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtnHf8j+UXxp/P59nPF1FWIrQkbSVUlLTTryQpW3vvXVIikUp7qLQoJGkQ
aYeGhnYiGVntvfC73l3PH+f1uc/nvp99j3Ouc5275aCzu59VDYLgyzgIIv1e
mQdBF/2xr6ROFgT19H+TMAjaSz5MguBT/T6qdtdJRqrucrXvpLZ7Swq1b5kG
wQmqu0R1ZxVBcJJkko7ppv8K1V2h9vuobWdJLbWfpro+quskOVHHNFObASpf
pPIZOvZz1T8ufZTkBv33tPR+Ku8jOUn6S7rpC3WuWyVX6/6eC339AySnqr6B
ztdR5RNUPl3nm6n2Z6jtSMkVan+d7qenykdLttD97Cp9QCUI+kse0bGNdNzW
Oud+ks/V/iX9XqDz9ZScp7rd1H6Q2g6UjFf7PaWPUPk6yZPSp6v9iWp7oOQ0
tb9H9afrWqdJ9tD1RkjvpfIxkq2kv6D2Z6ntEZKz1f5F6eep3ENyrvTT9AxT
Q19/E52/of7bUvq+ks90f4N1vq46136Sujrfy/r/IrXtJTlfbTfSMbupPFDl
Uwp/k52k94v9rThne+nHl9d6VscPkt5Vcor+G6LzH6hzHyDZROevpfa7qK6/
6k5W+wb6baljOks+1f3UU3071Q/S/6eq/iodv7+OHa/vME76DLU7WfUHS05X
m7a53+Xuqr+u8Dd7KvT98y2bp76fi9X2TNU9E7q/dJGcrP8u0/F76fx7SnLd
32LVT1PdbZIxqv9E+sMqD5NcL72+pIX+6yT5RPd7js75psrXq35bXes86fOl
3yx9J+lH6fyv6/5ek8yXvp3kTMaNznMu70+/m6v9XpKPdb4L9N97oa/fVm3P
l/6u9Fuk75L6mLdC92/O9bTOP173/qme/1nVPSd9ovTHJb30PE9Kf0jlj1X/
NN9H+mPSP5P+nPRtdI5Tda7LdR9n8+5U/4jqP1H9M9KnSX+06v+O0vmekT6h
6mseLb2B5CCVe+vea9UEwQe6t3t0visk18Z+B/THIbHfzTIdv03oMXKXjt1b
+ii9m4N1vVGFn5HxcnXsZ38493hl3E6R3lP/Pxx6/P+tay5V/Vah+/QdOt8A
tXkk9Hhfl/iZ5oWef3hW5pg3pF8TeO7hHdPfr4n97i/U76uh738zxrPOeYiu
30fnqq3n21T6YdL7Sq9T4znnNbUfHHguoo/T149TfY3qZ+j+npC+UPc/vXAf
fF3thwTum+/zHlS+TDI0dh86nfcXu29N1/GTdfwkzqlzT5X+cNXf9EjpoySN
dY7XdL0Wut4ilacG7i836xyDdI7xocdjRee+VscfoWP/J2mqY6+RfmjVz8iz
fqm2UwL335t0/PE6fkLo+THU8cPUvjvXlmyu9gtVN1l1NyJqP1vPea7qbpJc
pXv6WPUP8mySEaq/WscfXHWfoe8M1PkfDT0eN6j9ZypPCDyeRqn9cLXvQd+T
tFD7B6Wfr/KLus4TOvZDtb8/8PscrvZfSJ/I3C8ZLf0FtTtb7UdLBuv8J+qY
iWpzqOozPc9HKo8L3B+uU/tHdf471PZ2yf58S8mdKl+jY+vX+Lpcf4xkiP4b
r/Z3Vd2GthvrHE11zo6Sj1Q/RfUPqm4c71z1j0m/R+W7eQfSJ+Quv6/zPql7
e1z6vdI/kD5V+gn8F3q+S3S/D6n+gqrvYR8d/4j0i6oeI12kL1DbsYH74zDd
yyTV36e6BTrfUzrXZOn3V/3fYWo/VHq3qvs0fXui9LFV38Mh0p+Q/oDKH+r4
aTr+aOnzNF7nSt7X/WyTef48Qc/6oOrvUv2p0k+R7K661TpuXtVz0li1eV31
X6j8OWsa6430T5ifJCdJfy133Y86bpbO961+35U+VfKAjn9R9Qt4P5Lj1X6t
6t9ReYrkftWvkf5W1WPmPtZftf+I++ce1f5V6Z8xX3KP0p9T+xP4vpJL1P5Z
6cdjG0gulr5C+itVj7m7pDfV8Vvr2beRXK/nX6n6N6qeE+9R/XLpL1X9ze+U
vp3at1fbDpKxar9M9bOrfqd3qP6V3Pfyg/6fqeddpd85Vc/R96r+G+mvVT0H
3y39DbVfqPJP+v8Ftd9eekede0/J/Tr/HOmLVP+l5Ew933zp36i8QnIR40fH
tVe5iaSHzveA9N1UbijpLn2s9J1Urkd/lX6f9J1V3lhyhPR7pLdRubakm/TD
6E+69n2S13X9Q+jfKh+pdmN0f/fqdwe13UhyuNrPVv00lZ+SDND93K/6XVWu
z5yi+ndVv0rllXwP1b8lfanKv6ndi8y1+h3MsTyP2r+j+uUq/857Z27V7xDp
g8rv97bql1V9jvPpq9JH8u0kU3W/b0r/WnVLJOeqfl7u8q98J51vrvSvpC+W
nK36cfq/ncqNmZP4HpH7yvFl/7lbemuVaxhTrE98p6rH3O3Sm+uc++jaW+v/
n1Ruh30j/QDJ49yP/r++apsPe3OO9KEqnyi5VPpc6cNUPllyGc8n/QaVzyrn
t47MrzrXIZInsM2wv1Q+SDJJ+jtqf6PanlPOzwfqmS5TeWji+WcedlTVY/hy
/fdWZNsXG/hK6Qer/RUqX5t4fuov/RbpN0t/Xvpmut6WutZW2LS63mLsiKrn
1DFq01ftb1b5JpVnqH23zN9reOL5ZSPJGtZ2zWNfq3xo5u89LPH81bTw2Gus
837P9Qpfq5H077CVIt8PcyT2/Y7Yd6rfWzJO9zM/8vXPq3r+XiJ9RtVz8q3S
N1f71mq7nWS02jfTObdVeVO1+0HlZqpvVfF/o1S/eeG2TVT/o8rNVd9G+vaS
m1S/rfTdVW4nuZv5UnpblXeT3IntpeebyfySeL7bGf9IdZ0lD6m+hfQdVN5R
crP0yzPPd0+o/cs8u+p3Ud2uktuxHTL3t0cSzw/nZZ4/Hks8fr6OfD3m+Nuw
XzPPbxMS9/cLMs9njyceT/gr++ncXSUTdP4tpO+k8s6SW1P7P/uq3EXyqPST
M7/PhxLPZ19hZ1a9Rt7C+Mjtyzyv/x9Xfaz2/+rY/ZmLpB+u+nHSH5DMSe0j
TFZf+F9g3wEfZIr07oF9k+ul78EcXo6fp1TuzVhhvPMOcs81iyL3z2n67Uvf
po8k9jGeDO0v4XvMVPsnmT8j989Zudce/uune22d2X89Ucc+pPo2mf3Tk6Q/
jD2i9t9L/47xiL2s8wxkrJXz1f6qv133eptkFr5UZv/rFNU9quO7qv5W1d0i
eV71MyKvpcPL8f609P6MRcmF0hfkvtY/rFM6/gPp30pfy/yhc++Q2T8/WW0f
Uf3zuddKbNI+qpuu405iPJfzy5jccyf3vKPqb829PrJOjtfxD+S277DzJku/
P/dcgo21F7ZS7vvlvh9T/e25z891Jkgfl3vscY5Oan9H7rmMNm2l35f7XNht
k1g/cs89+OETpY/NPdedKemY2abCtrpO995A9tn1qj9O+rGSVqq7Mff74r3x
fW7LPZfyTLtk7of0xxHlfHdz7mfnu/G+ZkW+1qhy/rsp99rDObfX8aOl96u6
T20n/YbcZfoZ/WOU9D5V98ltVT8yd5l+ir10S+61A7uD798td9/vwTwm/QDs
Uen/k36T9EXSm4W2MW/S+T6RvrHK9STXSn8/97f/O/L8cDD2pY6/S/KS+tN7
0teofjX9Se33zOwPnJ34fbfPbA+emfh9f6r29XXuTSTDVfex9Loqb4QPJf0z
6Q1UroPfpPavRl4f+pX9s57abMP3SOy/3676LaRHkoP0313SW6mcSw6Vfqv0
zVUOJAdI/x/2s+79aP1/q47vjn8q/WHJW3qeI3OXe6r+Nr6vflvo2KrkQB1/
h/StVE4kB0u/M/L9ZJJDpB+Bf1zxNebhD0ivo+epLbkafCczfnFa4v7bLrO/
dEbi+eug3O/2CNYV6QulbxraJ8M36yx9NOsx67TqX9bvJVX3Ueanxbn9f3CA
11XfSfoNFfvE03Q/+0q/SeVDddxo1e+bGX86L7E/vJ/qx6j+MNZ16V9K3yw0
BjeauUn6jRXfwzM6XxfpN1d8zuekHyj9zor72Gzpn0tvGPqbjtDxO2fGX05N
PP73zuz/nZN4/HfO7J+dm9gfW5IbHwEneUP6K5Htiz7lfPuF6hvRf1T/GuuD
9Oah38EYnetr6VuExoRuk75bZn/x9MTzyfOh8Qr8tzN0jn+kf6vyu5Ip0meF
xldYL86SviYzlnKrZFc93+rMZTAV8IVVmX3lMZKdVb9W+u2BMRjwgG+ZowL/
t5vqv8zsK14taZHaJsQ2HK/7a1Jjmxvb+1Hpm0pfmLktPj++/1+Rx14qfRb2
fVb62pIddb4lkk/1LbZU3d+F7Vrs26razwBPVf27qt9c5T8L28XYtoHqp2PP
gBEGxjzAPhZl9r3BPMA+VmZ+VjAq8JilfHPsNR37j/Q/IvsKoeqfx59R/ULs
VZX/Vf0XmX3tqySbg+1Erv8Lm0Ztzpe+SOV/wOTAs6R/pfI6bCDpo6TXYe6s
2n+4QXpd1pqq/YPRkX0NfA78j/ci+9bPVm0/fpbZt71S0pR7z3wvYDBgMZ9k
xlIulWyq+qr0Rjp2Px0b63t8mhnbuVzSRPUjdf5azN1V2+uXqv81VXkz5gy1
/Sjy+vJi1f7a9dIL5vJyvhouPVZ5y3I+w2/Hd36+antyROS5rVU53+CH43vP
qtr+GiY9VLllOV9dK72icvNy/rtOeqry1uX8BU4AXjC9ansKvxxfEp8S/yLS
PW+qcleVEz3vt6nPt4f0dXo/izNjmddKtlTd15mxFvpMK+mn5Z6buafvwRc1
hgD6/9RPb+zL3HMpz/yj9HNy+4K8wz9S2yHYIzX6HrMTz0HMRa+r3FL3c7nu
oaI2f+t8fbF/VX5bfWO1pA32WO65m3vm3llzWHtexnfS8Zvktj2xQS9Qff3c
ti828EXSL87t2/IOeBfY8/g++EA3lPb0YcynkjGp10zWzpew/Wvsv2DLYtMO
BxvM7evRh+hL2P/4avhsI1PjAdjG2MgjwGdz+7r08b94n3q++apbi0+ga5wi
/U2VV+Jj4O+qzRv4Fyr/rnezcW5bH5v/fPo3GKHKzVX/l+r/jOwbx7rnmfrv
7Ny+Jn3yN/CFzNjwSElr6cszY2FgxmDHZ+Xuj/TL+6Rfkruv3xLZ/l6RGcsb
Ldlexy/NfC4wbvDIkyLf7zJ8IF3/q8zY6nDJ1syHqv9Edb/yTfAvIs9nv+Gj
SD898vz1Lc8o/ZfI8+e/jHHpJ0fGllZIWks/I/Lzf48PhJ57PDAuxoKn6neB
6n6kTyS2e7B/ct3vC9LPjTy//SFpK/0s6R+p/DM+jPQzc9sCnPPn1P4bvjM+
9I2p3ynvdi+1DWrc5+n7HaRvwF+JbMtPk9RNvE6ztj4hqZ14XWZ9flJSR3q3
yLb9VMlG0j+PjNXPrRrvGQQ+VvE9MzdjV2BfPCfZODGuAr4yQ7JJUuLm+D6S
msR2Imv5M5J60vvrfB9X/MyLUvuLR2BP4oOkjgOANYE5gV9tJ72b6k7nG8WO
aRHbWhkbrxgIflbxN2WtGpD7e/Pd71b9mMhjb4+q8ZEtc1+rjf6/qrD/eHjF
17glNQYDFvOPzv9zYZwc3+TtqvE77GDs4dmShtKPiow1zZI0kN6d+RZfSVIf
+1x6Ax3btmo8qbeu917FfY6180bVb4LtXzWedVzu8ck4vVPX7yP9g4r7HGPv
WOnvVDxHfST95shzwe5V42W9ctcxj92h44+R/lbFY3yB2n8RGbt/s2r8s4fq
51Q8hhj7faV/WHEfXpgaQ+P5ErX9Tec7XvVfVrzGshYfFPl9TZAUie1KbLtJ
klqJfUb6V8DYYrzmXn9Zh++VfqL0xRWv0d+obb/cfYNxcRd4c+461vF7sOdT
v99Y5/tV+sngYxWfc1XqGBP99wbVN9T4+A5MVZd/VrJHaj8a33l+1fjsb+AR
qntVsp/qfwV/UPllyb6p41jEll6vGu/8RfUvqW4ZcUld/2fpL0qfLenEegMe
ovLbksOk/w1myHwlOSS1X4B/8IqkcWLMmvmlicp/FI5zEdt6tWp8lzgZsZWX
q8Zv16fuL/uqHNZ4jWOt21t6RXrL3H2ZcTO48JrJ2tmeYwuCDO6PXVibOV76
HP29Us9zMfO59LmB/zsw9ZrB2tFJ7atq/zt4DPajZH/qwShVXqXjLwEv0nV7
sfYxp2kM7SL9OJUvkfzC2q37W6CfDyTddfx6fETsW8kRqTF3sPcHdb3Gul47
HX+8jr1a8mdsbOVElYdK/pK+g/SjVD5X8oP07aUfyfhnjo49zhnvZ0q+k/49
eJCuNV3SPjUOAx7zXtV4Ppg82Pw4lRvp+u1Vf7KOHSb5W8f/AD6mY5+XdEwd
5yXeexVzOvFf6f1UvoI1Rvq6zM/2rd7PpXo//2b2DeZLDgdvUfuejAfJT2q/
IfO7+U7tL1P7nzL3raXSL5T+I3ia9FmSvcC7dHwfHXsZa5yO31H60YwX1qDY
fiq+5EuSRnqm3SLPn1dKfocbkRvbA+MbmtqHxpd+UW2b6fkb5sYKwQwvY3yo
7qvAY2QCc6T0LwOPgUdjx7B2wJaKHdv6SfVfBL7nR/TfL9IXBR5D42PH8LZV
+bgytkdMqY30PrFjTauZn3VMN8lD+L/6vw/vRvKr7nHr3N+b7z4E/wOcNvCY
fkxtf5e+LHCffVz6j/AMAn/Dh6W3yt1/6EdX6/gfiKMH7iMPxcZHu1d8jTvo
76pfFXhMT46NC4MPM+afkP6H9BWBx9BE6X9K/ybwGJkkvWfuuRi76/bCeGyP
iu/hLp1/Z7Xpxdwi+VnPtwr7kPggcUE9/xrWS/BHySPSv5d+jMo9JZOk/yD9
2NDneEL6Wu5f5SMl48HfdP6jsL0kP+j836n+aPBGyeOqbxP73GdKvlP9k/rv
OJWXq7yD+sM06X15Juk71vgYjv2atVr67jp+oPSrJH/ov++JOwaegx9UXTu+
M1iG5E/V/wj+FPoaXGuX2OVLJL9wjdjnP0/yo/SdYj/rBZKfpLeNfT+XS36T
vn3sZz1b8r30ldhPxCslD+j83+Z+ft7DXLBa+qn0oZK/GB/S+6t8peR36T/l
7m/0u3mF3ynvdhnX0vO2zj3eGHfXFH7HXP8r1beuMWYAdjAP26PGGBlY2RvS
t6hxvAWsmDnusdQ+COPpmdi+ydnSv2d8Sb9SegNdp6XahpJ5+q82/iljnzUr
dtyB+EMieUt6Q/AtlSNsAOm7574W8+qIwhwFuApv6n62qjFuBtbSVvJ+4jHH
2FukcivVN2bMSN+fca3/ZmOHB8a/z1Hd3qnj37fHnq/os/TdL9V2G/gK+r+1
9AMlCxPjLuAvu0s+kH5S6vHzvP6/QsfXjY1dtZMsUH193Xdz3X9FMld1tfDX
WWuYU6RvIr2Z9A2sYdLrYf9hz7FmsR7lnp+Zp4fr/DWx57sdJPOxV1PzFR6I
PV8T/+hb8Rz7IPheaj7OuNjz80Gp+V33xl7/GJOMn8U617Z63s6p4/l3xLYX
dsp9LubtYdI75F5fWGdGgq+m5hvcE3s9rhXbH9xJ8m5iThvctmNUznX+PXKv
h6yLxB420m/Div3jV3VsHen1meuZs2PH306q+JiJulZd1Teu2P99TfUbS99M
+jrmTOn/hu5/rNFP0t9i+7+7SN5LzJmBO/MWc3GN432nVPxMk1PPSYzXpapv
o/pnMo+vlYxl6dvF7l+ng5vpv1q5+27MHKnja3L33SRyf4hyP9sfrBmqT3Pf
67+S/tLrgZeqfW3JOanj0sSn/5I8zXwXeX3/SfJk4jFVA+ZS8Virm/tY/qMu
yd13wAgYj3Hud/UXa1RqXgD8gD8k0xLHzYmf/yZ5ivkvsj3zi2RqYpsM2wyf
n/hZnrsvB8wBqdcg1iLWHOJxWe6+vF4yMPUcw1zDmkH8bmlsG4I56B58w9xz
Q5VvLH2j3M9Wg02NLSe9UDmXnCG9Nv6myik+R+o+jC3H+kXf5p3z7jknY/OC
3LFxbFBs0Z8j44t/S55JHKcmXr1e8hw2XG4uAJyAq9T+wtyxfWzQ/2zR3LFH
YpCXqL5Rbm4CHIUrpW+aO1ZKzPRq6adIB4vfIH1tah8OGw8fjvgfYxLbif7K
WK3mnht/kfRMPaaxxbDBGOvE9MEvJulem9aYkwDeOFH6ZjUeg9jG2A+MzfNz
44HggvcXnuOwzbBvmPsqueeinyRHg0fm5i6AKf4j/TZ9r69D2x97pp4T8CWw
n5grsGGwZfCJiZ/+ouMHhB4zjJ2hpY19TMX8jRv0/zZ+lcEhOvdI6VvZ3QoO
js1phdt6tP5I9Tw3hra3cAUOVf0I6VsE5s4eJP1m6a0NLQSHxeZgwsXspeOL
GnNe4b72lJ5JH672LfxJggOxt3Pb/9wj93pLaHuutqRbbH7IsRW3uQ9bMbd/
gJ9wrdp/I3270GvEWF2rdez141TJWl3zucz2xSqVd64xTgRe1KFq/shyHb9t
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
Ug==
         "]], Polygon3DBox[CompressedData["
1:eJwt13m4T3UeB/Afrmu5KRmJbHHpJpJd13Lt+5I1a9ysZV/GWBIKJYw1S0aW
tMjWhiyhi5C5YWSMZa7dzVLTM+oJU5jX93H+OM/jvLw/n8/3nPv7nfP9leg1
tN2QrLFY7Kgju6NI7ljslH8kxcViDbPEYm/liMXKsurxsdgUFhO+xsqxZ9lU
lpX9xJrmisWysXpsnNpdrJ3ct6yAniWzxWILcsZi7dlB9igrxRaxp1kye0Nt
nH4/q23IZrKTbDXrJFeR1WOzWD52R64+e50dZgtZQ7nyrBZ7i+Viv8pVYvXZ
bJaf3WN5rXmndfxhHT+7vGGsslwDuTlyBeSy6PcndkSuKKvk2kbLPcNqy01n
CXK/sQLsmFwJliw3geVjh1kRVoGNYg3Ym2qPseVqW5tRgaWwGSwPuyX3KPtn
uHesptpJrCg7zZ5kjdkMVpJlV9uOLWFprCbrzj5mzfQrYEZd1ot9wjqwEqwO
e5FtYO1YcfYEK8YGsu/0O65fafYY68/2scOsHuvNPmXPq01U25R9yH5hGWwI
K8NKseHshNrzakuxQqwf28vS2VOsNBvBTrGLrAn7gN1gp/UbpF8jtoL9xI6y
Xqwl28UecG/y+ntOZm3ZAfYIe5zNZ63ZHpaXPcqms+fYXvYwK8RmsjbsG5aP
FWazWDO2ht0095K5o1hjtpL9hx1jfVlztpbdYplsNKvCGrK5rCDLxpJYcTaI
HXa9J1xvCRZjrdhctoVVZR3Ze6yW2pxqq7Hn2SqWwhJYMuvKPmKNWD5Wg3Vj
q1kTlp+lsFS2nrVhRVlhdtK1PsHqm/umubXYC3JrWAu5gnK1WU+2jrVmhdmT
LJENY8fVnlVbnXVi77O6cnnkHmMnzCgdTG6q3F3fwXnsrHu82aVXY4/L/c6a
yk2T28AKsX+FZwarw6awRBZvRnu2lO1hLdhOliD7oJ6TzH2WdWYfhGuzlofY
f829zBLlUuQ+YwXljjtPlKut3+v6tWJfy+Xh+eSmhs+z2vPOi8tVl1sid4+v
YGdkvnAd7VhnuSJqu8qtlzvG7rCJcunhMyX3NPuITZZLk3vF+prq9TGbwnaz
V1lztpZNZXvYRNaSPc8Ksy5srRlH9cvgY8zYbEZfM0qyONfxLrvGDrIW7A+1
E9jfw2eelWVZ5d5hmWwPa8huyaWy9awNy8Oyyy1j11k6a8UOyH1kLZetZbf1
DbeObHJL5a7KHZBrJtdVrqhcN7lPoudLK5aDNWKvsX3skPoX1S5VW1VtXnaJ
vcq2syHRmn9hC9kxtpLVZfP0e0m/D6PvQgWZ6axP9D2qzZ5kM1nf6HtUhz3F
bjqW6HdCv9X6NdFvgdyA6HvUVK6yzDnHK3Jb5QbIJcmtl3tDbm+4jujZfsTR
S26ZXHW5fHIX2Hi2jQ1iZdhpNpptYr3Z4+wk+wvbyF5kxdgx1oe9x2qyAuwo
681WsGSWn823lpej50Fja6kYPveOBXLfyy2XS5G7LfdnlsbGsYKsLcultona
qf4eB8MMtoH9GJ5X+k3Q6yF/36/U5mI55QbKnZLbHX9/U3E76/1n7E3Wzflq
M5r4rzi5EyxN7p7am3LT5A6y1SwzvBfYSPYOGxQ9h1qy6iydfcx+CO+j6Fn8
IzvHiplTNfztWG7r2+w8m9wdc1PNzcE+Y3dlfmWdWC62iWWV+531YEf0W6/f
9fAeNGO8fpdZOsstm6B+KYtX+6nzO85vqO2g9jm5nHKN1U52Xw6E/YbcDrnc
LDcbzB5k21lOFs9eZqlqS6pNZVui5+kQVpONZdez3N/TDGI12Bh2ld0IzyE2
X79z1rLFWpJZD1ZCrqfcZrkMlsXcxXKX5dLk6rME9iWLk7vHerEYW8Quye2K
vltn9NunX1zYNPK57kEeuW3Oc4Q9nBn95RbJDYz2IM3dv6py/VgS68vS5K7I
9WFPsD5sF8tkD+i3Rb/sLAvrw87J7ZfLHv5O0fv8YblD4R0tV15uhNwsuX7R
u6eeueXkrjpek9ulbpRlV5J7Wu5StL+qpXZ5eKewM9F+rSJ7O7yTWUY04xk2
jz1i7vdhXxG9A8aHPWF4p0TvjxS2Muyf2cVoT1iDvcsqsszoXRbeg6tYMf3+
zcqE5wv7K0sKn2dWjFVli1lPuauurRrv5Vq+dF1fOzo7n+68tGuLye1kndg0
lojuqrnN/sZOsjXRs7i4fj+wKmb0iNZS2tyz0X63MlvImrM4Peqz8dEeswG7
J1ebjYz2KnXYHVaTDWUbWTzbyG6YmxF9t7ax2fp9F/Y5/kY9rG0Lm8XS2WzW
nSWwrWpvqs2M3f9c3eHLWUZ4b7M27Au56WoPhD2D2o4y9dhduVpsuLVslktm
16P73IytC/srdjX63dOIrWb53Zd/RPe+ChvLasv9wWqwwexz1phlNbcuG8N2
sE1sBvuWTY9+u1RmV6L9VQO5D8MeiV2L9vJN2Bp2XfZ19rVrG+3aqoTvr7Vc
0a8qT+WbwvPP0dP5YueVonfycv2GRXv59uamyKxkw6M9f0dWl33CprF9bApr
y7qacZFV0LOTnuvYSLm6bILcr1nu/97qLHeelZdrHz1ju7FLrCLrwjawLuwC
e4Z1DJ+3sCfRrxGbHJ7F+sWzOax/tDdrYC3l2Q+OSep2qhvp2iqY+z+5sWxf
2NtHe5p32dBoH9tWba3w+WaD2dpof5rMVrER0e+UTqx+eM84eui3UL8K+iXo
192aM+Uq8+7RnjBN7XvsnNqtal9iX7E57BCbz1LZ3nAP1c1SVyZ6v+1j3dk8
Vi58LcMeib3A3mblWS62O9wvNpMlhZ/ZbKIZXcxYZEZStJf/jL3F9rM3WPvQ
K3x/WRX1PcLek3VkGewp1jLsicKzgJ1l5Vgb9gH7Xb9xzveHfa25pczdw1bJ
nTdjuxkDwh5T7RlWVra17CrWITyvWBnWnC1j36h9n11QuyP6rZZT7nOZezK/
mdHFjP8DKGMEWw==
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slLllEYQPGrn0PmVNlkqeFCAqulVA5lmpG1SwLLlQqpDQ5pDjllOSAi
Ig4RIiLUMqRp5c6WIjT8A7qUoHIdaL8PF4dzFvflDu+TW9dypzkmhPABsYj2
GfxLCKGEa5CZGEIPv8ZF/YV/4q7e4XQftesLPM23uQkreozfYUN/5S380nuc
bcOkAyEU8Vm+x12o0HP8CfX6O//BkE6NhHAOS7qSG9CIS/H25Ie4rB/xYxTq
J9yMIt3CrSjWbVzCT7kdV3QHP8NV3cldKNXd3INr+jmXcS/3oVz38wCu60F+
gQo9xC9xQ7/iYTzAqvPf5Hws6hT+7Y6D+ht/RK2e5U6U62rO40LOQqLe9Y6b
2Pama/wW63qUG/Fe3+IpPs9paNN//bcfqNKfeR4Fupvv44Qu5hxkY9n5svg0
lvSp6FxgUZ+MrseCPs7H8EYfjc4MZ/ARzOnDfAgzOp3TMK1TOQVTOpkn+SAn
YUK7anCkMK6NZvCcYUzHMYWRyP78/geXLEl4
       "]]}, {
      Line3DBox[{1787, 2236, 1786, 1366, 1788, 2237, 1789, 2656, 2238, 1790, 
       2239, 1791, 2657, 2240, 1792, 2241, 1793, 2658, 2242, 1794, 2243, 1795,
        2659, 2244, 1796, 2551, 2761, 1797, 2245, 1798, 2660, 2246, 1799, 
       2247, 1800, 2661, 2248, 1801, 2249, 1802, 2662, 2250, 1803, 2251, 1804,
        2663, 2252, 1805, 2552, 2762, 1806, 2253, 1807, 2664, 2254, 1808, 
       2255, 1809, 2665, 2256, 1810, 2257, 1811, 2666, 2258, 1812, 2259, 1813,
        2667, 2260, 1814, 2261, 1815}], 
      Line3DBox[{1817, 2262, 1816, 2553, 2763, 1818, 2263, 1819, 1397, 1820, 
       2264, 1821, 2668, 2265, 1822, 2266, 1823, 2669, 2267, 1824, 2268, 1825,
        2670, 2269, 1826, 2554, 2764, 1827, 2270, 1828, 2555, 2765, 1829, 
       2271, 1830, 2671, 2272, 1831, 2273, 1832, 2672, 2274, 1833, 2275, 1834,
        2673, 2276, 1835, 2556, 2766, 1836, 2277, 1837, 2557, 2767, 1838, 
       2278, 1839, 2674, 2279, 1840, 2280, 1841, 2675, 2281, 1842, 2282, 1843,
        2676, 2283, 1844, 2284, 1845}], 
      Line3DBox[{1847, 2285, 1846, 2558, 2768, 1848, 2286, 1849, 2559, 2769, 
       1850, 2287, 1851, 1428, 1852, 2288, 1853, 2677, 2289, 1854, 2290, 1855,
        2678, 2291, 1856, 2560, 2770, 1857, 2292, 1858, 2561, 2771, 1859, 
       2293, 1860, 2562, 2772, 1861, 2294, 1862, 2679, 2295, 1863, 2296, 1864,
        2680, 2297, 1865, 2563, 2773, 1866, 2298, 1867, 2564, 2774, 1868, 
       2299, 1869, 2565, 2775, 1870, 2300, 1871, 2681, 2301, 1872, 2302, 1873,
        2682, 2303, 1874, 2304, 1875}], 
      Line3DBox[{1877, 2305, 1876, 2566, 2776, 1878, 2306, 1879, 2567, 2777, 
       1880, 2307, 1881, 2568, 2778, 1882, 2308, 1883, 1459, 1884, 2309, 1885,
        2683, 2310, 1886, 2569, 2779, 1887, 2311, 1888, 2570, 2780, 1889, 
       2312, 1890, 2571, 2781, 1891, 2313, 1892, 2572, 2782, 1893, 2314, 1894,
        2684, 2315, 1895, 2573, 2783, 1896, 2316, 1897, 2574, 2784, 1898, 
       2317, 1899, 2575, 2785, 1900, 2318, 1901, 2576, 2786, 1902, 2319, 1903,
        2685, 2320, 1904, 2321, 1905}], 
      Line3DBox[{1907, 2322, 1906, 2577, 2787, 1908, 2323, 1909, 2578, 2788, 
       1910, 2324, 1911, 2579, 2789, 1912, 2325, 1913, 2580, 2790, 1914, 2326,
        1915, 1490, 1916, 2581, 2791, 1917, 2327, 1918, 2582, 2792, 1919, 
       2328, 1920, 2583, 2793, 1921, 2329, 1922, 2584, 2794, 1923, 2330, 1924,
        2585, 2795, 1925, 2586, 2796, 1926, 2331, 1927, 2587, 2797, 1928, 
       2332, 1929, 2588, 2798, 1930, 2333, 1931, 2589, 2799, 1932, 2334, 1933,
        2590, 2800, 1934, 2335, 1935}], 
      Line3DBox[{1937, 2336, 1936, 2686, 2337, 1938, 2338, 1939, 2687, 2339, 
       1940, 2340, 1941, 2688, 2341, 1942, 2342, 1943, 2689, 2343, 1944, 2344,
        1945, 2690, 2345, 1946, 1506, 1947, 2346, 1948, 2691, 2347, 1949, 
       2348, 1950, 2692, 2349, 1951, 2350, 1952, 2693, 2351, 1953, 2352, 1954,
        2694, 2353, 1955, 2591, 2801, 1956, 2354, 1957, 2695, 2355, 1958, 
       2356, 1959, 2696, 2357, 1960, 2358, 1961, 2697, 2359, 1962, 2360, 1963,
        2698, 2361, 1964, 2362, 1965}], 
      Line3DBox[{1967, 2363, 1966, 2592, 2802, 1968, 2364, 1969, 2699, 2365, 
       1970, 2366, 1971, 2700, 2367, 1972, 2368, 1973, 2701, 2369, 1974, 2370,
        1975, 2702, 2371, 1976, 2593, 2803, 1977, 2372, 1978, 1537, 1979, 
       2373, 1980, 2703, 2374, 1981, 2375, 1982, 2704, 2376, 1983, 2377, 1984,
        2705, 2378, 1985, 2594, 2804, 1986, 2379, 1987, 2595, 2805, 1988, 
       2380, 1989, 2706, 2381, 1990, 2382, 1991, 2707, 2383, 1992, 2384, 1993,
        2708, 2385, 1994, 2386, 1995}], 
      Line3DBox[{1997, 2387, 1996, 2596, 2806, 1998, 2388, 1999, 2597, 2807, 
       2000, 2389, 2001, 2709, 2390, 2002, 2391, 2003, 2710, 2392, 2004, 2393,
        2005, 2711, 2394, 2006, 2598, 2808, 2007, 2395, 2008, 2599, 2809, 
       2009, 2396, 2010, 1568, 2011, 2397, 2012, 2712, 2398, 2013, 2399, 2014,
        2713, 2400, 2015, 2600, 2810, 2016, 2401, 2017, 2601, 2811, 2018, 
       2402, 2019, 2602, 2812, 2020, 2403, 2021, 2714, 2404, 2022, 2405, 2023,
        2715, 2406, 2024, 2407, 2025}], 
      Line3DBox[{2027, 2408, 2026, 2603, 2813, 2028, 2409, 2029, 2604, 2814, 
       2030, 2410, 2031, 2605, 2815, 2032, 2411, 2033, 2716, 2412, 2034, 2413,
        2035, 2717, 2414, 2036, 2606, 2816, 2037, 2415, 2038, 2607, 2817, 
       2039, 2416, 2040, 2608, 2818, 2041, 2417, 2042, 1599, 2043, 2418, 2044,
        2718, 2419, 2045, 2609, 2819, 2046, 2420, 2047, 2610, 2820, 2048, 
       2421, 2049, 2611, 2821, 2050, 2422, 2051, 2612, 2822, 2052, 2423, 2053,
        2719, 2424, 2054, 2425, 2055}], 
      Line3DBox[{2057, 2426, 2056, 2613, 2823, 2058, 2427, 2059, 2614, 2824, 
       2060, 2428, 2061, 2615, 2825, 2062, 2429, 2063, 2616, 2826, 2064, 2430,
        2065, 2720, 2431, 2066, 2617, 2827, 2067, 2432, 2068, 2618, 2828, 
       2069, 2433, 2070, 2619, 2829, 2071, 2434, 2072, 2620, 2830, 2073, 2435,
        2074, 1630, 2075, 2621, 2831, 2076, 2436, 2077, 2622, 2832, 2078, 
       2437, 2079, 2623, 2833, 2080, 2438, 2081, 2624, 2834, 2082, 2439, 2083,
        2625, 2835, 2084, 2440, 2085}], 
      Line3DBox[{2087, 2441, 2086, 2721, 2442, 2088, 2443, 2089, 2722, 2444, 
       2090, 2445, 2091, 2723, 2446, 2092, 2447, 2093, 2724, 2448, 2094, 2449,
        2095, 2725, 2450, 2096, 2726, 2451, 2097, 2452, 2098, 2727, 2453, 
       2099, 2454, 2100, 2728, 2455, 2101, 2456, 2102, 2729, 2457, 2103, 2458,
        2104, 2730, 2459, 2105, 1646, 2106, 2460, 2107, 2731, 2461, 2108, 
       2462, 2109, 2732, 2463, 2110, 2464, 2111, 2733, 2465, 2112, 2466, 2113,
        2734, 2467, 2114, 2468, 2115}], 
      Line3DBox[{2117, 2469, 2116, 2626, 2836, 2118, 2470, 2119, 2735, 2471, 
       2120, 2472, 2121, 2736, 2473, 2122, 2474, 2123, 2737, 2475, 2124, 2476,
        2125, 2738, 2477, 2126, 2627, 2837, 2127, 2478, 2128, 2739, 2479, 
       2129, 2480, 2130, 2740, 2481, 2131, 2482, 2132, 2741, 2483, 2133, 2484,
        2134, 2742, 2485, 2135, 2628, 2838, 2136, 2486, 2137, 1677, 2138, 
       2487, 2139, 2743, 2488, 2140, 2489, 2141, 2744, 2490, 2142, 2491, 2143,
        2745, 2492, 2144, 2493, 2145}], 
      Line3DBox[{2147, 2494, 2146, 2629, 2839, 2148, 2495, 2149, 2630, 2840, 
       2150, 2496, 2151, 2746, 2497, 2152, 2498, 2153, 2747, 2499, 2154, 2500,
        2155, 2748, 2501, 2156, 2631, 2841, 2157, 2502, 2158, 2632, 2842, 
       2159, 2503, 2160, 2749, 2504, 2161, 2505, 2162, 2750, 2506, 2163, 2507,
        2164, 2751, 2508, 2165, 2633, 2843, 2166, 2509, 2167, 2634, 2844, 
       2168, 2510, 2169, 1708, 2170, 2511, 2171, 2752, 2512, 2172, 2513, 2173,
        2753, 2514, 2174, 2515, 2175}], 
      Line3DBox[{2177, 2516, 2176, 2635, 2845, 2178, 2517, 2179, 2636, 2846, 
       2180, 2518, 2181, 2637, 2847, 2182, 2519, 2183, 2754, 2520, 2184, 2521,
        2185, 2755, 2522, 2186, 2638, 2848, 2187, 2523, 2188, 2639, 2849, 
       2189, 2524, 2190, 2640, 2850, 2191, 2525, 2192, 2756, 2526, 2193, 2527,
        2194, 2757, 2528, 2195, 2641, 2851, 2196, 2529, 2197, 2642, 2852, 
       2198, 2530, 2199, 2643, 2853, 2200, 2531, 2201, 1739, 2202, 2532, 2203,
        2758, 2533, 2204, 2534, 2205}], 
      Line3DBox[{2207, 2535, 2206, 2644, 2854, 2208, 2536, 2209, 2645, 2855, 
       2210, 2537, 2211, 2646, 2856, 2212, 2538, 2213, 2647, 2857, 2214, 2539,
        2215, 2759, 2540, 2216, 2648, 2858, 2217, 2541, 2218, 2649, 2859, 
       2219, 2542, 2220, 2650, 2860, 2221, 2543, 2222, 2651, 2861, 2223, 2544,
        2224, 2760, 2545, 2225, 2652, 2862, 2226, 2546, 2227, 2653, 2863, 
       2228, 2547, 2229, 2654, 2864, 2230, 2548, 2231, 2655, 2865, 2232, 2549,
        2233, 1770, 2234, 2550, 2235}]}, {
      Line3DBox[{901, 1351, 902, 1366, 931, 1381, 946, 2763, 1396, 961, 1411, 
       976, 2768, 1426, 991, 1441, 1006, 2776, 1456, 1021, 1471, 1036, 2787, 
       1486, 1051, 1501, 2686, 1066, 1516, 1081, 2802, 1531, 1096, 1546, 1111,
        2806, 1561, 1126, 1576, 1141, 2813, 1591, 1156, 1606, 1171, 2823, 
       1621, 1186, 1636, 2721, 1201, 1651, 1216, 2836, 1666, 1231, 1681, 1246,
        2839, 1696, 1261, 1711, 1276, 2845, 1726, 1291, 1741, 1306, 2854, 
       1756, 1321, 1771, 1336}], 
      Line3DBox[{903, 1352, 904, 1367, 2656, 932, 1382, 947, 1397, 962, 1412, 
       977, 2769, 1427, 992, 1442, 1007, 2777, 1457, 1022, 1472, 1037, 2788, 
       1487, 1052, 1502, 2687, 1067, 1517, 1082, 1532, 2699, 1097, 1547, 1112,
        2807, 1562, 1127, 1577, 1142, 2814, 1592, 1157, 1607, 1172, 2824, 
       1622, 1187, 1637, 2722, 1202, 1652, 1217, 1667, 2735, 1232, 1682, 1247,
        2840, 1697, 1262, 1712, 1277, 2846, 1727, 1292, 1742, 1307, 2855, 
       1757, 1322, 1772, 1337}], 
      Line3DBox[{905, 1353, 906, 1368, 2657, 933, 1383, 948, 1398, 2668, 963, 
       1413, 978, 1428, 993, 1443, 1008, 2778, 1458, 1023, 1473, 1038, 2789, 
       1488, 1053, 1503, 2688, 1068, 1518, 1083, 1533, 2700, 1098, 1548, 1113,
        1563, 2709, 1128, 1578, 1143, 2815, 1593, 1158, 1608, 1173, 2825, 
       1623, 1188, 1638, 2723, 1203, 1653, 1218, 1668, 2736, 1233, 1683, 1248,
        1698, 2746, 1263, 1713, 1278, 2847, 1728, 1293, 1743, 1308, 2856, 
       1758, 1323, 1773, 1338}], 
      Line3DBox[{907, 1354, 908, 1369, 2658, 934, 1384, 949, 1399, 2669, 964, 
       1414, 979, 1429, 2677, 994, 1444, 1009, 1459, 1024, 1474, 1039, 2790, 
       1489, 1054, 1504, 2689, 1069, 1519, 1084, 1534, 2701, 1099, 1549, 1114,
        1564, 2710, 1129, 1579, 1144, 1594, 2716, 1159, 1609, 1174, 2826, 
       1624, 1189, 1639, 2724, 1204, 1654, 1219, 1669, 2737, 1234, 1684, 1249,
        1699, 2747, 1264, 1714, 1279, 1729, 2754, 1294, 1744, 1309, 2857, 
       1759, 1324, 1774, 1339}], 
      Line3DBox[{909, 1355, 910, 1370, 2659, 935, 1385, 950, 1400, 2670, 965, 
       1415, 980, 1430, 2678, 995, 1445, 1010, 1460, 2683, 1025, 1475, 1040, 
       1490, 1055, 1505, 2690, 1070, 1520, 1085, 1535, 2702, 1100, 1550, 1115,
        1565, 2711, 1130, 1580, 1145, 1595, 2717, 1160, 1610, 1175, 1625, 
       2720, 1190, 1640, 2725, 1205, 1655, 1220, 1670, 2738, 1235, 1685, 1250,
        1700, 2748, 1265, 1715, 1280, 1730, 2755, 1295, 1745, 1310, 1760, 
       2759, 1325, 1775, 1340}], 
      Line3DBox[{911, 1356, 912, 2761, 1371, 936, 1386, 951, 2764, 1401, 966, 
       1416, 981, 2770, 1431, 996, 1446, 1011, 2779, 1461, 1026, 1476, 1041, 
       2791, 1491, 1056, 1506, 1071, 1521, 1086, 2803, 1536, 1101, 1551, 1116,
        2808, 1566, 1131, 1581, 1146, 2816, 1596, 1161, 1611, 1176, 2827, 
       1626, 1191, 1641, 2726, 1206, 1656, 1221, 2837, 1671, 1236, 1686, 1251,
        2841, 1701, 1266, 1716, 1281, 2848, 1731, 1296, 1746, 1311, 2858, 
       1761, 1326, 1776, 1341}], 
      Line3DBox[{913, 1357, 914, 1372, 2660, 937, 1387, 952, 2765, 1402, 967, 
       1417, 982, 2771, 1432, 997, 1447, 1012, 2780, 1462, 1027, 1477, 1042, 
       2792, 1492, 1057, 1507, 2691, 1072, 1522, 1087, 1537, 1102, 1552, 1117,
        2809, 1567, 1132, 1582, 1147, 2817, 1597, 1162, 1612, 1177, 2828, 
       1627, 1192, 1642, 2727, 1207, 1657, 1222, 1672, 2739, 1237, 1687, 1252,
        2842, 1702, 1267, 1717, 1282, 2849, 1732, 1297, 1747, 1312, 2859, 
       1762, 1327, 1777, 1342}], 
      Line3DBox[{915, 1358, 916, 1373, 2661, 938, 1388, 953, 1403, 2671, 968, 
       1418, 983, 2772, 1433, 998, 1448, 1013, 2781, 1463, 1028, 1478, 1043, 
       2793, 1493, 1058, 1508, 2692, 1073, 1523, 1088, 1538, 2703, 1103, 1553,
        1118, 1568, 1133, 1583, 1148, 2818, 1598, 1163, 1613, 1178, 2829, 
       1628, 1193, 1643, 2728, 1208, 1658, 1223, 1673, 2740, 1238, 1688, 1253,
        1703, 2749, 1268, 1718, 1283, 2850, 1733, 1298, 1748, 1313, 2860, 
       1763, 1328, 1778, 1343}], 
      Line3DBox[{917, 1359, 918, 1374, 2662, 939, 1389, 954, 1404, 2672, 969, 
       1419, 984, 1434, 2679, 999, 1449, 1014, 2782, 1464, 1029, 1479, 1044, 
       2794, 1494, 1059, 1509, 2693, 1074, 1524, 1089, 1539, 2704, 1104, 1554,
        1119, 1569, 2712, 1134, 1584, 1149, 1599, 1164, 1614, 1179, 2830, 
       1629, 1194, 1644, 2729, 1209, 1659, 1224, 1674, 2741, 1239, 1689, 1254,
        1704, 2750, 1269, 1719, 1284, 1734, 2756, 1299, 1749, 1314, 2861, 
       1764, 1329, 1779, 1344}], 
      Line3DBox[{919, 1360, 920, 1375, 2663, 940, 1390, 955, 1405, 2673, 970, 
       1420, 985, 1435, 2680, 1000, 1450, 1015, 1465, 2684, 1030, 1480, 1045, 
       2795, 1495, 1060, 1510, 2694, 1075, 1525, 1090, 1540, 2705, 1105, 1555,
        1120, 1570, 2713, 1135, 1585, 1150, 1600, 2718, 1165, 1615, 1180, 
       1630, 1195, 1645, 2730, 1210, 1660, 1225, 1675, 2742, 1240, 1690, 1255,
        1705, 2751, 1270, 1720, 1285, 1735, 2757, 1300, 1750, 1315, 1765, 
       2760, 1330, 1780, 1345}], 
      Line3DBox[{921, 1361, 922, 2762, 1376, 941, 1391, 956, 2766, 1406, 971, 
       1421, 986, 2773, 1436, 1001, 1451, 1016, 2783, 1466, 1031, 1481, 1046, 
       2796, 1496, 1061, 2801, 1511, 1076, 1526, 1091, 2804, 1541, 1106, 1556,
        1121, 2810, 1571, 1136, 1586, 1151, 2819, 1601, 1166, 1616, 1181, 
       2831, 1631, 1196, 1646, 1211, 1661, 1226, 2838, 1676, 1241, 1691, 1256,
        2843, 1706, 1271, 1721, 1286, 2851, 1736, 1301, 1751, 1316, 2862, 
       1766, 1331, 1781, 1346}], 
      Line3DBox[{923, 1362, 924, 1377, 2664, 942, 1392, 957, 2767, 1407, 972, 
       1422, 987, 2774, 1437, 1002, 1452, 1017, 2784, 1467, 1032, 1482, 1047, 
       2797, 1497, 1062, 1512, 2695, 1077, 1527, 1092, 2805, 1542, 1107, 1557,
        1122, 2811, 1572, 1137, 1587, 1152, 2820, 1602, 1167, 1617, 1182, 
       2832, 1632, 1197, 1647, 2731, 1212, 1662, 1227, 1677, 1242, 1692, 1257,
        2844, 1707, 1272, 1722, 1287, 2852, 1737, 1302, 1752, 1317, 2863, 
       1767, 1332, 1782, 1347}], 
      Line3DBox[{925, 1363, 926, 1378, 2665, 943, 1393, 958, 1408, 2674, 973, 
       1423, 988, 2775, 1438, 1003, 1453, 1018, 2785, 1468, 1033, 1483, 1048, 
       2798, 1498, 1063, 1513, 2696, 1078, 1528, 1093, 1543, 2706, 1108, 1558,
        1123, 2812, 1573, 1138, 1588, 1153, 2821, 1603, 1168, 1618, 1183, 
       2833, 1633, 1198, 1648, 2732, 1213, 1663, 1228, 1678, 2743, 1243, 1693,
        1258, 1708, 1273, 1723, 1288, 2853, 1738, 1303, 1753, 1318, 2864, 
       1768, 1333, 1783, 1348}], 
      Line3DBox[{927, 1364, 928, 1379, 2666, 944, 1394, 959, 1409, 2675, 974, 
       1424, 989, 1439, 2681, 1004, 1454, 1019, 2786, 1469, 1034, 1484, 1049, 
       2799, 1499, 1064, 1514, 2697, 1079, 1529, 1094, 1544, 2707, 1109, 1559,
        1124, 1574, 2714, 1139, 1589, 1154, 2822, 1604, 1169, 1619, 1184, 
       2834, 1634, 1199, 1649, 2733, 1214, 1664, 1229, 1679, 2744, 1244, 1694,
        1259, 1709, 2752, 1274, 1724, 1289, 1739, 1304, 1754, 1319, 2865, 
       1769, 1334, 1784, 1349}], 
      Line3DBox[{929, 1365, 930, 1380, 2667, 945, 1395, 960, 1410, 2676, 975, 
       1425, 990, 1440, 2682, 1005, 1455, 1020, 1470, 2685, 1035, 1485, 1050, 
       2800, 1500, 1065, 1515, 2698, 1080, 1530, 1095, 1545, 2708, 1110, 1560,
        1125, 1575, 2715, 1140, 1590, 1155, 1605, 2719, 1170, 1620, 1185, 
       2835, 1635, 1200, 1650, 2734, 1215, 1665, 1230, 1680, 2745, 1245, 1695,
        1260, 1710, 2753, 1275, 1725, 1290, 1740, 2758, 1305, 1755, 1320, 
       1770, 1335, 1785, 1350}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
OS5XYpfYsEv2x4KY2UOg6OIBvwee9ewdF0vdslVlQaVay/Qr2WFwStZj2bRF
DvtJZf+ZsFuWANhe8WZ1fAPSD1TGp7b6A5/rrd0Ghy1AWOe9u/c430CQzmfv
ReWK7MNiuxyuhluAY6bYtynIXcVni9llj+ITjHuJFmEWQFtAhmca8pYm67EG
ZxyLsLU+dx7yTm4lgnuvK9qsaOGOO/ySHaFDPqyNETwgy2gHb78TpnlgX4Aw
5CrH9Qlu5MpMV7R0x/019c13QV5xVZPgld96vEdv6GJ+O+63boD88Altgvdv
twh6zLLH7JU2b5KBXK9Kh+A1Agu4RBY6YB2zN0yaQ+6xRYPgN3R2lFwIPY1/
079Cuw65ZZE8wW/Z57/fMHEAz4h6vtUU8pEn5PjxJjGroQJfTEOsskoH8rBD
dIJvzy/YI9bshafb18TpQT7VRyO4T7fKwwva7nhNaHw1um6iBjnPboFM3qRZ
JzH/AKmhM5BPfyI/H6s5Rwv5zp3BDc5d+6Z31hZ0/7Cym4TckvK5PumU3sax
YpqzC+nzNz4yPrOqJ7toP+ax3IRJnzNfSxM+f2vY+7e8VZt+BWQSPi/II31W
Hw3nHbM7zQph1xE+X9tvRPosOGoiLvSKVSdaSfg89+wjO+SzY9fg+nHpEvqy
xWa2yGcv7drVyGdTzfa0a/4DrJwQq0Hk8/ZH3ELI57xVX9PpTQaY/85lDcjn
H3jXCuTzx84Mp8xhF8xSBxfrgD4XC7s1FUOf+e+sF/qs7ofHrLgztgv6fL8q
9fzo12ZgHnqmQOLcbHD1++fz49Dn4cVVspqO9exIYWF23Y5GPPPg5QfN64YB
lwfPDe79OexvrN6fvuK8bJxR8uYJ9PlB2KqbpzB/kPun/HecGA9bwnLS9QH8
PKMKo4UeVimyFd68vW2swMMu/tTwlQP5nbSc7/MLRvE/BrbnvynysN1+hHIQ
T9rm/PbtFjZ2ROPCWNAWHjYz8QHBV69VEBJk++KzeeZxVCDf1kHy6/liafMs
bTAFq4WGf9R52BEJJJ/auNhCrdgQf/9eRNpLmYfdXUHyYEZJQ/4rQyyh3sBg
kxKcp5HkK151L/oqb4l1XrizgX8zDztT4CHBPbzCwQZLd6xZUr/mIhy/vI4c
j719bpdz1gW37G3H98LxN/jI8fUlQQkvzp7B1V+Ge8+V4WEruZA8YzqOI8E+
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
bh6Q3Tjlvor14GiW1FDIWAtmJc9LkI0+5x/xeAk6NQdkbyE+puyfNbQRh4MK
sfcpIk/WSQ5ZM//1Sz+Ix3dUZplDnfn4X2eNFTfXhfJ14btvMnHQXhhOfW/+
3znQggL8g/g+J+iPNhxEzhM3z4FaFnyoCmAdBzFgWky7rUjuCs2uiuCTY8DA
08N5vn0KKC1xSI5OiuKCf8YKqzsMAqnXjS6l+ZOAZ13rJpe2IcEj07pj/dAw
eNSsaGkETYMSd2GNiXsfCcmDpn+NagfAvFKcVtbCLDiA+zbRHwpDH67VKZ+9
3QYkX4t0HLz3nVjZtWTuUh0MdW+pNa1NnwOq+XCayLZkIvHHg9tF2r6Qi0nK
g7tkzzFb6H5POPER63b9ueR7VwKZoeHCPI+CN5KCbqXQZdb8NikNdWiQGjfG
aGkiE/vdoD4tGCzVuUEb5yAOwDC3z4gnIkxD0zd0UQ8ZpvJLMGxtWG4O4WA4
HO23nbWRb2yhCXb9LQ4tbqPJfKAMbZ7fPAej7xHTRsjD+ir63puN9ZObBXhm
FaabEBMM8zcuu2/mhwuHtOmUVb6CY4Fb7Q0C28GHv8xPQmtnwJptrRqj7xjg
0Zcm2dETiDk+UfxxgWPAKXL37N3yWqBrIBjJdX8EbDmOhxUfjwPW8dvReSbv
gPuNUojebwyYXxJM331lDFwVtFEWZUwkViaUH8btIucpFx9GHBwbBjjjYT6j
R+7E7c/vnVdenwBW+CMNGSvD4IVz/KmccRjQ7+dt9Z2cAFDwx2NPOEYAQ+9I
BdHoIJE7rY/u9ewEuImjAZa7R4D7PuTS2bZvCFvUyMh1Mr9H9+XZczLv1s25
fPpzORRC+FzqSeY7YomHK8j8O+Osa4iuD7K+srfSi8wNFAa6y8n8a2TbuOo8
EyJ26O9TlH9qFJpBuVWUkJHWhVWc/tP7GNfMyMb46KvajvOEV4TfEUUYv/k7
BuN9zEdPcMUJE/grCjEu/TsW44MXPTNCBk/jel9SePQqhR9Ns+vjSp2uKiql
8JsrFJ5mragkmN0ol0blj6hcaX+H1LbnZVWZVH6fyns0OO9JenRXZfw//jXj
XrmKarNcKpVnUXn1fbnoGNG8/7k+vd74M/lv5XK5VH6bys0eec77iuVVPaLy
NCpPAJNGvYBYdZfK86hcWIbNP2U+vyqbypM3Puf2Z3zsDXX/c32jIXMW6M33
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm], 
    FormBox["\"Log(relative error)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->Large,
  Method->{"RotationControl" -> "Globe"},
  PlotLabel->FormBox[
    RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             RowBox[{"0.5`"}], " ", 
             SuperscriptBox["x", "2"]}]}], "+", 
         RowBox[{"1.4`", " ", "x", " ", "y"}], "-", 
         SuperscriptBox["y", "2"]}]], " ", 
      RowBox[{"sin", "(", 
        RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"2", " ", "y"}]}], ")"}]}], TraditionalForm],
  PlotRange->{{1., 30.}, {1., 30.}, {-19.915047060949668`, 1.316783031439175}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.548540029612909, -0.8282993922616857, 2.066122899113107},
  ViewVertical->{0., 0., 1.}]], "Print",
 CellChangeTimes->{{3.590874413800235*^9, 3.590874423330186*^9}, {
   3.591187765421288*^9, 3.591187771494319*^9}, {3.5912207558576*^9, 
   3.591220765888507*^9}, 3.591220930532337*^9, {3.591221119323996*^9, 
   3.591221123050435*^9}, {3.591221279137065*^9, 3.591221296461606*^9}, {
   3.591221353475976*^9, 3.591221368455625*^9}, {3.5912217545156927`*^9, 
   3.591221757224875*^9}, 3.5912218458453207`*^9, 3.591222535657942*^9, {
   3.5912226757259912`*^9, 3.591222827562558*^9}, 3.591223064020265*^9, 
   3.591224864027217*^9, {3.59122491553442*^9, 3.591224922537672*^9}, {
   3.59122518690656*^9, 3.591225240747504*^9}, {3.591227301922521*^9, 
   3.591227323241712*^9}, 3.591227591514888*^9, 3.59122762783174*^9, 
   3.5912276822422943`*^9, 3.591296891942898*^9, 3.591297712288454*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Compute the non-singular integral over the triangle\n",
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", ",", "0"}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{"0", ",", "2"}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{"3", ",", "2"}], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.591200712554901*^9, 3.5912007219370203`*^9}, {
  3.5912225402603292`*^9, 3.591222540955958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"p", ",", "fun", ",", "a0", ",", "x", ",", "y"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5"}], 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"0.1", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{"1.4", "x", " ", "y"}]}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"x", "*", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<true value = \>\"", ",", 
    RowBox[{"a0", "=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"fun", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", 
          RowBox[{"y", "/", "2"}]}], ",", 
         RowBox[{"1", "+", "y"}]}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qx", ",", "qy", ",", "w", ",", "q", ",", "pStd"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pStd", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"qx", ",", "qy", ",", "w"}], "}"}], "=", 
           RowBox[{
            RowBox[{"DunavantRule", "[", 
             RowBox[{"rule", ",", "pStd"}], "]"}], "//", "Quiet"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"q", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"qx", ",", "qy"}], "}"}], "\[Transpose]"}], "//", 
            "ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"w", "=", 
           RowBox[{"w", "//", "ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NIntegrateNonSingularTriangle", "[", 
               RowBox[{"p", ",", "fun", ",", 
                RowBox[{"{", 
                 RowBox[{"q", ",", "w"}], "}"}]}], "]"}], "-", "a0"}], ")"}], 
            "/", "a0"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"rule", ",", "1", ",", "20"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "//", 
       RowBox[{
        RowBox[{"ListLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<rule\>\"", ",", "\"\<Log(relative error)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"fun", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}]}]}], "]"}], "&"}]}], "//", 
      "Print"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.591220206165964*^9, 3.591220247959354*^9}, {
   3.591220731091001*^9, 3.5912209856756983`*^9}, {3.591221140209674*^9, 
   3.591221203633975*^9}, {3.591221761604952*^9, 3.59122179571301*^9}, {
   3.591221834820837*^9, 3.591221836096065*^9}, {3.591221885433264*^9, 
   3.59122236462176*^9}, {3.591222419913806*^9, 3.5912225673594923`*^9}, {
   3.5912228534139757`*^9, 3.59122285646453*^9}, {3.591222915429138*^9, 
   3.5912229336828327`*^9}, {3.591222990803629*^9, 3.5912230551643677`*^9}, {
   3.5912249250249863`*^9, 3.5912250161546583`*^9}, {3.59122506789464*^9, 
   3.5912250780959673`*^9}, {3.5912251082991257`*^9, 3.591225173720471*^9}, {
   3.591225252024337*^9, 3.591225279246695*^9}, {3.591225331260483*^9, 
   3.5912254230407553`*^9}, {3.591225578644939*^9, 3.591225583911487*^9}, {
   3.591225617339431*^9, 3.591225625131036*^9}, {3.591225704894247*^9, 
   3.59122575038408*^9}, {3.591225800083981*^9, 3.591225820641993*^9}, {
   3.591226230258778*^9, 3.5912262920772667`*^9}, {3.591226409154709*^9, 
   3.591226414505229*^9}, {3.591226448590941*^9, 3.5912265176824636`*^9}, {
   3.591226581303156*^9, 3.591226618663782*^9}, {3.591226871492259*^9, 
   3.5912270366292953`*^9}, 3.5912275812097692`*^9, {3.591227633603199*^9, 
   3.591227637283637*^9}, {3.591283557183701*^9, 3.591283562044058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"true value = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "2.0587759208790057`"}]}],
  SequenceForm["true value = ", -2.0587759208790057`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591220986393096*^9, {3.591221158902719*^9, 3.5912212046777697`*^9}, 
   3.591221758791677*^9, {3.591221798169077*^9, 3.591221836644801*^9}, {
   3.5912218872806377`*^9, 3.591221903381215*^9}, {3.591222196837286*^9, 
   3.591222212670285*^9}, {3.5912222926957607`*^9, 3.59122230215944*^9}, {
   3.5912223370303707`*^9, 3.591222365581476*^9}, {3.59122243743217*^9, 
   3.5912225628201323`*^9}, 3.591222926314599*^9, {3.591222993449019*^9, 
   3.591223021001172*^9}, 3.591223065558084*^9, 3.591223997035246*^9, 
   3.591224864560598*^9, 3.591224925467558*^9, {3.59122497231732*^9, 
   3.591225016911627*^9}, {3.591225051590028*^9, 3.591225071975624*^9}, {
   3.591225102639097*^9, 3.591225174550928*^9}, {3.591225257755658*^9, 
   3.591225279726156*^9}, {3.591225339931767*^9, 3.5912253710238132`*^9}, {
   3.591225402222748*^9, 3.5912254127523813`*^9}, 3.5912255193033*^9, {
   3.591225618195962*^9, 3.591225625904688*^9}, {3.5912257162037287`*^9, 
   3.591225742740026*^9}, {3.591225803224691*^9, 3.5912258214016943`*^9}, {
   3.5912262790611553`*^9, 3.591226292705687*^9}, {3.59122642154313*^9, 
   3.591226518900503*^9}, {3.591226605027804*^9, 3.5912266192468147`*^9}, {
   3.5912268867378597`*^9, 3.5912270375091953`*^9}, 3.5912275815606823`*^9, 
   3.5912276380637074`*^9, 3.5912835627419453`*^9, 3.5912836265510197`*^9, 
   3.591296896042128*^9, 3.5912977125293913`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Led+TZT4yujA1TAIdHw4sdpN+/sh3A5HD6m
qaRyXdoF5Qs4pMSL/P1cfBfKF3H4u8BY8Dcj5wEIX8IhwChT+lv/X6i8jMNi
k9JZF3P+QPkKDvGcBx/YCAtA1Ss5KC/eo8DTLgPlqzjw5QTazBJVgPLVHF68
myNq3CEJ5Ws4rNmocf5nmQqUr+XwXpJj8X45ZShfxyFX5curuBUweT2HLfyT
w3VE9aB8Awd+zwo5pa/aUL6hQ8vhcoF1rbpQvpHDZGNb+XM/DKB8Y4dzuUda
2woMoXwTB+lbkguT5xseAADXNVji
       "]]}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"rule\"", TraditionalForm], 
    FormBox["\"Log(relative error)\"", TraditionalForm]},
  AxesOrigin->{0, -17.622613972484128`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
    RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             RowBox[{"0.5`"}], " ", 
             SuperscriptBox["x", "2"]}]}], "+", 
         RowBox[{"1.4`", " ", "x", " ", "y"}], "+", 
         RowBox[{"0.1`", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", 
      RowBox[{"sin", "(", 
        RowBox[{"x", " ", "y"}], ")"}]}], TraditionalForm],
  PlotRange->{{0, 20.}, {-17.622613972484128`, 2.244706347316959}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.4, 0.4}, {0.39734640639602176`, 0.39734640639602176`}},
  Ticks->{Automatic, {{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Print",
 CellChangeTimes->{
  3.591220986393096*^9, {3.591221158902719*^9, 3.5912212046777697`*^9}, 
   3.591221758791677*^9, {3.591221798169077*^9, 3.591221836644801*^9}, {
   3.5912218872806377`*^9, 3.591221903381215*^9}, {3.591222196837286*^9, 
   3.591222212670285*^9}, {3.5912222926957607`*^9, 3.59122230215944*^9}, {
   3.5912223370303707`*^9, 3.591222365581476*^9}, {3.59122243743217*^9, 
   3.5912225628201323`*^9}, 3.591222926314599*^9, {3.591222993449019*^9, 
   3.591223021001172*^9}, 3.591223065558084*^9, 3.591223997035246*^9, 
   3.591224864560598*^9, 3.591224925467558*^9, {3.59122497231732*^9, 
   3.591225016911627*^9}, {3.591225051590028*^9, 3.591225071975624*^9}, {
   3.591225102639097*^9, 3.591225174550928*^9}, {3.591225257755658*^9, 
   3.591225279726156*^9}, {3.591225339931767*^9, 3.5912253710238132`*^9}, {
   3.591225402222748*^9, 3.5912254127523813`*^9}, 3.5912255193033*^9, {
   3.591225618195962*^9, 3.591225625904688*^9}, {3.5912257162037287`*^9, 
   3.591225742740026*^9}, {3.591225803224691*^9, 3.5912258214016943`*^9}, {
   3.5912262790611553`*^9, 3.591226292705687*^9}, {3.59122642154313*^9, 
   3.591226518900503*^9}, {3.591226605027804*^9, 3.5912266192468147`*^9}, {
   3.5912268867378597`*^9, 3.5912270375091953`*^9}, 3.5912275815606823`*^9, 
   3.5912276380637074`*^9, 3.5912835627419453`*^9, 3.5912836265510197`*^9, 
   3.591296896042128*^9, 3.5912977127083683`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dumping and Reading .msh File - Modular", "Section",
 CellChangeTimes->{3.583708089521926*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Developer`\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.5829752092201595`*^9, 3.5829752174782095`*^9}, {
   3.5829770327458706`*^9, 3.5829770328458834`*^9}, 3.5835933870908804`*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "sprtr", ",", "ReadMSHFile", ",", "DumpMSHFileTo2DATFiles", ",", 
   "ReadMSHFileFrom2DATFiles"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "\[Equal]", "\"\<MacOSX\>\""}], ",", 
    RowBox[{
     RowBox[{"sprtr", "=", "\"\<_\>\""}], ";"}], ",", "0.0"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "\[Equal]", "\"\<Windows\>\""}], ",", 
    RowBox[{
     RowBox[{"sprtr", "=", "\"\<_\>\""}], ";"}], ",", "0.0"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$OperatingSystem", "\[Equal]", "\"\<Linux\>\""}], ",", 
     RowBox[{
      RowBox[{"sprtr", "=", "\"\<_\>\""}], ";"}], ",", "0.0"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ReadMSHFile", "[", "filename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "SkipStreamNumbers", ",", "ReadStreamNumbers", ",", "meshStr", 
      ",", "nNodes", ",", "nodesTable", ",", "nElements", ",", "nPoints", ",",
       "nLines", ",", "nTriangles", ",", "trianglesTable", ",", "temp"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"SkipStreamNumbers", "=", 
      RowBox[{
       RowBox[{"Skip", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"Number", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Range", "[", "#2", "]"}]}], "}"}]}], "]"}]}], "]"}], 
       "&"}]}], ";", "\n", 
     RowBox[{"ReadStreamNumbers", "=", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"Number", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Range", "[", "#2", "]"}]}], "}"}]}], "]"}]}], "]"}], 
       "&"}]}], ";", "\n", 
     RowBox[{"meshStr", "=", 
      RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Find", "[", 
      RowBox[{"meshStr", ",", "\"\<$Nodes\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nNodes", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"meshStr", ",", "Number"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodesTable", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.0", ",", 
        RowBox[{"{", 
         RowBox[{"nNodes", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nNodes"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Skip", "[", 
         RowBox[{"meshStr", ",", "Number"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "nodesTable", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "=", 
         RowBox[{"N", "@", 
          RowBox[{"ReadStreamNumbers", "[", 
           RowBox[{"meshStr", ",", "2"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Skip", "[", 
         RowBox[{"meshStr", ",", "Number"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Find", "[", 
      RowBox[{"meshStr", ",", "\"\<$Elements\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nElements", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"meshStr", ",", "Number"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nPoints", "=", "0"}], ";", 
     RowBox[{"nLines", "=", "0"}], ";", 
     RowBox[{"nTriangles", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"trianglesTable", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.0", ",", 
        RowBox[{"{", 
         RowBox[{"nElements", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nElements"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Skip", "[", 
         RowBox[{"meshStr", ",", "Number"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"meshStr", ",", "Number"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"temp", "\[Equal]", "15"}], ",", 
          RowBox[{
           RowBox[{"nPoints", "++"}], ";", 
           RowBox[{"SkipStreamNumbers", "[", 
            RowBox[{"meshStr", ",", "4"}], "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"temp", "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"nLines", "++"}], ";", 
           RowBox[{"SkipStreamNumbers", "[", 
            RowBox[{"meshStr", ",", "5"}], "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"temp", "\[Equal]", "2"}], ",", 
          RowBox[{
           RowBox[{"nTriangles", "++"}], ";", 
           RowBox[{"SkipStreamNumbers", "[", 
            RowBox[{"meshStr", ",", "3"}], "]"}], ";", 
           RowBox[{
            RowBox[{
            "trianglesTable", "\[LeftDoubleBracket]", "nTriangles", 
             "\[RightDoubleBracket]"}], "=", 
            RowBox[{"N", "@", 
             RowBox[{"ReadStreamNumbers", "[", 
              RowBox[{"meshStr", ",", "3"}], "]"}]}]}], ";"}]}], "]"}], 
        ";"}]}], "\n", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"trianglesTable", "=", 
      RowBox[{"trianglesTable", "\[LeftDoubleBracket]", 
       RowBox[{"1", ";;", "nTriangles"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "meshStr", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToPackedArray", "/@", 
      RowBox[{"{", 
       RowBox[{"nodesTable", ",", 
        RowBox[{"Floor", "@", "trianglesTable"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"DumpMSHFileTo2DATFiles", "[", "mshfilename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dir", ",", "nodesTable", ",", "trianglesTable"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodesTable", ",", "trianglesTable"}], "}"}], "=", 
      RowBox[{"ReadMSHFile", "[", "mshfilename", "]"}]}], ";", "\n", 
     RowBox[{"dir", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirectoryName", "[", "mshfilename", "]"}], ",", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "mshfilename", "]"}], "<>", "sprtr", 
          "<>", "\"\<dat\>\""}]}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"CreateDirectory", "[", "dir", "]"}], "//", "Quiet"}], ";", 
     "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<directory created:\>\"", ",", "dir"}], "]"}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<nodes.dat\>\""}], "}"}], "]"}], ",", 
       "nodesTable"}], "]"}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<triangles.dat\>\""}], "}"}], "]"}], ",", 
       "trianglesTable"}], "]"}], ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<exported nodes file: \>\"", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<nodes.dat\>\""}], "}"}], "]"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<exported triangles file: \>\"", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<triangles.dat\>\""}], "}"}], "]"}]}], "]"}],
      ";"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ReadMSHFileFrom2DATFiles", "[", "mshfilename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dir", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"dir", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirectoryName", "[", "mshfilename", "]"}], ",", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "mshfilename", "]"}], "<>", "sprtr", 
          "<>", "\"\<dat\>\""}]}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<imported nodes file: \>\"", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<nodes.dat\>\""}], "}"}], "]"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<imported triangles file: \>\"", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", "\"\<triangles.dat\>\""}], "}"}], "]"}]}], "]"}],
      ";", "\n", 
     RowBox[{"ToPackedArray", "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"Import", "[", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"dir", ",", "\"\<nodes.dat\>\""}], "}"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"Import", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dir", ",", "\"\<triangles.dat\>\""}], "}"}], "]"}], 
         "]"}]}], "}"}]}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.5829812398800664`*^9, 3.582981366366083*^9}, {
   3.582981402277863*^9, 3.5829814466913724`*^9}, {3.58298149987234*^9, 
   3.5829815000284524`*^9}, {3.5829844696778*^9, 3.582984658643031*^9}, {
   3.582984713906705*^9, 3.582984720330519*^9}, {3.58298475472682*^9, 
   3.5829847555269246`*^9}, {3.5829847886771355`*^9, 
   3.5829848271710267`*^9}, {3.582984959772045*^9, 3.582984960284111*^9}, {
   3.5829852713386707`*^9, 3.5829852997362804`*^9}, {3.5829853426644745`*^9, 
   3.582985375393485*^9}, {3.5829859020954103`*^9, 3.582985958281311*^9}, {
   3.5829866686150265`*^9, 3.5829866691590633`*^9}, {3.5829867298406153`*^9, 
   3.5829869048103695`*^9}, {3.583001934373179*^9, 3.5830020111883793`*^9}, {
   3.583002070983842*^9, 3.583002076911882*^9}, {3.5830654226318607`*^9, 
   3.583065422796879*^9}, {3.5830655019099803`*^9, 3.5830656014765882`*^9}, {
   3.583065637248134*^9, 3.58306569307323*^9}, {3.5831492161132803`*^9, 
   3.583149223968856*^9}, 3.58359335079827*^9, 3.583593398313306*^9, {
   3.583594122487302*^9, 3.5835941376906652`*^9}, {3.583850902908245*^9, 
   3.583850904324091*^9}, {3.583851313667802*^9, 3.583851499388173*^9}, {
   3.583851606594981*^9, 3.5838516097957172`*^9}, {3.583851781497847*^9, 
   3.583851838000901*^9}, {3.583851943580291*^9, 3.583851960873818*^9}, 
   3.58385200686092*^9, {3.583852197233427*^9, 3.583852205610776*^9}, {
   3.5838529029206343`*^9, 3.583852925115149*^9}, {3.583852963362013*^9, 
   3.583852996168881*^9}, {3.58385313834151*^9, 3.583853215224555*^9}, {
   3.58531175637753*^9, 3.5853117860262403`*^9}, {3.585653632712223*^9, 
   3.5856537852675343`*^9}, {3.586872265282894*^9, 3.586872268103176*^9}, {
   3.587211153645831*^9, 3.587211161132506*^9}}],

Cell["Read directly from the .msh file and check", "Text",
 CellChangeTimes->{{3.582981542897601*^9, 3.5829815545978365`*^9}, {
  3.582984451772524*^9, 3.582984455561034*^9}, {3.5829869864056935`*^9, 
  3.5829870050210557`*^9}, {3.5829993792546463`*^9, 3.5829993808926597`*^9}, {
  3.583593673694292*^9, 3.5835936745504017`*^9}},
 FontSize->12],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<mesh\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5835936529016476`*^9, 3.5835936668044176`*^9}, {
   3.583593720099143*^9, 3.583593729286347*^9}, 3.5835938358966885`*^9, 
   3.583593887606263*^9, {3.583705734423766*^9, 3.583705740183626*^9}, {
   3.583708133523797*^9, 3.5837081720875473`*^9}, {3.5837082556474457`*^9, 
   3.58370827233134*^9}, {3.583850908622614*^9, 3.5838509156634903`*^9}, {
   3.583851527137578*^9, 3.5838515406839237`*^9}, {3.583851648917296*^9, 
   3.583851656143208*^9}, 3.583852497948946*^9, {3.585322591898178*^9, 
   3.58532262924944*^9}},
 FontSize->12],

Cell[BoxData["\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh\"\>"], "Output",
 CellChangeTimes->{3.58532264108464*^9, 3.59129690174585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nodesRaw", ",", "trianglesRaw"}], "}"}], "=", 
   RowBox[{"ReadMSHFile", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dir", ",", "\"\<trial.msh\>\""}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PackedArrayQ", "/@", 
  RowBox[{"{", 
   RowBox[{"nodesRaw", ",", "trianglesRaw"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5829814699825306`*^9, 3.5829814795297613`*^9}, {
   3.5829853897063026`*^9, 3.5829854030239944`*^9}, {3.5830020536521664`*^9, 
   3.583002058815711*^9}, {3.5830654338332853`*^9, 3.5830654340773125`*^9}, {
   3.583072050950677*^9, 3.5830720658377333`*^9}, {3.5835937102768927`*^9, 
   3.5835937404847326`*^9}, 3.583593860025741*^9, 3.583593893030903*^9, {
   3.583851683050192*^9, 3.5838516867519493`*^9}},
 FontSize->12],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/trial.msh\\\"\
\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5912969018680353`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5912969018685837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296901869125*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "ilsmn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Single or list of non-negative machine-sized integers \
expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(ConstantArray[\\(\\(0.`, \\(\\({\\(\\(Read[\\(\\($Failed, \
Number\\)\\)]\\)\\), 2}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ilsmn\\\", ButtonNote -> \
\\\"ConstantArray::ilsmn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296901944345*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296901944913*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: stream\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296901945455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "ilsmn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Single or list of non-negative machine-sized integers \
expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(ConstantArray[\\(\\(0.`, \\(\\({\\(\\(Read[\\(\\($Failed, \
Number\\)\\)]\\)\\), 3}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ilsmn\\\", ButtonNote -> \
\\\"ConstantArray::ilsmn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902028633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ConstantArray\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] or \
\[NoBreak]\\!\\(3\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ConstantArray::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902029233*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.582985401639821*^9, 3.582986099324237*^9, 3.582986748220906*^9, 
   3.5829870131340237`*^9, {3.5829871278947697`*^9, 3.5829871355557394`*^9}, 
   3.5829993212062535`*^9, 3.583002023715336*^9, 3.583002059486553*^9, {
   3.5830021096878633`*^9, 3.583002111388275*^9}, 3.583012469501071*^9, {
   3.583065426543354*^9, 3.5830654419533143`*^9}, {3.5830655153206387`*^9, 
   3.583065535076148*^9}, {3.5830655774655466`*^9, 3.5830655786616883`*^9}, {
   3.583065649014628*^9, 3.5830656963416443`*^9}, 3.5830657437940063`*^9, 
   3.5830717331152816`*^9, {3.583071788509321*^9, 3.583071823611782*^9}, 
   3.583071889164113*^9, {3.583072067017886*^9, 3.58307207240557*^9}, {
   3.5830721036715436`*^9, 3.5830721352035522`*^9}, 3.5830725370616245`*^9, {
   3.5831492189626427`*^9, 3.583149247108793*^9}, 3.5832359727827096`*^9, 
   3.583278721840643*^9, {3.5835936941958504`*^9, 3.5835937409347916`*^9}, {
   3.5835937725115833`*^9, 3.5835937850741806`*^9}, {3.583593844835786*^9, 
   3.5835938607938037`*^9}, 3.5835938996147857`*^9, 3.583705755917695*^9, 
   3.583851563133089*^9, {3.58385168780401*^9, 3.5838516968239822`*^9}, 
   3.583852083598097*^9, 3.58385250834898*^9, 3.583852815260048*^9, 
   3.5838577879748*^9, 3.58388283627054*^9, 3.584056045484371*^9, {
   3.584099466005124*^9, 3.584099476475253*^9}, 3.5841002115237017`*^9, 
   3.584101091103874*^9, 3.584103111901082*^9, 3.584103291179851*^9, 
   3.5841055792921886`*^9, 3.584110202545752*^9, 3.584448701074497*^9, {
   3.5853117714008827`*^9, 3.585311788903112*^9}, 3.585318866978187*^9, 
   3.585322643635158*^9, 3.5912969020297737`*^9},
 FontSize->12]
}, Open  ]],

Cell["Dump the .msh file data into two separate .dat files", "Text",
 CellChangeTimes->{{3.582985406461435*^9, 3.5829854355933886`*^9}, {
   3.582986130437193*^9, 3.5829861330565715`*^9}, {3.582986687184391*^9, 
   3.582986689160611*^9}, {3.5829869191531467`*^9, 3.582986924234789*^9}, {
   3.582987016790489*^9, 3.5829870381602044`*^9}, {3.582999382983054*^9, 
   3.5829993999882483`*^9}, {3.5830720892847137`*^9, 3.583072089910797*^9}, 
   3.5833599102645226`*^9},
 FontSize->12],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DumpMSHFileTo2DATFiles", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"dir", ",", "\"\<square26.msh\>\""}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5829859652602253`*^9, 3.582985994128867*^9}, {
   3.5829861135530443`*^9, 3.5829861467523117`*^9}, 3.5829866934221487`*^9, 
   3.582986800584075*^9, {3.58298691582572*^9, 3.582986966239126*^9}, {
   3.5829870646252747`*^9, 3.582987072268278*^9}, {3.583002032139629*^9, 
   3.583002040438686*^9}, {3.5830720757459974`*^9, 3.5830721078780785`*^9}, {
   3.5835938070929785`*^9, 3.583593827551632*^9}, {3.583593883784774*^9, 
   3.583593894657156*^9}, {3.583851660553336*^9, 3.583851670978178*^9}, {
   3.5853209465080643`*^9, 3.585320952816535*^9}},
 FontSize->12],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26.msh\
\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902111059*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902111814*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902112352*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "ilsmn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Single or list of non-negative machine-sized integers \
expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(ConstantArray[\\(\\(0.`, \\(\\({\\(\\(Read[\\(\\($Failed, \
Number\\)\\)]\\)\\), 2}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ilsmn\\\", ButtonNote -> \
\\\"ConstantArray::ilsmn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902195932*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.59129690219652*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: stream\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902197047*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "ilsmn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Single or list of non-negative machine-sized integers \
expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(ConstantArray[\\(\\(0.`, \\(\\({\\(\\(Read[\\(\\($Failed, \
Number\\)\\)]\\)\\), 3}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ilsmn\\\", ButtonNote -> \
\\\"ConstantArray::ilsmn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5912969021975737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ConstantArray", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ConstantArray\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] or \
\[NoBreak]\\!\\(3\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ConstantArray::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902198112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"directory created:\"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat\"\>"}],
  SequenceForm[
  "directory created:", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5838516122606564`*^9, 3.5838516295645027`*^9}, 
   3.5838517028487597`*^9, 3.583852097624551*^9, 3.583852212426412*^9, {
   3.583852485463388*^9, 3.583852514251636*^9}, 3.5838528153099737`*^9, 
   3.5838532213301277`*^9, 3.583857788006097*^9, 3.583882836298958*^9, 
   3.584056045524105*^9, 3.584099480040597*^9, 3.5841002136425858`*^9, 
   3.584101094756768*^9, 3.584103111931106*^9, 3.58410329120844*^9, 
   3.584105579324418*^9, 3.584110202581398*^9, 3.584448701106707*^9, 
   3.585314243140759*^9, {3.585318859892267*^9, 3.5853188767880774`*^9}, 
   3.585320953447646*^9, 3.59129690219866*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"exported nodes file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat/nodes.dat\"\>"}\
],
  SequenceForm[
  "exported nodes file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat/nodes.dat"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5838516122606564`*^9, 3.5838516295645027`*^9}, 
   3.5838517028487597`*^9, 3.583852097624551*^9, 3.583852212426412*^9, {
   3.583852485463388*^9, 3.583852514251636*^9}, 3.5838528153099737`*^9, 
   3.5838532213301277`*^9, 3.583857788006097*^9, 3.583882836298958*^9, 
   3.584056045524105*^9, 3.584099480040597*^9, 3.5841002136425858`*^9, 
   3.584101094756768*^9, 3.584103111931106*^9, 3.58410329120844*^9, 
   3.584105579324418*^9, 3.584110202581398*^9, 3.584448701106707*^9, 
   3.585314243140759*^9, {3.585318859892267*^9, 3.5853188767880774`*^9}, 
   3.585320953447646*^9, 3.5912969022801027`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"exported triangles file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat/triangles.dat\"\
\>"}],
  SequenceForm[
  "exported triangles file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/square26_dat/triangles.dat"],
  
  Editable->False]], "Print",
 CellChangeTimes->{{3.5838516122606564`*^9, 3.5838516295645027`*^9}, 
   3.5838517028487597`*^9, 3.583852097624551*^9, 3.583852212426412*^9, {
   3.583852485463388*^9, 3.583852514251636*^9}, 3.5838528153099737`*^9, 
   3.5838532213301277`*^9, 3.583857788006097*^9, 3.583882836298958*^9, 
   3.584056045524105*^9, 3.584099480040597*^9, 3.5841002136425858`*^9, 
   3.584101094756768*^9, 3.584103111931106*^9, 3.58410329120844*^9, 
   3.584105579324418*^9, 3.584110202581398*^9, 3.584448701106707*^9, 
   3.585314243140759*^9, {3.585318859892267*^9, 3.5853188767880774`*^9}, 
   3.585320953447646*^9, 3.591296902290208*^9}]
}, Open  ]]
}, Open  ]],

Cell["Read the two .dat files and check", "Text",
 CellChangeTimes->{3.583072094415366*^9},
 FontSize->12],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nodesRaw2", ",", "trianglesRaw2"}], "}"}], "=", 
   RowBox[{"ReadMSHFileFrom2DATFiles", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dir", ",", "\"\<trial.msh\>\""}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PackedArrayQ", "/@", 
  RowBox[{"{", 
   RowBox[{"nodesRaw2", ",", "trianglesRaw2"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Norm", "/@", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"nodesRaw2", "-", "nodesRaw"}], ",", 
    RowBox[{"trianglesRaw2", "-", "trianglesRaw"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.5838518627107983`*^9, {3.583851914385516*^9, 3.5838519233788633`*^9}},
 FontSize->12],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"imported nodes file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/trial_dat/nodes.dat\"\>"}],
  SequenceForm[
  "imported nodes file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/trial_dat/nodes.dat"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.583853172941897*^9, 3.583853217918037*^9}, 
   3.583857788039719*^9, 3.583882836401577*^9, 3.584056045570319*^9, 
   3.58409948155748*^9, 3.584100215508624*^9, 3.5841010965701923`*^9, 
   3.584103111967369*^9, 3.5841032912465773`*^9, 3.584105579358569*^9, 
   3.584110202613908*^9, 3.5844487011558237`*^9, 3.585314239756546*^9, 
   3.585318879444742*^9, 3.591296902363408*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"imported triangles file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/trial_dat/triangles.dat\"\>\
"}],
  SequenceForm[
  "imported triangles file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/mesh/trial_dat/triangles.dat"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.583853172941897*^9, 3.583853217918037*^9}, 
   3.583857788039719*^9, 3.583882836401577*^9, 3.584056045570319*^9, 
   3.58409948155748*^9, 3.584100215508624*^9, 3.5841010965701923`*^9, 
   3.584103111967369*^9, 3.5841032912465773`*^9, 3.584105579358569*^9, 
   3.584110202613908*^9, 3.5844487011558237`*^9, 3.585314239756546*^9, 
   3.585318879444742*^9, 3.591296902364883*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902366411*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591296902367962*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.5829869513312364`*^9, 3.582986967154243*^9}, {
   3.582987015256298*^9, 3.58298703939741*^9}, 3.582987072908329*^9, {
   3.5829871297179966`*^9, 3.5829871364948807`*^9}, 3.5829993231407022`*^9, {
   3.583002025462527*^9, 3.583002041390345*^9}, 3.5830021125114822`*^9, 
   3.5830124709552555`*^9, {3.5830654285856133`*^9, 3.583065443356498*^9}, 
   3.5830657452641926`*^9, 3.5830717348055243`*^9, {3.58307181533073*^9, 
   3.5830718268901987`*^9}, 3.58307189169646*^9, 3.5830720354847107`*^9, 
   3.5830720783813295`*^9, {3.5830721136318088`*^9, 3.583072137796881*^9}, 
   3.5830725403450413`*^9, 3.5831492506682453`*^9, 3.583235973108751*^9, 
   3.5832787219810724`*^9, 3.5835937477496576`*^9, 3.5835937852271996`*^9, 
   3.5835938695839205`*^9, 3.583593902280077*^9, 3.583705760118123*^9, 
   3.583851864211742*^9, {3.583851950364719*^9, 3.583851964820258*^9}, 
   3.583852099856571*^9, 3.583852520478595*^9, 3.583852815378421*^9, {
   3.583853172962503*^9, 3.583853217920825*^9}, 3.5838577880419807`*^9, 
   3.58388283640381*^9, 3.584056045609722*^9, 3.584099481593234*^9, 
   3.584100215542823*^9, 3.5841010965727882`*^9, 3.584103111970056*^9, 
   3.584103291248657*^9, 3.584105579361286*^9, 3.584110202652595*^9, 
   3.584448701196002*^9, 3.5853142397908*^9, 3.58531887948033*^9, 
   3.591296902369033*^9},
 FontSize->12],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Norm", "[", "$Failed", "]"}], "+", 
    RowBox[{"Norm", "[", 
     RowBox[{"-", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Read", "[", 
           RowBox[{"$Failed", ",", "Number"}], "]"}], ",", "2"}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Norm", "[", "$Failed", "]"}], "+", 
    RowBox[{"Norm", "[", 
     RowBox[{"-", 
      RowBox[{"Floor", "[", 
       RowBox[{"ConstantArray", "[", "]"}], "]"}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.5829869513312364`*^9, 3.582986967154243*^9}, {
   3.582987015256298*^9, 3.58298703939741*^9}, 3.582987072908329*^9, {
   3.5829871297179966`*^9, 3.5829871364948807`*^9}, 3.5829993231407022`*^9, {
   3.583002025462527*^9, 3.583002041390345*^9}, 3.5830021125114822`*^9, 
   3.5830124709552555`*^9, {3.5830654285856133`*^9, 3.583065443356498*^9}, 
   3.5830657452641926`*^9, 3.5830717348055243`*^9, {3.58307181533073*^9, 
   3.5830718268901987`*^9}, 3.58307189169646*^9, 3.5830720354847107`*^9, 
   3.5830720783813295`*^9, {3.5830721136318088`*^9, 3.583072137796881*^9}, 
   3.5830725403450413`*^9, 3.5831492506682453`*^9, 3.583235973108751*^9, 
   3.5832787219810724`*^9, 3.5835937477496576`*^9, 3.5835937852271996`*^9, 
   3.5835938695839205`*^9, 3.583593902280077*^9, 3.583705760118123*^9, 
   3.583851864211742*^9, {3.583851950364719*^9, 3.583851964820258*^9}, 
   3.583852099856571*^9, 3.583852520478595*^9, 3.583852815378421*^9, {
   3.583853172962503*^9, 3.583853217920825*^9}, 3.5838577880419807`*^9, 
   3.58388283640381*^9, 3.584056045609722*^9, 3.584099481593234*^9, 
   3.584100215542823*^9, 3.5841010965727882`*^9, 3.584103111970056*^9, 
   3.584103291248657*^9, 3.584105579361286*^9, 3.584110202652595*^9, 
   3.584448701196002*^9, 3.5853142397908*^9, 3.58531887948033*^9, 
   3.5912969023706007`*^9},
 FontSize->12]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Direct Integral Solver - Sequential, Interpretive and Partially Compiled\
\>", "Section",
 CellChangeTimes->{{3.583852575665904*^9, 3.5838525814833603`*^9}, {
  3.5840045943389063`*^9, 3.584004621708962*^9}, {3.5841031813451014`*^9, 
  3.584103182829678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Developer`\>\"", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "filename", ",", "mus", ",", "mua", ",", "mut", ",", "g", ",", "Phasef", 
    ",", "Phasef1", ",", "Phasef2", ",", "PhaseFunc", ",", "PhaseFunc1", ",", 
    "phis", ",", "Nd"}], "]"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"filename", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<../msh\>\"", ",", 
        "\"\<t4.msh\>\""}], "}"}], "]"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"filename", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<../msh\>\"", ",", 
      "\"\<square162.msh\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpMSHFileTo2DATFiles", "[", "filename", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mus", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"0.5", 
   RowBox[{"Log", "[", "2.0", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"mua", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"Log", "[", "2.0", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mut", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"mua", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}], "+", 
   RowBox[{"mus", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"g", "=", "0.6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Phasef1", "[", "m_", "]"}], ":=", 
  RowBox[{"g", "^", 
   RowBox[{"Abs", "[", "m", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Phasef2", "[", "m_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"m", "\[Equal]", "0"}], ",", "1.0", ",", "0.0"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Phasef", "=", "Phasef1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PhaseFunc1", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"phi", ",", "_Real"}], "}"}], "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.0", "-", 
        SuperscriptBox["g", "2"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["g", "2"], "-", 
          RowBox[{"2", "g", " ", 
           RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"CompilationTarget", "\[RuleDelayed]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PhaseFunc", "=", "PhaseFunc1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phis", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nd", "=", "10"}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"iG", ",", "iL", ",", "Rank", ",", "ToCmplxPckdArry"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"iG", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n_", ",", "m_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ns_", ",", "Nd_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "Nd"}], "+", "1"}], ")"}]}], "+", "m", "+", "Nd", "+", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iL", "[", 
   RowBox[{"ng_", ",", 
    RowBox[{"{", 
     RowBox[{"Ns_", ",", "Nd_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"IntegerPart", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ng", "-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Nd"}], "+", "1"}], ")"}]}], "+", "1"}], "]"}], ",", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"ng", "-", "Nd", "-", "1"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "Nd"}], "+", "1"}], ")"}], ",", 
      RowBox[{"-", "Nd"}]}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"Rank", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "/@", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"x", "\[Transpose]"}]}], "}"}]}], "//", "Quiet"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToCmplxPckdArry", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ToPackedArray", "[", 
       RowBox[{"N", "[", 
        RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"ToPackedArray", "[", 
        RowBox[{"N", "[", 
         RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}]}]}], "&"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "TriPtPreCalc", ",", "CntrPreCalc", ",", "r2rXYPreCalc", ",", "r2rRPreCalc",
    ",", "r2rPhiPreCalc", ",", "r2rFPreCalc", ",", "AreaPreCalc"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"TriPtPreCalc", "[", 
   RowBox[{"p_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "t"}], "//", "ToPackedArray"}]}], "\n", 
 RowBox[{
  RowBox[{"CntrPreCalc", "[", "pt_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Total", "/@", "pt"}], ")"}], "/", "3.0"}], "//", 
   "ToPackedArray"}]}], "\n", 
 RowBox[{
  RowBox[{"r2rXYPreCalc", "[", "cntr_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#1", "<", "#2"}], ",", 
         RowBox[{"Subtract", "@@", 
          RowBox[{"cntr", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0.0", ",", "0.0"}], "}"}]}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "cntr", "]"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "cntr", "]"}], "]"}]}], "]"}], "//", 
    "ToPackedArray"}], "//", 
   RowBox[{
    RowBox[{"#", "-", 
     RowBox[{"#", "\[Transpose]"}]}], "&"}]}]}], "\n", 
 RowBox[{
  RowBox[{"r2rRPreCalc", "[", "cntr_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#1", "<", "#2"}], ",", 
         RowBox[{"Norm", "[", 
          RowBox[{"Subtract", "@@", 
           RowBox[{"cntr", "\[LeftDoubleBracket]", 
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "\[RightDoubleBracket]"}]}], 
          "]"}], ",", "0.0"}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "cntr", "]"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "cntr", "]"}], "]"}]}], "]"}], "//", 
    "ToPackedArray"}], "//", 
   RowBox[{
    RowBox[{"#", "+", 
     RowBox[{"#", "\[Transpose]"}]}], "&"}]}]}], "\n", 
 RowBox[{
  RowBox[{"r2rPhiPreCalc", "[", "cntr_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#1", "\[NotEqual]", "#2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Subtract", "@@", 
           RowBox[{"cntr", "\[LeftDoubleBracket]", 
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "\[RightDoubleBracket]"}]}], "//", 
          RowBox[{
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "]"}], "&"}]}], ")"}], ",", "0.0"}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "cntr", "]"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "cntr", "]"}], "]"}]}], "]"}], "//", 
   "ToPackedArray"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r2rFPreCalc", "[", 
    RowBox[{"r2rPhi_", ",", "phis_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PhaseFunc", "[", 
       RowBox[{"#", "-", "phis"}], "]"}], "&"}], ",", "r2rPhi", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AreaPreCalc", "[", "pt_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"pt", "//", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                ",", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}]}], "}"}], "&"}], ",", "#"}], 
           "]"}], "&"}]}], "//", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "-", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "&"}], 
           ",", "#"}], "]"}], "&"}]}], "//", "ToPackedArray"}], "//", "Abs"}],
      "//", 
     RowBox[{
      RowBox[{"Divide", "[", 
       RowBox[{"#", ",", "2.0"}], "]"}], "&"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "Np", ",", "p", ",", "t", ",", "Nn", ",", "Nm", ",", "Ns", ",", "Ng", ",", 
   "gTbl", ",", "iGTbl", ",", "iLTbl", ",", "pt", ",", "cntr", ",", "r2rXY", 
   ",", "r2rR", ",", "r2rPhi", ",", "r2rF", ",", "area", ",", "Tpt", ",", 
   "Tcntr", ",", "Tr2rXY", ",", "Tr2rR", ",", "Tr2rPhi", ",", "Tr2rF", ",", 
   "Tarea", ",", "musTbl", ",", "muaTbl", ",", "mutTbl"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", "t"}], "}"}], "=", 
    RowBox[{"ReadMSHFileFrom2DATFiles", "[", "filename", "]"}]}], ";"}], "\n",
   "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"symmetrize", " ", "the", " ", "geometry", " ", 
      RowBox[{"w", ".", "r", ".", "p", ".", "t", ".", " ", "y"}]}], "=", 
     "0"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Np", "=", 
     RowBox[{"Length", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"t", "=", 
     RowBox[{"t", "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "+", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"Np", ",", "3"}], "]"}]}], "&"}], ",", "t"}], "]"}]}], 
        "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"p", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"p", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{"-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
          "}"}], "&"}], "/@", "p"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Np", "=", 
     RowBox[{"Length", "[", "p", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"end", " ", "of", " ", "symmetrization"}], "*)"}], "\n", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"symmetrize", " ", "the", " ", "geometry", " ", 
      RowBox[{"w", ".", "r", ".", "p", ".", "t", ".", " ", "x"}]}], "=", 
     "0"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Np", "=", 
     RowBox[{"Length", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"t", "=", 
     RowBox[{"t", "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "+", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"Np", ",", "3"}], "]"}]}], "&"}], ",", "t"}], "]"}]}], 
        "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"p", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"p", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}], "/@", "p"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Np", "=", 
     RowBox[{"Length", "[", "p", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"end", " ", "of", " ", "symmetrization"}], "*)"}], "\n", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Np", "=", 
   RowBox[{"Length", "[", "p", "]"}]}], ";", 
  RowBox[{"Ns", "=", 
   RowBox[{"Length", "[", "t", "]"}]}], ";", 
  RowBox[{"Nn", "=", "Ns"}], ";", 
  RowBox[{"Nm", "=", 
   RowBox[{
    RowBox[{"2", "Nd"}], "+", "1"}]}], ";", 
  RowBox[{"Ng", "=", 
   RowBox[{"Nn", "*", "Nm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{p,t}=\>\"", ",", 
    RowBox[{"PackedArrayQ", "/@", 
     RowBox[{"{", 
      RowBox[{"p", ",", "t"}], "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{Ns,Nd,Nn,Nm,Ng}=\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"Ns", ",", "Nd", ",", "Nn", ",", "Nm", ",", "Ng"}], "}"}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gTbl", "=", 
   RowBox[{
    RowBox[{"Phasef", "/@", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "Nd"}], ",", "Nd"}], "]"}]}], "//", "ToPackedArray"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"iGTbl", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"iG", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ns", ",", "Nd"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "Ns"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "Nd"}], ",", "Nd"}], "}"}]}], "]"}], "//", 
    "ToPackedArray"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iLTbl", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"iL", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"Ns", ",", "Nd"}], "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "Ng", "]"}]}], "//", "ToPackedArray"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{gTbl,iGTbl,iLTbl}=\>\"", ",", 
    RowBox[{"PackedArrayQ", "/@", 
     RowBox[{"{", 
      RowBox[{"gTbl", ",", "iGTbl", ",", "iLTbl"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tpt", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pt", "=", 
        RowBox[{"TriPtPreCalc", "[", 
         RowBox[{"p", ",", "t"}], "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tcntr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"cntr", "=", 
        RowBox[{"CntrPreCalc", "[", "pt", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr2rXY", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r2rXY", "=", 
        RowBox[{"r2rXYPreCalc", "[", "cntr", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr2rR", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r2rR", "=", 
        RowBox[{"r2rRPreCalc", "[", "cntr", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr2rPhi", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r2rPhi", "=", 
        RowBox[{"r2rPhiPreCalc", "[", "cntr", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tr2rF", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r2rF", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PhaseFunc", "[", 
            RowBox[{"#", "-", "phis"}], "]"}], "&"}], ",", "r2rPhi", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tarea", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"area", "=", 
        RowBox[{"AreaPreCalc", "[", "pt", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{Tpt,Tcntr,Tr2rXY,Tr2rR,Tr2rPhi,Tr2rF,Tarea}=\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Tpt", ",", "Tcntr", ",", "Tr2rXY", ",", "Tr2rR", ",", "Tr2rPhi", ",", 
       "Tr2rF", ",", "Tarea"}], "}"}], "//", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "}"}], "&"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{pt,cntr,r2rXY,r2rR,r2rPhi,r2rF,area}=\>\"", ",", 
    RowBox[{"PackedArrayQ", "/@", 
     RowBox[{"{", 
      RowBox[{
      "pt", ",", "cntr", ",", "r2rXY", ",", "r2rR", ",", "r2rPhi", ",", 
       "r2rF", ",", "area"}], "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"musTbl", "=", 
   RowBox[{
    RowBox[{"mus", "/@", "cntr"}], "//", "ToPackedArray"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muaTbl", "=", 
   RowBox[{
    RowBox[{"mua", "/@", "cntr"}], "//", "ToPackedArray"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutTbl", "=", 
   RowBox[{"musTbl", "+", "muaTbl"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<{musTbl,muaTbl,mutTbl}=\>\"", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"musTbl", ",", "muaTbl", ",", "mutTbl"}], "}"}], "//", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PackedArrayQ", "[", "#", "]"}], ",", 
            RowBox[{"Rank", "[", "#", "]"}]}], "}"}], "&"}], ",", "#"}], 
        "]"}], "&"}]}]}], "]"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "V", ",", "VRe", ",", "VIm", ",", "VElemtRe", ",", "VElemtIm", ",", "TVRe", 
   ",", "TVIm"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"VElemtRe", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"area", "\[LeftDoubleBracket]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[RightDoubleBracket]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "phis"}], "]"}]}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VElemtIm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"area", "\[LeftDoubleBracket]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[RightDoubleBracket]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "phis"}], "]"}]}], "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"VElemt", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"area", "\[LeftDoubleBracket]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[RightDoubleBracket]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "phis"}], "]"}]}], "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TVRe", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VRe", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1.0", "*", 
            RowBox[{"VElemtRe", "[", 
             RowBox[{
             "iLTbl", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
             "]"}]}], "&"}], "/@", 
          RowBox[{"Range", "[", "Ng", "]"}]}], "//", "ToPackedArray"}]}], 
       ";"}], ")"}], "//", "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TVIm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VIm", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1.0", "*", 
            RowBox[{"VElemtIm", "[", 
             RowBox[{
             "iLTbl", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
             "]"}]}], "&"}], "/@", 
          RowBox[{"Range", "[", "Ng", "]"}]}], "//", "ToPackedArray"}]}], 
       ";"}], ")"}], "//", "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{
    RowBox[{"1.0", "*", "VRe"}], "-", 
    RowBox[{"1.0", "\[ImaginaryI]", "*", "VIm"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{TVRe,TVIm}=\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"TVRe", ",", "TVIm"}], "}"}], "//", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "}"}], "&"}]}]}], "]"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{V,VRe,VIm}=\>\"", ",", 
    RowBox[{"PackedArrayQ", "/@", 
     RowBox[{"{", 
      RowBox[{"V", ",", "VRe", ",", "VIm"}], "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Norm[V]=\>\"", ",", 
     RowBox[{"Norm", "[", "V", "]"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "Zon1", ",", "Zon2", ",", "Zoff", ",", "vTblC", ",", "uTblC", ",", "TZon1", 
   ",", "TZon2", ",", "TZoff", ",", "TvTblC", ",", "TuTblC"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TZon1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Zon1", "=", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "area"}], "+", 
         RowBox[{"2", 
          SuperscriptBox["\[Pi]", 
           RowBox[{"1", "/", "2"}]], "mutTbl", " ", 
          SuperscriptBox["area", 
           RowBox[{"3", "/", "2"}]]}]}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TZon2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Zon2", "=", 
        RowBox[{
         RowBox[{"-", "2"}], 
         SuperscriptBox["\[Pi]", 
          RowBox[{"1", "/", "2"}]], "musTbl", " ", 
         SuperscriptBox["area", 
          RowBox[{"3", "/", "2"}]]}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TZoff", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Zoff", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#2", ">", "#1"}], ",", 
                RowBox[{
                 RowBox[{
                 "area", "\[LeftDoubleBracket]", "#1", 
                  "\[RightDoubleBracket]"}], 
                 RowBox[{
                  RowBox[{
                  "area", "\[LeftDoubleBracket]", "#2", 
                   "\[RightDoubleBracket]"}], "/", 
                  RowBox[{"r2rR", "\[LeftDoubleBracket]", 
                   RowBox[{"#1", ",", "#2"}], "\[RightDoubleBracket]"}]}]}], 
                ",", "0.0"}], "]"}], "&"}], ",", 
             RowBox[{"Range", "[", "Ns", "]"}], ",", 
             RowBox[{"Range", "[", "Ns", "]"}]}], "]"}], "//", 
           "ToPackedArray"}], "//", 
          RowBox[{
           RowBox[{"#", "+", 
            RowBox[{"#", "\[Transpose]"}]}], "&"}]}]}], ";"}], ")"}], "//", 
      "AbsoluteTiming"}], "//", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "&"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"TvTblC", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"vTblC", "=", 
        RowBox[{
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r2rPhi", ",", "_Real", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Ns", ",", "_Integer"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Nd", ",", "_Integer"}], "}"}]}], "}"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"r2rPhi", "\[LeftDoubleBracket]", 
                RowBox[{"n", ",", "np"}], "\[RightDoubleBracket]"}], 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "Nd"}], ",", "Nd"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "Ns"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"np", ",", "Ns"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Parallelization", "\[Rule]", "True"}], "\n", ",", 
           RowBox[{"CompilationTarget", "\[RuleDelayed]", "\"\<C\>\""}]}], 
          "\[IndentingNewLine]", "]"}], "[", 
         RowBox[{"r2rPhi", ",", "Ns", ",", "Nd"}], "]"}]}], ";"}], ")"}], "//",
      "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TuTblC", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"uTblC", "=", 
         RowBox[{
          RowBox[{"Compile", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"musTbl", ",", "_Real", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"mutTbl", ",", "_Real", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"gTbl", ",", "_Real", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"vTblC", ",", "_Complex", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r2rPhi", ",", "_Real", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Ns", ",", "_Integer"}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "mutTbl", "\[LeftDoubleBracket]", "np", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{
                 RowBox[{"vTblC", "\[LeftDoubleBracket]", 
                  RowBox[{"n", ",", "np"}], "\[RightDoubleBracket]"}], 
                 "\[Conjugate]"}]}], "-", 
               RowBox[{
                RowBox[{
                "musTbl", "\[LeftDoubleBracket]", "np", 
                 "\[RightDoubleBracket]"}], "gTbl", " ", 
                RowBox[{
                 RowBox[{"vTblC", "\[LeftDoubleBracket]", 
                  RowBox[{"n", ",", "np"}], "\[RightDoubleBracket]"}], 
                 "\[Conjugate]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "Ns"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"np", ",", "Ns"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Parallelization", "\[Rule]", "True"}], "\n", ",", 
            RowBox[{"CompilationTarget", "\[RuleDelayed]", "\"\<C\>\""}]}], 
           "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{
          "musTbl", ",", "mutTbl", ",", "gTbl", ",", "vTblC", ",", "r2rPhi", 
           ",", "Ns"}], "]"}]}], ";"}], "\[IndentingNewLine]", ")"}], "//", 
      "AbsoluteTiming"}], "//", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "&"}]}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<{TZon1,TZon2,TZoff,TvTblC,TuTblC}=\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "TZon1", ",", "TZon2", ",", "TZoff", ",", "TvTblC", ",", "TuTblC"}], 
      "}"}], "//", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "}"}], "&"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<{Zon1,Zon2,Zoff,vTblC,uTblC}=\>\"", ",", 
     RowBox[{"PackedArrayQ", "/@", 
      RowBox[{"{", 
       RowBox[{"Zon1", ",", "Zon2", ",", "Zoff", ",", "vTblC", ",", "uTblC"}],
        "}"}]}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"ZDotXC0", ",", "ZDotXC", ",", "ZDotXCcounter"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ZDotXCcounter", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ZDotXC0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X", ",", "_Complex", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Ns", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Nd", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"gTbl", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Zon1", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Zon2", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Zoff", ",", "_Real", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"vTblC", ",", "_Complex", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"uTblC", ",", "_Complex", ",", "3"}], "}"}]}], "}"}], ",", 
       "\n", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Xp", ",", "Yp", ",", "temp", ",", "n", ",", "np"}], "}"}], 
         ",", "\n", "    ", 
         RowBox[{
          RowBox[{"Xp", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{"X", ",", 
             RowBox[{
              RowBox[{"2", "Nd"}], "+", "1"}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\n", "      ", 
            RowBox[{
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"0.0", "+", 
                  RowBox[{"0.0", "I"}]}], ",", 
                 RowBox[{
                  RowBox[{"2", "Nd"}], "+", "1"}]}], "]"}]}], ";", "\n", 
              "      ", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"np", "=", "1"}], ",", 
                RowBox[{"np", "<=", "Ns"}], ",", 
                RowBox[{"np", "++"}], ",", "\n", "        ", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"np", "==", "n"}], ",", "\n", "          ", 
                   RowBox[{
                    RowBox[{"temp", "+=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Zon1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], 
                    RowBox[{"Xp", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Zon2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "gTbl", " ", 
                    RowBox[{"Xp", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}], ";"}], ",", "\n", 
                   "          ", 
                   RowBox[{
                    RowBox[{"temp", "+=", 
                    RowBox[{
                    RowBox[{"Zoff", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "np"}], "]"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Xp", "[", 
                    RowBox[{"[", "np", "]"}], "]"}], ".", 
                    RowBox[{"uTblC", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "np"}], "]"}], "]"}]}], ")"}], 
                    RowBox[{"vTblC", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "np"}], "]"}], "]"}]}]}], ";"}]}], "\n",
                   "        ", "]"}], ";"}]}], "  ", "\n", "      ", "]"}], 
              ";", "  ", "\n", "      ", "temp"}], "\n", "      ", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "Ns"}], "}"}]}], "]"}]}]}]}], "\n", "  ", 
        "]"}], ",", "  ", "\n", "  ", 
       RowBox[{"Parallelization", "->", "True"}], "\n", "  ", ",", 
       RowBox[{"CompilationTarget", ":>", "\"\<C\>\""}]}], "\n", "]"}], "[", 
     RowBox[{
     "#", ",", "Ns", ",", "Nd", ",", "gTbl", ",", "Zon1", ",", "Zon2", ",", 
      "Zoff", ",", "vTblC", ",", "uTblC"}], "]"}], "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ZDotXC", "[", "V_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"ZDotXCcounter", "++"}], ";", 
     RowBox[{"ZDotXC0", "[", "V", "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ZDotXC[V] time=\>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ZDotXC", "[", "V", "]"}], "//", "AbsoluteTiming"}], "//", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}]}]}], "]"}], ";"}], "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"InTriangle", ",", "PickTriangle"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InTriangle", "[", 
   RowBox[{"v_", ",", "ptn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"det", ",", "v0", ",", "v1", ",", "v2", ",", "a", ",", "b"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"det", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         RowBox[{
         "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        
        RowBox[{
         RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         RowBox[{
         "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
       "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v0", "=", 
      RowBox[{"ptn", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"v1", "=", 
      RowBox[{
       RowBox[{"ptn", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "-", "v0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v2", "=", 
      RowBox[{
       RowBox[{"ptn", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
       "-", "v0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"det", "[", 
          RowBox[{"v", ",", "v2"}], "]"}], "-", 
         RowBox[{"det", "[", 
          RowBox[{"v0", ",", "v2"}], "]"}]}], ")"}], "/", 
       RowBox[{"det", "[", 
        RowBox[{"v1", ",", "v2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"det", "[", 
           RowBox[{"v", ",", "v1"}], "]"}], "-", 
          RowBox[{"det", "[", 
           RowBox[{"v0", ",", "v1"}], "]"}]}], ")"}]}], "/", 
       RowBox[{"det", "[", 
        RowBox[{"v1", ",", "v2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", ">", "0.0"}], "&&", 
      RowBox[{"b", ">", "0.0"}], "&&", 
      RowBox[{
       RowBox[{"a", "+", "b"}], "<", "1.0"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"PickTriangle", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "1"}], ",", 
       RowBox[{"n", "\[LessEqual]", "Ns"}], ",", 
       RowBox[{"n", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"InTriangle", "[", 
          RowBox[{"v", ",", 
           RowBox[{
           "pt", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", "n"}]}], 
   "]"}]}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"HalfLineTriangleSegmentC", ",", "P0", ",", "PT", ",", "alpha"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"HalfLineTriangleSegmentC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alpha", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"pt", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "d", ",", "ds", ",", "pts", ",", "k", ",", "t"}], 
        "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "alpha", "]"}], ",", 
           RowBox[{"Sin", "[", "alpha", "]"}]}], "}"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Det", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "-", "p"}], ",", "n"}], "}"}], "]"}], "&"}], "/@", 
          "pt"}]}], ";", 
        RowBox[{"ds", "=", 
         RowBox[{"Sort", "[", "d", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "ds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             RowBox[{
             "ds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
            "\[LessEqual]", "0.0"}], "&&", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                "ds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}], "<", 
               RowBox[{"1.0", "*", 
                SuperscriptBox["10", 
                 RowBox[{"-", "15"}]]}]}], "&&", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                "ds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                "]"}], "<", 
               RowBox[{"1.0", "*", 
                SuperscriptBox["10", 
                 RowBox[{"-", "15"}]]}]}]}], ")"}]}]}], ",", 
          RowBox[{"0.0", ";"}], ",", 
          RowBox[{
           RowBox[{"Return", "[", "0.0", "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{"k", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"k", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"d", ",", 
            RowBox[{
            "ds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{
         RowBox[{"k", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"d", ",", 
            RowBox[{
            "ds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"k", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"Range", "[", "3", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "k", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "k", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "}"}]}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"pts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"pt", "\[LeftDoubleBracket]", 
            RowBox[{
            "k", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "&"}], "/@", 
          RowBox[{"Range", "[", "3", "]"}]}]}], ";", "\n", 
        RowBox[{"t", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "ds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "*", 
             RowBox[{
             "ds", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "\[GreaterEqual]", "0"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Det", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{"p", "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "/", 
              RowBox[{"Det", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", "n"}], "}"}], "]"}]}], 
             ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Det", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{"p", "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "/", 
              RowBox[{"Det", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], ",", "n"}], "}"}], "]"}]}]}], 
            "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Det", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{"p", "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "/", 
              RowBox[{"Det", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", "n"}], "}"}], "]"}]}], 
             ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Det", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{"p", "-", 
                   RowBox[{
                   "pts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "/", 
              RowBox[{"Det", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "pts", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", "n"}], "}"}], "]"}]}]}], 
            "}"}]}], "\n", "]"}]}], ";", "\n", 
        RowBox[{"t", "=", 
         RowBox[{"Sort", "[", "t", "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
           "t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           "0.0"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"t", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
           "t", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           "0.0"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"t", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "-", 
         RowBox[{
         "t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
      "\n", "]"}], "\n", ",", 
     RowBox[{"CompilationTarget", "\[RuleDelayed]", "\"\<C\>\""}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox["3"]}], "/", "2"}]}], "}"}], "//", "N"}]}], ";", 
  RowBox[{"PT", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{
         SqrtBox["3"], "/", "2"}]}], "}"}]}], "}"}], "//", "N"}]}], ";", 
  RowBox[{"alpha", "=", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "3"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"HalfLineTriangleSegmentC", "[", 
      RowBox[{"alpha", ",", "P0", ",", "PT"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"alpha", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"damp", ",", "Tdamp1", ",", "damp1"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Tdamp1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"damp1", "=", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
           "mutTbl", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          RowBox[{"cntr", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
       ";"}], ")"}], "//", "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Tdamp1=\>\"", ",", "Tdamp1"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<damp1=\>\"", ",", 
     RowBox[{"damp1", "//", "PackedArrayQ"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"OpticalPathC", ",", "damp2C", ",", "Tdamp2C"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OpticalPathC", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"P0", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"phi", ",", "_Real"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"mutTbl", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"pt", ",", "_Real", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Ns", ",", "_Integer"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"np", ",", 
            RowBox[{"tau", "=", "0.0"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"np", "=", "1"}], ",", 
             RowBox[{"np", "\[LessEqual]", "Ns"}], ",", 
             RowBox[{"np", "++"}], ",", 
             RowBox[{
              RowBox[{"tau", "+=", 
               RowBox[{
                RowBox[{
                "mutTbl", "\[LeftDoubleBracket]", "np", 
                 "\[RightDoubleBracket]"}], "*", 
                RowBox[{"HalfLineTriangleSegmentC", "[", 
                 RowBox[{"phi", ",", "P0", ",", 
                  RowBox[{
                  "pt", "\[LeftDoubleBracket]", "np", 
                   "\[RightDoubleBracket]"}]}], "]"}]}]}], ";"}]}], "]"}], 
           ";", "tau"}]}], "]"}]}], "\n", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"CompilationTarget", "\[RuleDelayed]", "\"\<C\>\""}]}], 
        "*)"}], "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "mutTbl", ",", "pt", ",", "Ns"}], "]"}], 
     "&"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Tdamp2C", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"damp2C", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"OpticalPathC", "[", 
              RowBox[{
               RowBox[{
               "cntr", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
                ",", 
               RowBox[{"phis", "+", "\[Pi]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "Ns"}], "}"}]}], "]"}], "]"}], "//", 
         "ToPackedArray"}]}], ";"}], ")"}], "//", "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Tdamp2C=\>\"", ",", "Tdamp2C"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<damp2C=\>\"", ",", 
    RowBox[{"damp2C", "//", "PackedArrayQ"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Norm[damp2C-damp1]=\>\"", ",", 
    RowBox[{"Norm", "[", 
     RowBox[{"damp2C", "-", "damp1"}], "]"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"damp", "=", "damp2C"}], ";"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"Von", ",", "Voff", ",", "Vsc", ",", "TVsc"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"TVsc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\n", 
      RowBox[{
       RowBox[{"Von", "=", 
        RowBox[{"musTbl", " ", 
         SqrtBox[
          RowBox[{"area", "/", "\[Pi]"}]], "damp"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Voff", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Zoff", " ", "r2rF"}], ")"}], "\[Transpose]"}], 
           RowBox[{"(", 
            RowBox[{"damp", " ", "musTbl"}], ")"}]}], ")"}], 
         "\[Transpose]"}]}], ";", "\n", 
       RowBox[{"Vsc", "=", 
        RowBox[{"Von", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"V", ",", "Nm"}], "]"}], "\[Transpose]"}], "g"}], ")"}],
           "\[Transpose]"}]}]}], ";", "\n", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ",", 
         RowBox[{"n", "\[LessEqual]", "Ns"}], ",", 
         RowBox[{"n", "++"}], ",", "\n", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"np", "=", "1"}], ",", 
            RowBox[{"np", "\[LessEqual]", "Ns"}], ",", 
            RowBox[{"np", "++"}], ",", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Vsc", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "+=", 
              RowBox[{
               RowBox[{"Voff", "\[LeftDoubleBracket]", 
                RowBox[{"n", ",", "np"}], "\[RightDoubleBracket]"}], 
               RowBox[{"vTblC", "\[LeftDoubleBracket]", 
                RowBox[{"n", ",", "np"}], "\[RightDoubleBracket]"}]}]}], 
             ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"Vsc", "=", 
        RowBox[{"Flatten", "[", "Vsc", "]"}]}], ";"}], ")"}], "//", 
     "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Vsc=\>\"", ",", 
    RowBox[{"PackedArrayQ", "[", "Vsc", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<TVsc=\>\"", ",", "TVsc"}], "]"}], ";"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"sol2sc", ",", "Tsol2sc", ",", "sol2scp"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tsol2sc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sol2sc", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ZDotXC", "[", "#", "]"}], "&"}], ",", "Vsc", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Krylov\>\"", ",", 
             RowBox[{"Tolerance", "\[Rule]", 
              RowBox[{
               RowBox[{"Norm", "[", "Vsc", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "7"}]]}]}]}], "}"}]}]}], "]"}]}], ";"}], ")"}], "//",
      "AbsoluteTiming"}], "//", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Tsol2sc=\>\"", ",", "Tsol2sc"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Norm[ZDotXC0[sol2sc]-Vsc]/Norm[Vsc]=\>\"", ",", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"ZDotXC0", "[", "sol2sc", "]"}], "-", "Vsc"}], "]"}], "/", 
     RowBox[{"Norm", "[", "Vsc", "]"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Max[Norm/@(ZDotXC[sol2sc]-V)]/Norm[V]]=\>\"", ",", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Norm", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ZDotXC", "[", "sol2sc", "]"}], "-", "Vsc"}], ")"}]}], "]"}],
      "/", 
     RowBox[{"Norm", "[", "Vsc", "]"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sol2scp", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"sol2sc", ",", "Nm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<sym sol2sc=\>\"", ",", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
         "sol2scp", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
         "-", 
         RowBox[{
          RowBox[{"sol2scp", "\[LeftDoubleBracket]", 
           RowBox[{"n", "+", 
            RowBox[{"Ns", "/", "2"}]}], "\[RightDoubleBracket]"}], 
          "\[Conjugate]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{
          RowBox[{"Ns", "/", "2"}], "-", "1"}], ",", "1"}], "}"}]}], "]"}], "//",
      "Norm"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Nd residual=\>\"", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"sol2scp", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Norm", ",", "#"}], "]"}], "&"}]}], "//", "Norm"}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"sol2scp", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"Nd", "+", "1"}]}], "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Norm", ",", "#"}], "]"}], "&"}]}], "//", "Norm"}], 
      ")"}]}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.5832314072112837`*^9, 3.583231410988764*^9}, {
   3.58323154973929*^9, 3.5832315711990194`*^9}, 3.5832340812738132`*^9, {
   3.5832341244523025`*^9, 3.583234126420551*^9}, {3.5832347795149984`*^9, 
   3.5832347857037506`*^9}, {3.583235678369472*^9, 3.583235713551936*^9}, {
   3.583236886323658*^9, 3.583236907364332*^9}, {3.5832369407465734`*^9, 
   3.5832369662514257`*^9}, {3.583237056301586*^9, 3.583237250480199*^9}, {
   3.583237435802699*^9, 3.583237509742097*^9}, {3.583237547384881*^9, 
   3.5832376102318735`*^9}, {3.583238556769198*^9, 3.5832385796996784`*^9}, {
   3.583249040780386*^9, 3.5832490566664023`*^9}, {3.583249624846754*^9, 
   3.5832496452083435`*^9}, {3.58324975210089*^9, 3.5832497599448895`*^9}, {
   3.583250394059413*^9, 3.583250407973187*^9}, 3.583250913833332*^9, {
   3.583278644416027*^9, 3.5832786489712477`*^9}, {3.5832791246692266`*^9, 
   3.5832791588958397`*^9}, {3.5832792220453434`*^9, 
   3.5832792550552955`*^9}, {3.583279298751335*^9, 3.5832793035561895`*^9}, {
   3.583279337081085*^9, 3.5832793461759825`*^9}, 3.5832794223826647`*^9, 
   3.5832795431904125`*^9, {3.583279637774208*^9, 3.5832796715017567`*^9}, {
   3.5832797937774553`*^9, 3.5832797938865314`*^9}, 3.5833139663004465`*^9, 
   3.583315381451195*^9, {3.583315586657086*^9, 3.583315586719489*^9}, 
   3.583316654057167*^9, 3.5833178540262127`*^9, {3.583520226851201*^9, 
   3.583520253130539*^9}, {3.583520619225793*^9, 3.583520620596919*^9}, {
   3.5835827242941933`*^9, 3.583582724856262*^9}, {3.583594263315054*^9, 
   3.5835943811569653`*^9}, {3.5835950720180473`*^9, 3.583595085993845*^9}, {
   3.583595754693125*^9, 3.583595761682022*^9}, {3.5835958617102165`*^9, 
   3.5835958653606596`*^9}, {3.583596220331219*^9, 3.5835962212984247`*^9}, {
   3.5835965168150053`*^9, 3.583596520993891*^9}, {3.5835974586815157`*^9, 
   3.5835974587285385`*^9}, {3.5835977035927134`*^9, 
   3.5835977085691185`*^9}, {3.5835982529128222`*^9, 3.583598253068824*^9}, {
   3.583598520378256*^9, 3.5835985263376226`*^9}, {3.5835987249901967`*^9, 
   3.583598740949011*^9}, {3.5835987891849327`*^9, 3.583598795783643*^9}, {
   3.583598927168252*^9, 3.583598928759626*^9}, {3.583604248308853*^9, 
   3.5836042485118766`*^9}, {3.5837057707458773`*^9, 3.583705809974505*^9}, {
   3.5837058647931747`*^9, 3.5837058659576406`*^9}, {3.583705923638197*^9, 
   3.583705929523687*^9}, {3.5837081085500927`*^9, 3.583708121196658*^9}, {
   3.583708281517411*^9, 3.583708295382011*^9}, {3.583753502635223*^9, 
   3.583753538147101*^9}, {3.583753978051922*^9, 3.583753979097967*^9}, {
   3.583762326006537*^9, 3.583762334759839*^9}, {3.583852713203553*^9, 
   3.5838527500631113`*^9}, {3.583852849628519*^9, 3.583852877028597*^9}, {
   3.5838529363020353`*^9, 3.5838529364519053`*^9}, 3.5838537543123207`*^9, {
   3.583854551278051*^9, 3.583854553931589*^9}, 3.583854590999557*^9, {
   3.5838560698876047`*^9, 3.5838560747178*^9}, {3.583857268327314*^9, 
   3.583857274746943*^9}, {3.583882314118259*^9, 3.583882317028575*^9}, {
   3.583882765441311*^9, 3.5838827664086227`*^9}, 3.583882806880651*^9, {
   3.58397213193909*^9, 3.5839721392809896`*^9}, {3.583972681764387*^9, 
   3.583972688084626*^9}, 3.5840565212715273`*^9, {3.584056637085861*^9, 
   3.5840566424512997`*^9}, {3.584057493710822*^9, 3.584057510976591*^9}, {
   3.584093802933436*^9, 3.584093804077717*^9}, {3.584093946930346*^9, 
   3.5840939679796467`*^9}, {3.584100245806541*^9, 3.5841002771329203`*^9}, {
   3.5841011795529346`*^9, 3.584101181057598*^9}, {3.584101218916643*^9, 
   3.5841012216047773`*^9}, {3.584101343500826*^9, 3.5841013508197002`*^9}, {
   3.584101601719351*^9, 3.584101605485053*^9}, {3.584102543822041*^9, 
   3.5841025699620657`*^9}, {3.5841026753462677`*^9, 3.584102675545371*^9}, {
   3.584102758834619*^9, 3.584102762046706*^9}, {3.584103309633869*^9, 
   3.58410330979025*^9}, {3.5841049996556253`*^9, 3.584105005664445*^9}, {
   3.5841060330548697`*^9, 3.584106034081315*^9}, {3.5841065289559193`*^9, 
   3.584106533016822*^9}, {3.5841066158749743`*^9, 3.5841066190013638`*^9}, {
   3.58410775112497*^9, 3.584107760749167*^9}, {3.584109351360709*^9, 
   3.584109366851808*^9}, {3.584109397590267*^9, 3.5841094031069098`*^9}, {
   3.584109460735282*^9, 3.584109467550446*^9}, {3.584109714578034*^9, 
   3.584109719721878*^9}, {3.584109898755789*^9, 3.584109904112873*^9}, {
   3.5841099903284073`*^9, 3.584109991248518*^9}, {3.5841113532058477`*^9, 
   3.5841113718542767`*^9}, {3.584116561297707*^9, 3.584116566526635*^9}, {
   3.5841166289900723`*^9, 3.584116635708377*^9}, {3.584116708320763*^9, 
   3.5841167099364433`*^9}, {3.5841167427709837`*^9, 3.584116744972249*^9}, {
   3.584116775712604*^9, 3.5841167766551027`*^9}, {3.584116901259707*^9, 
   3.584116901769099*^9}, {3.584117033750503*^9, 3.58411703672456*^9}, 
   3.584117208791696*^9, {3.5841172474261637`*^9, 3.584117249890498*^9}, {
   3.584117305759334*^9, 3.584117307886177*^9}, {3.584117562382041*^9, 
   3.584117562867426*^9}, {3.584117648035438*^9, 3.584117649936048*^9}, {
   3.584117783862821*^9, 3.584117785235839*^9}, {3.584117969402565*^9, 
   3.584117971823327*^9}, {3.584118352280308*^9, 3.584118353733083*^9}, {
   3.584118697627366*^9, 3.584118698085375*^9}, {3.584118752957251*^9, 
   3.584118753815971*^9}, {3.584119905693214*^9, 3.5841199060525303`*^9}, {
   3.5841239981488333`*^9, 3.584124020907257*^9}, {3.584125393286289*^9, 
   3.584125434259445*^9}, {3.58412551909102*^9, 3.5841255249164257`*^9}, {
   3.584125573891191*^9, 3.584125574293983*^9}, 3.584205558651864*^9, {
   3.584269653037593*^9, 3.584269747443141*^9}, {3.584269924597587*^9, 
   3.584269924696177*^9}, {3.584276038290503*^9, 3.5842760396494427`*^9}, {
   3.584284769115233*^9, 3.5842848443112164`*^9}, 3.58428498396157*^9, 
   3.584285017946795*^9, {3.584286668070664*^9, 3.584286668324972*^9}, {
   3.5842868973577538`*^9, 3.584286897542233*^9}, {3.58428812134195*^9, 
   3.584288147143755*^9}, {3.584288304866745*^9, 3.58428832716191*^9}, {
   3.5844486688857193`*^9, 3.5844487154174137`*^9}, {3.584448838762253*^9, 
   3.584448839516128*^9}, {3.584661846899613*^9, 3.584661847309595*^9}, {
   3.5846620335247993`*^9, 3.584662043512877*^9}, {3.5848060702810583`*^9, 
   3.584806089493761*^9}, {3.584806766340901*^9, 3.584806770890993*^9}, {
   3.584887433006837*^9, 3.58488743336614*^9}, {3.584891800513522*^9, 
   3.584891819389023*^9}, 3.584892208007536*^9, {3.5851341565776463`*^9, 
   3.585134181885275*^9}, {3.585134235538843*^9, 3.585134236060835*^9}, {
   3.5852372311610727`*^9, 3.585237239642768*^9}, {3.5852379008280907`*^9, 
   3.585237904071282*^9}, {3.585251536830648*^9, 3.5852515479205227`*^9}, {
   3.585310893781364*^9, 3.58531089515585*^9}, {3.5853109940890913`*^9, 
   3.5853109945588408`*^9}, {3.5853110271176453`*^9, 3.58531102787365*^9}, {
   3.585311084199689*^9, 3.58531113089914*^9}, {3.5853119818211727`*^9, 
   3.58531206173103*^9}, {3.585312901306547*^9, 3.585312909066924*^9}, {
   3.5853129995689898`*^9, 3.585313087067675*^9}, {3.585313169041212*^9, 
   3.585313187593348*^9}, {3.5853133167124367`*^9, 3.585313346266529*^9}, {
   3.58531362684833*^9, 3.585313639797749*^9}, 3.5853146736587687`*^9, {
   3.585318777799823*^9, 3.585318778597548*^9}, {3.585319029982422*^9, 
   3.585319047002562*^9}, {3.5853473083367853`*^9, 3.585347309176016*^9}, {
   3.585347363551502*^9, 3.58534736575099*^9}, {3.585347452627171*^9, 
   3.585347452762898*^9}, {3.585354380375525*^9, 3.5853543847006598`*^9}, {
   3.58556490875089*^9, 3.585564920072631*^9}, {3.585564964806664*^9, 
   3.585564968961257*^9}, {3.585565027504154*^9, 3.5855650385188217`*^9}, {
   3.5855656642533712`*^9, 3.585565680562438*^9}, {3.585567401864567*^9, 
   3.5855674225584707`*^9}, {3.585585304198057*^9, 3.5855853215909433`*^9}, {
   3.585585585607018*^9, 3.585585606118992*^9}, {3.5855856425898743`*^9, 
   3.585585642832698*^9}, {3.5855858294831753`*^9, 3.5855858297141743`*^9}, {
   3.585586197201103*^9, 3.5855861973160667`*^9}, {3.585586306352434*^9, 
   3.5855863068802557`*^9}, {3.585586351935874*^9, 3.585586352246883*^9}, {
   3.585586861212987*^9, 3.585586865300055*^9}, {3.585586988040905*^9, 
   3.585586991847643*^9}, {3.585587499787125*^9, 3.585587506054982*^9}, {
   3.585587585932705*^9, 3.585587591792345*^9}, 3.5855877046494703`*^9, {
   3.5855922273950243`*^9, 3.585592227650222*^9}, {3.58561082438691*^9, 
   3.585610828616761*^9}, {3.5856111566492987`*^9, 3.585611156948185*^9}, {
   3.5856112094124517`*^9, 3.585611210034096*^9}, {3.5856121424029284`*^9, 
   3.585612142547574*^9}, {3.585612215485703*^9, 3.585612215632259*^9}, {
   3.5856166644883547`*^9, 3.5856166897595987`*^9}, {3.585616721408259*^9, 
   3.5856167356538363`*^9}, {3.585617603919504*^9, 3.585617653302911*^9}, {
   3.5856177237950068`*^9, 3.5856177243655767`*^9}, {3.585617975310217*^9, 
   3.5856180119211903`*^9}, {3.585618494955637*^9, 3.585618528592437*^9}, {
   3.585618593496059*^9, 3.5856185939195957`*^9}, {3.585619245031193*^9, 
   3.58561925810221*^9}, {3.58562057218316*^9, 3.585620580116696*^9}, {
   3.585620873321986*^9, 3.585620874231022*^9}, {3.585621011941361*^9, 
   3.58562101252444*^9}, {3.585621097331201*^9, 3.585621128117597*^9}, {
   3.585621389929229*^9, 3.58562139288577*^9}, {3.5856217095996647`*^9, 
   3.585621712913986*^9}, {3.585622079569388*^9, 3.585622086896751*^9}, {
   3.585653364574955*^9, 3.585653400397188*^9}, 3.585653519131411*^9, {
   3.5856539012861137`*^9, 3.5856539022808533`*^9}, {3.585654621856339*^9, 
   3.585654641774622*^9}, {3.585654838394051*^9, 3.5856548405835857`*^9}, 
   3.58565523667232*^9, {3.585655349458521*^9, 3.585655371714329*^9}, {
   3.585655441523971*^9, 3.585655441783534*^9}, {3.585655530668221*^9, 
   3.58565555882299*^9}, {3.585655612754331*^9, 3.5856556208181763`*^9}, {
   3.585656399063827*^9, 3.585656401982272*^9}, {3.5856566527907133`*^9, 
   3.58565665326237*^9}, {3.585657867150669*^9, 3.585657867275197*^9}, {
   3.585657972596665*^9, 3.585657975363266*^9}, {3.585658044507557*^9, 
   3.5856580449700003`*^9}, {3.58565862887886*^9, 3.585658629495151*^9}, {
   3.5856609746620817`*^9, 3.5856609751724443`*^9}, {3.585661117989048*^9, 
   3.585661124488646*^9}, {3.5856657438394747`*^9, 3.58566575454749*^9}, {
   3.585665810193323*^9, 3.585665814890565*^9}, {3.58566587651718*^9, 
   3.585665883267405*^9}, {3.585666730957909*^9, 3.5856667311578197`*^9}, {
   3.5856669830506573`*^9, 3.585666993882155*^9}, {3.5856670487598953`*^9, 
   3.585667053379611*^9}, {3.585667138966072*^9, 3.585667148334443*^9}, {
   3.5856675268721743`*^9, 3.585667527559721*^9}, {3.585667562940229*^9, 
   3.585667565264351*^9}, {3.5856676175244427`*^9, 3.5856676202335863`*^9}, {
   3.585667810341323*^9, 3.5856678354598427`*^9}, {3.585671113484079*^9, 
   3.585671113843617*^9}, {3.585905457147614*^9, 3.585905499775901*^9}, {
   3.585905614535688*^9, 3.5859056189514723`*^9}, {3.585906080291451*^9, 
   3.5859061298899803`*^9}, 3.585906161818863*^9, {3.585906206814258*^9, 
   3.58590620751788*^9}, {3.585906318481633*^9, 3.585906318771999*^9}, {
   3.5859065235754337`*^9, 3.585906523750793*^9}, 3.58590700013951*^9, {
   3.5859070833087673`*^9, 3.58590708341927*^9}, 3.58590722724096*^9, {
   3.58590735251744*^9, 3.5859073544202833`*^9}, {3.5859089940595217`*^9, 
   3.585908994175251*^9}, {3.585910636465623*^9, 3.585910674787486*^9}, {
   3.5859108564224443`*^9, 3.585910862341241*^9}, {3.5859110650792093`*^9, 
   3.585911066037571*^9}, {3.585912048881832*^9, 3.5859120550170794`*^9}, {
   3.585912273635405*^9, 3.585912274273356*^9}, {3.585912671226837*^9, 
   3.585912671786277*^9}, {3.585913673536766*^9, 3.585913682774732*^9}, {
   3.585914121099399*^9, 3.585914121576208*^9}, {3.5859143955634413`*^9, 
   3.585914419216905*^9}, {3.585914594318667*^9, 3.585914597814332*^9}, {
   3.585914746948645*^9, 3.585914750248067*^9}, {3.5859149632019863`*^9, 
   3.585914963791971*^9}, {3.585915220062561*^9, 3.585915225253337*^9}, {
   3.5859156267645187`*^9, 3.5859156317853107`*^9}, {3.585915828316368*^9, 
   3.585915828419462*^9}, {3.585917289395454*^9, 3.5859172915360537`*^9}, {
   3.585917331618895*^9, 3.5859173519013023`*^9}, {3.5859197394615707`*^9, 
   3.58591973964779*^9}, {3.585919824876342*^9, 3.5859198252222757`*^9}, {
   3.585919964780443*^9, 3.585919965065943*^9}, {3.58592124637151*^9, 
   3.5859212468239927`*^9}, {3.585921677848608*^9, 3.5859217373518353`*^9}, {
   3.585924718698011*^9, 3.5859247363969173`*^9}, {3.5859271988714323`*^9, 
   3.585927215090831*^9}, {3.5859283748207817`*^9, 3.585928389151348*^9}, {
   3.585928581559876*^9, 3.585928581704129*^9}, {3.58592873418642*^9, 
   3.585928737485828*^9}, {3.5859288909351482`*^9, 3.58592889106883*^9}, {
   3.585928926940256*^9, 3.5859289294460707`*^9}, {3.585929073409643*^9, 
   3.585929073937574*^9}, {3.585929132520479*^9, 3.585929132821694*^9}, {
   3.5859292400142603`*^9, 3.5859292423568287`*^9}, {3.585929309300296*^9, 
   3.5859293118130074`*^9}, {3.5859314356647577`*^9, 3.585931446033888*^9}, {
   3.5859321601007767`*^9, 3.585932160528606*^9}, {3.585951204728244*^9, 
   3.585951218160686*^9}, {3.585951253159937*^9, 3.585951275416308*^9}, {
   3.5859521538651237`*^9, 3.585952172003193*^9}, {3.58595404569669*^9, 
   3.585954066036934*^9}, {3.585954559179288*^9, 3.585954559771141*^9}, {
   3.5859553065618877`*^9, 3.585955306682909*^9}, {3.5859556113886623`*^9, 
   3.5859556115070887`*^9}, {3.585955969378227*^9, 3.585955972558989*^9}, {
   3.585992004832542*^9, 3.585992004949377*^9}, {3.5859924033842897`*^9, 
   3.58599240549389*^9}, {3.586000039139439*^9, 3.5860000930126743`*^9}, {
   3.586000129207157*^9, 3.586000134700856*^9}, {3.586000284530305*^9, 
   3.586000306458371*^9}, {3.586002335613599*^9, 3.5860023522207003`*^9}, {
   3.58600352205492*^9, 3.5860035362829533`*^9}, {3.586003965494925*^9, 
   3.586003968822584*^9}, {3.586004236026589*^9, 3.586004245111536*^9}, {
   3.5860043497971077`*^9, 3.586004353399646*^9}, {3.586004674184585*^9, 
   3.586004675602087*^9}, {3.586004874082465*^9, 3.586004875375914*^9}, {
   3.586008757635071*^9, 3.586008785198996*^9}, {3.586008860888886*^9, 
   3.58600886100915*^9}, {3.586009087078415*^9, 3.586009091627569*^9}, {
   3.586009173738904*^9, 3.58600917839533*^9}, {3.586009407238391*^9, 
   3.586009421621805*^9}, {3.586009472387608*^9, 3.586009472785973*^9}, {
   3.5860097336776257`*^9, 3.586009746140414*^9}, {3.586010306775868*^9, 
   3.5860103085421047`*^9}, {3.586010443058907*^9, 3.586010450677567*^9}, {
   3.586010591484399*^9, 3.58601059222602*^9}, {3.586017207389621*^9, 
   3.58601722548477*^9}, {3.586030847312771*^9, 3.586030851868537*^9}, {
   3.5860446815979013`*^9, 3.586044692845083*^9}, {3.586045394395627*^9, 
   3.586045394524132*^9}, {3.5860455542199717`*^9, 3.586045554321032*^9}, {
   3.586045722707262*^9, 3.586045736386677*^9}, {3.586046030173212*^9, 
   3.586046033844818*^9}, {3.5860463032478867`*^9, 3.586046311420875*^9}, {
   3.586175787504369*^9, 3.5861757963259077`*^9}, {3.586176013045237*^9, 
   3.586176020081842*^9}, {3.5861971335804358`*^9, 3.586197134083375*^9}, {
   3.58626037401723*^9, 3.5862604641409397`*^9}, {3.586260515576954*^9, 
   3.586260518191428*^9}, {3.5862606944762897`*^9, 3.586261098267708*^9}, {
   3.586261132093011*^9, 3.5862611332359333`*^9}, 3.586261260774823*^9, {
   3.586261398303369*^9, 3.586261425381465*^9}, {3.586263568053598*^9, 
   3.5862636435992527`*^9}, {3.586264130303351*^9, 3.586264131504971*^9}, {
   3.586272228169983*^9, 3.5862722300327997`*^9}, {3.58627382766778*^9, 
   3.586273845450675*^9}, {3.586274188222036*^9, 3.5862741941809063`*^9}, {
   3.586274704452845*^9, 3.586274704540745*^9}, {3.586275096673512*^9, 
   3.586275097301385*^9}, {3.586275387075507*^9, 3.58627538789277*^9}, {
   3.5862756461437073`*^9, 3.586275646608527*^9}, {3.586275881685399*^9, 
   3.586275895526825*^9}, {3.586275989942478*^9, 3.586275990209215*^9}, {
   3.5862761598123617`*^9, 3.5862761728028307`*^9}, {3.5862766974513597`*^9, 
   3.5862767050156517`*^9}, {3.5862769685177517`*^9, 3.586276972375846*^9}, {
   3.586277085489868*^9, 3.586277085578792*^9}, {3.5862774896106157`*^9, 
   3.586277490945325*^9}, {3.586277675637706*^9, 3.586277675806511*^9}, {
   3.5862782074874887`*^9, 3.5862782075951567`*^9}, {3.5862785138296747`*^9, 
   3.586278524431981*^9}, {3.586299957432815*^9, 3.586299957982965*^9}, {
   3.5863007227018127`*^9, 3.586300723013514*^9}, {3.586300890803255*^9, 
   3.586300891145954*^9}, {3.586301066360034*^9, 3.586301066633614*^9}, {
   3.5863017267564363`*^9, 3.5863017271323643`*^9}, {3.586302021402279*^9, 
   3.586302021955317*^9}, {3.586302118126728*^9, 3.586302118236003*^9}, {
   3.586381776584436*^9, 3.586381792277049*^9}, {3.5868720835417223`*^9, 
   3.586872084900858*^9}, {3.5868726689830647`*^9, 3.5868726706620646`*^9}, {
   3.5868732861900644`*^9, 3.5868732959090643`*^9}, {3.586875682133559*^9, 
   3.5868756859739437`*^9}, {3.5870511591149597`*^9, 
   3.5870511591649647`*^9}, {3.5912217278134527`*^9, 3.5912217287156*^9}, {
   3.59122483540934*^9, 3.5912248394428253`*^9}, {3.591224882859967*^9, 
   3.591224891137409*^9}, {3.591227923432393*^9, 3.5912279334095182`*^9}, 
   3.591288770035035*^9, {3.5912888234237843`*^9, 3.591288826022884*^9}, {
   3.591288887574812*^9, 3.591288887997858*^9}, {3.5912950398810472`*^9, 
   3.591295123193832*^9}, {3.591296579382214*^9, 3.591296617380375*^9}, {
   3.591296657165275*^9, 3.591296676341487*^9}, {3.591296740175308*^9, 
   3.591296782973329*^9}, {3.5912969510916567`*^9, 3.591296953003766*^9}, {
   3.591297022286523*^9, 3.591297076585884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"directory created:\"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat\"\>"}],
  SequenceForm[
  "directory created:", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat"],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.5912976996713343`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"exported nodes file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/nodes.dat\"\
\>"}],
  SequenceForm[
  "exported nodes file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/nodes.dat"],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297699698279*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"exported triangles file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/triangles.\
dat\"\>"}],
  SequenceForm[
  "exported triangles file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/triangles.\
dat"],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297699699684*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"imported nodes file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/nodes.dat\"\
\>"}],
  SequenceForm[
  "imported nodes file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/nodes.dat"],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297699903078*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"imported triangles file: \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/triangles.\
dat\"\>"}],
  SequenceForm[
  "imported triangles file: ", 
   "/Users/qzmfrank/Codes/rte2dvis/notebook/../msh/square162_dat/triangles.\
dat"],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.5912976999042397`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{p,t}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True"}], "}"}]}],
  SequenceForm["{p,t}=", {True, True}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297699987303*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Ns,Nd,Nn,Nm,Ng}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"162", ",", "10", ",", "162", ",", "21", ",", "3402"}], "}"}]}],
  SequenceForm["{Ns,Nd,Nn,Nm,Ng}=", {162, 10, 162, 21, 3402}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297699991325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{gTbl,iGTbl,iLTbl}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}],
  SequenceForm["{gTbl,iGTbl,iLTbl}=", {True, True, True}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700018676*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Tpt,Tcntr,Tr2rXY,Tr2rR,Tr2rPhi,Tr2rF,Tarea}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.33411499999999998725087532736033324454`4.6993978468711575", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.00016899999999999998790550792548970094`2.248486617893297", ",", 
       "0.00014500000000000000085001450322863548`2.181967915514599", ",", 
       "0.06715899999999999647748438746930332854`4.847704134132842", ",", 
       "0.07987400000000000055422333389287814498`4.923005347235432", ",", 
       "0.14366899999999999115729565346555318683`5.177962982170081", ",", 
       "0.04250299999999999911448611555897514336`4.649019498329083", ",", 
       "0.00059599999999999995863031454490510441`2.7958461730198607"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "{Tpt,Tcntr,Tr2rXY,Tr2rR,Tr2rPhi,Tr2rF,Tarea}=", {
   0.33411499999999998725087532736033324454`4.6993978468711575, {
    0.00016899999999999998790550792548970094`2.248486617893297, 
     0.00014500000000000000085001450322863548`2.181967915514599, 
     0.06715899999999999647748438746930332854`4.847704134132842, 
     0.07987400000000000055422333389287814498`4.923005347235432, 
     0.14366899999999999115729565346555318683`5.177962982170081, 
     0.04250299999999999911448611555897514336`4.649019498329083, 
     0.00059599999999999995863031454490510441`2.7958461730198607}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700355747*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{pt,cntr,r2rXY,r2rR,r2rPhi,r2rF,area}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True"}], "}"}]}],
  SequenceForm[
  "{pt,cntr,r2rXY,r2rR,r2rPhi,r2rF,area}=", {
   True, True, True, True, True, True, True}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700357943*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{musTbl,muaTbl,mutTbl}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"True", ",", 
       RowBox[{"{", 
        RowBox[{"162", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", 
       RowBox[{"{", 
        RowBox[{"162", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", 
       RowBox[{"{", 
        RowBox[{"162", ",", "1"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "{musTbl,muaTbl,mutTbl}=", {{True, {162, 1}}, {True, {162, 1}}, {
    True, {162, 1}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700359137*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{TVRe,TVIm}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02503699999999999849242815486149993376`4.1181522069503576", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.01273799999999999932320804418850457296`4.125701157829266", ",", 
       "0.0122989999999999991692201106729953608`4.110469714789176"}], "}"}]}],
     "}"}]}],
  SequenceForm[
  "{TVRe,TVIm}=", {
   0.02503699999999999849242815486149993376`4.1181522069503576, {
    0.01273799999999999932320804418850457296`4.125701157829266, 
     0.0122989999999999991692201106729953608`4.110469714789176}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700388538*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{V,VRe,VIm}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}],
  SequenceForm["{V,VRe,VIm}=", {True, True, True}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700390142*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Norm[V]=\"\>", "\[InvisibleSpace]", "0.36495523947563757`"}],
  SequenceForm["Norm[V]=", 0.36495523947563757`],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700391204*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{TZon1,TZon2,TZoff,TvTblC,TuTblC}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.39949399999999998926125915725549031521`4.923140169974193", ",", 
     RowBox[{"{", 
      RowBox[{
      "0.00006099999999999999872194247907408737`1.805929748290391", ",", 
       "0.00002099999999999999883795211153003635`1.342819208013543", ",", 
       "0.06415899999999999381294912836892763153`4.827857499574022", ",", 
       "0.19024099999999999344169054893427528441`5.299904033425038", ",", 
       "0.14501200000000000200905958536168327555`5.182003855639738"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "{TZon1,TZon2,TZoff,TvTblC,TuTblC}=", {
   0.39949399999999998926125915725549031521`4.923140169974193, {
    0.00006099999999999999872194247907408737`1.805929748290391, 
     0.00002099999999999999883795211153003635`1.342819208013543, 
     0.06415899999999999381294912836892763153`4.827857499574022, 
     0.19024099999999999344169054893427528441`5.299904033425038, 
     0.14501200000000000200905958536168327555`5.182003855639738}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700794828*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Zon1,Zon2,Zoff,vTblC,uTblC}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
    "}"}]}],
  SequenceForm[
  "{Zon1,Zon2,Zoff,vTblC,uTblC}=", {True, True, True, True, True}],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700796298*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ZDotXC[V] time=\"\>", "\[InvisibleSpace]", 
   "0.19253300000000000968825020208896603435`5.305105091226015"}],
  SequenceForm[
  "ZDotXC[V] time=", 
   0.19253300000000000968825020208896603435`5.305105091226015],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297700995216*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tdamp1=\"\>", "\[InvisibleSpace]", 
   "0.00005500000000000000195806912350882101`1.760962602773868"}],
  SequenceForm[
  "Tdamp1=", 0.00005500000000000000195806912350882101`1.760962602773868],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701491453*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"damp1=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm["damp1=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701493472*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tdamp2C=\"\>", "\[InvisibleSpace]", 
   "0.26424500000000000765609797781507950276`5.442606691688781"}],
  SequenceForm[
  "Tdamp2C=", 0.26424500000000000765609797781507950276`5.442606691688781],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701762928*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"damp2C=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm["damp2C=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701764043*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Norm[damp2C-damp1]=\"\>", "\[InvisibleSpace]", 
   "5.324442579404919`*^-16"}],
  SequenceForm["Norm[damp2C-damp1]=", 5.324442579404919*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701765078*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vsc=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm["Vsc=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701958935*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TVsc=\"\>", "\[InvisibleSpace]", 
   "0.1935189999999999965751840136363171041`5.307323524443678"}],
  SequenceForm[
  "TVsc=", 0.1935189999999999965751840136363171041`5.307323524443678],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297701960483*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tsol2sc=\"\>", "\[InvisibleSpace]", 
   "3.68543099999999990146193340478930622339`6.587088197869851"}],
  SequenceForm[
  "Tsol2sc=", 3.68543099999999990146193340478930622339`6.587088197869851],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297705646184*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Norm[ZDotXC0[sol2sc]-Vsc]/Norm[Vsc]=\"\>", "\[InvisibleSpace]",
    "6.626149844964169`*^-10"}],
  SequenceForm["Norm[ZDotXC0[sol2sc]-Vsc]/Norm[Vsc]=", 6.626149844964169*^-10],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.591297705840269*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max[Norm/@(ZDotXC[sol2sc]-V)]/Norm[V]]=\"\>", 
   "\[InvisibleSpace]", "9.264499614459818`*^-11"}],
  SequenceForm[
  "Max[Norm/@(ZDotXC[sol2sc]-V)]/Norm[V]]=", 9.264499614459818*^-11],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.59129770603225*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sym sol2sc=\"\>", "\[InvisibleSpace]", "0.12691529072321`"}],
  SequenceForm["sym sol2sc=", 0.12691529072321],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.5912977060348387`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Nd residual=\"\>", "\[InvisibleSpace]", 
   "0.11313690342449556`"}],
  SequenceForm["Nd residual=", 0.11313690342449556`],
  Editable->False]], "Print",
 CellChangeTimes->{3.591297023427569*^9, 3.5912970777166357`*^9, 
  3.5912977060364113`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "A", ",", "y", ",", "CoordTbl", ",", "nTbl", ",", "data", ",", "n", ",", 
   "pltstr", ",", "fluence"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2scp", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"sol2sc", ",", "Nm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", "0.5"}], ";", 
  RowBox[{"A", "=", 
   RowBox[{"Total", "[", "area", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoordTbl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.01", ",", "0.99", ",", 
       RowBox[{"0.9", 
        SqrtBox[
         RowBox[{"A", "/", 
          RowBox[{"N", "[", "Ns", "]"}]}]]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nTbl", "=", 
   RowBox[{"PickTriangle", "/@", "CoordTbl"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CoordTbl", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{
       RowBox[{"sol2scp", "\[LeftDoubleBracket]", 
        RowBox[{"nTbl", ",", 
         RowBox[{"Nd", "+", "1"}]}], "\[RightDoubleBracket]"}], "//", 
       "Re"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", 
    RowBox[{"n", "\[LessEqual]", 
     RowBox[{"Length", "[", "data", "]"}]}], ",", 
    RowBox[{"n", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"n", ",", "2"}], "\[RightDoubleBracket]"}], "+=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"OpticalPathC", "[", 
          RowBox[{
           RowBox[{
           "CoordTbl", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
            ",", 
           RowBox[{"phis", "+", "\[Pi]"}]}], "]"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}]}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pltstr", "=", 
   RowBox[{"\"\<NEW FLUENCE\\n\>\"", "<>", "\"\<Nd=\>\"", "<>", 
    RowBox[{"ToString", "[", "Nd", "]"}], "<>", "\"\<,Ns=\>\"", "<>", 
    RowBox[{"ToString", "[", "Ns", "]"}], "<>", "\"\<,phis=\>\"", "<>", 
    RowBox[{"ToString", "[", "phis", "]"}], "<>", 
    "\"\<,\!\(\*SubscriptBox[\(\[Mu]\), \(a\)]\)=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"mua", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], "]"}], "<>", 
    "\"\<,\!\(\*SubscriptBox[\(\[Mu]\), \(s\)]\)=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"mus", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], "]"}], "<>", "\"\<,g=\>\"", "<>", 
    RowBox[{"ToString", "[", "g", "]"}], "<>", "\"\<,y=\>\"", "<>", 
    RowBox[{"ToString", "[", "y", "]"}]}]}], ";"}], "\n", 
 RowBox[{"Print", "@", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]"}], ")"}]}], "+", "0.04"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "pltstr"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<fluence\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"PointSize", "[", "Medium", "]"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", "\n", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"mut", "[", 
           RowBox[{"{", 
            RowBox[{"0.", ",", "0."}], "}"}], "]"}]}], "x"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fluence", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cntr", ",", 
         RowBox[{
          RowBox[{"sol2scp", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"Nd", "+", "1"}]}], "\[RightDoubleBracket]"}], "32"}]}], 
        "}"}], "//", "Chop"}], "//", "Transpose"}], "]"}], "//", "Quiet"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fluence", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
          "mutTbl", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "x"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], "//", 
   "Quiet"}], ";"}]}], "Code",
 CellChangeTimes->{{3.584120027553041*^9, 3.584120051978733*^9}, {
   3.584120084725936*^9, 3.5841200951495323`*^9}, {3.5841201402562637`*^9, 
   3.584120195061132*^9}, {3.584120336322423*^9, 3.584120464207375*^9}, {
   3.584120507048019*^9, 3.584120720122223*^9}, {3.5841208570509663`*^9, 
   3.584120880208828*^9}, 3.5841210883240128`*^9, {3.58412112196113*^9, 
   3.584121131637549*^9}, {3.5841213186060038`*^9, 3.5841213508868427`*^9}, {
   3.584121394991786*^9, 3.584121434279293*^9}, {3.584121752710207*^9, 
   3.584121770846599*^9}, {3.584121803969247*^9, 3.5841218845939407`*^9}, {
   3.5841219164549932`*^9, 3.5841221855320683`*^9}, {3.584122443107045*^9, 
   3.5841225292480717`*^9}, {3.584122651251967*^9, 3.584123002764822*^9}, {
   3.5841230446362057`*^9, 3.584123097121443*^9}, {3.5841231606041307`*^9, 
   3.584123193645821*^9}, {3.584123224271023*^9, 3.584123354705677*^9}, {
   3.584123386598518*^9, 3.584123456471065*^9}, {3.5842702253075113`*^9, 
   3.584270247257147*^9}, {3.584280439009564*^9, 3.58428044910061*^9}, {
   3.584285428552099*^9, 3.584285499649301*^9}, {3.584285706611217*^9, 
   3.584285716334676*^9}, {3.584285760776826*^9, 3.584285771583666*^9}, 
   3.584457300290661*^9, {3.5848063713899117`*^9, 3.584806415531488*^9}, 
   3.585619852142044*^9, {3.5856199107770147`*^9, 3.585619921623212*^9}, {
   3.5856540306951723`*^9, 3.5856540457790422`*^9}, {3.5856549662005177`*^9, 
   3.585654966342512*^9}, {3.585667013153858*^9, 3.5856670279432783`*^9}, {
   3.5856670747244167`*^9, 3.585667126051585*^9}, {3.585667333688311*^9, 
   3.585667374909482*^9}, {3.585667441770854*^9, 3.585667477247587*^9}, {
   3.585667758875242*^9, 3.585667801996773*^9}, {3.585667941106017*^9, 
   3.58566794146478*^9}, {3.5859057078219557`*^9, 3.585905761449484*^9}, {
   3.585910831150632*^9, 3.585910837268662*^9}, {3.585911356479021*^9, 
   3.58591142611915*^9}, {3.585911507730501*^9, 3.585911629965496*^9}, {
   3.585911725062365*^9, 3.585911725453196*^9}, {3.585911864093528*^9, 
   3.585911864341827*^9}, {3.5859119141954393`*^9, 3.585911914618272*^9}, {
   3.5859119763415117`*^9, 3.585912029176828*^9}, {3.585913133444376*^9, 
   3.5859131462584953`*^9}, {3.585913224396533*^9, 3.585913271547759*^9}, {
   3.5859136481851254`*^9, 3.5859136484578753`*^9}, {3.585914430246312*^9, 
   3.5859144367093763`*^9}, 3.585914571114493*^9, 3.58591578630658*^9, {
   3.585921762508705*^9, 3.5859217734657803`*^9}, {3.585928431344068*^9, 
   3.585928433599854*^9}, {3.585928622780555*^9, 3.58592866881152*^9}, {
   3.585928700674781*^9, 3.585928704638295*^9}, {3.585928774284616*^9, 
   3.58592878279547*^9}, {3.585928866168103*^9, 3.585928868316575*^9}, {
   3.585928903523778*^9, 3.585928903843877*^9}, {3.585928946892991*^9, 
   3.585928959396356*^9}, {3.585929043608967*^9, 3.585929221166999*^9}, {
   3.585929325127193*^9, 3.5859294246749907`*^9}, {3.585931878056086*^9, 
   3.585931958426443*^9}, {3.585932106654709*^9, 3.585932106879917*^9}, {
   3.5859323216948833`*^9, 3.585932356270999*^9}, {3.5859922043289967`*^9, 
   3.585992206832965*^9}, {3.585992341693733*^9, 3.585992363381445*^9}, {
   3.58599295614858*^9, 3.585992956675758*^9}, {3.586000077699668*^9, 
   3.586000081133869*^9}, {3.5860001435344048`*^9, 3.586000146261948*^9}, {
   3.586009143749473*^9, 3.586009144204275*^9}, {3.586010419976666*^9, 
   3.586010421938583*^9}, {3.5860447369303493`*^9, 3.586045095193376*^9}, {
   3.586045308914136*^9, 3.586045324590432*^9}, {3.586045355634392*^9, 
   3.5860453732583714`*^9}, {3.586045459911738*^9, 3.5860454608704157`*^9}, {
   3.586045753841864*^9, 3.586045835478607*^9}, {3.5860463907019176`*^9, 
   3.586046522850647*^9}, 3.586046657167206*^9, {3.586175880666212*^9, 
   3.586175906365621*^9}, {3.5861759461164217`*^9, 3.586175983311661*^9}, {
   3.5861761519237757`*^9, 3.586176157347547*^9}, {3.586271961791913*^9, 
   3.586271963340837*^9}, {3.586272353440304*^9, 3.586272354429228*^9}, {
   3.586272415370925*^9, 3.586272416529765*^9}, {3.5862737187355947`*^9, 
   3.5862737207256603`*^9}, {3.5862737553173857`*^9, 3.586273776786592*^9}, {
   3.586273810273066*^9, 3.586273818223589*^9}, {3.5862741067944403`*^9, 
   3.586274108161235*^9}, 3.586274172038501*^9, {3.586274300791016*^9, 
   3.5862743017651567`*^9}, {3.586274352208498*^9, 3.5862743581447687`*^9}, {
   3.5862744062584248`*^9, 3.586274689714984*^9}, {3.586274721456702*^9, 
   3.586274729138591*^9}, {3.5862757596798277`*^9, 3.5862758004941263`*^9}, 
   3.5862758553556223`*^9, {3.5862760218545103`*^9, 3.586276023545599*^9}, 
   3.586276087988336*^9, {3.586276264195547*^9, 3.5862762695383387`*^9}, {
   3.586277509714045*^9, 3.586277510419634*^9}, {3.586277567154887*^9, 
   3.5862775677709713`*^9}, 3.586293020944626*^9, 3.58629589195371*^9, {
   3.5863008610978394`*^9, 3.586300861186295*^9}, {3.58635906790578*^9, 
   3.5863590767054367`*^9}, {3.5863818800276423`*^9, 3.586381886540311*^9}, {
   3.5868729266980643`*^9, 3.5868729367070646`*^9}, 3.5868729792290645`*^9, {
   3.5870527690809402`*^9, 3.5870528118822193`*^9}, {3.589627437160041*^9, 
   3.589627443631028*^9}, 3.590497615682762*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[Medium], 
     PointBox[{{0.01, 0.16498687062952483`}, {0.08071067811865476, 
      0.1538223602525874}, {0.15142135623730954`, 0.148136417779478}, {
      0.2221320343559643, 0.13872045547057982`}, {0.29284271247461907`, 
      0.1319982218543107}, {0.36355339059327385`, 0.1255772748254081}, {
      0.4342640687119286, 0.118499858115958}, {0.5049747468305833, 
      0.11205847647888598`}, {0.5756854249492381, 0.10575009894572548`}, {
      0.6463961030678929, 0.09960816279708005}, {0.7171067811865477, 
      0.09364218866232049}, {0.7878174593052024, 0.08788626874860886}, {
      0.8585281374238571, 0.0826892634516179}, {0.929238815542512, 
      0.07757909030867374}}]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[CompressedData["
1:eJwVzmk41AkAx/GZkqM2NSSNwqO0JZSVq6x+OYqltCPS4VpNrsqoPElPbfGg
iyabioREUuZwzOgwmJjYrEwajFpmHLOWHP/qcTTEbPvi+3zefk1CGT5H5pFI
pN3f+1/PI4OtwiG/bXT7K2FWwSKouRrEyKk2aJL6C1ICRdicl3mvguqG4gKF
TfchEbzeSMtzqL5wCbO8fnW/CP70qeo/qHQshkXvAE2E7k2XXNOosfB3OaJe
5CbCfb09KVepSRA2kLZu2yBCgmbFuivUDBgmXixun6jH/gP53E+fC0EeU49d
kFKPRaqEAHcjLrpSk2QS43qspY0N1l/jYfZMouRJdR3iWrYgc/w5csMCPCL9
6qDPo8jI5FowHbP2rZ98ico+12bxz3XgBJ/YtSr9JeqiclYeGBFBV84woFi9
xMSPTkvYxxthWD29jCEVYp6yZOnKtU3I7S2x9I8Xwk4VUrmX0wwXa2biwTVC
NCfZtDRsEMPNzso6Ob8WxjeGlY/H3mImuuWw+pcaDE/JZe1W76Bqc2bwaDUo
/FjVpH1dAp1TfqTbj6qhbfiIUCjaYHsr/LqNWjVSI/lh9007sPFXqyAyQ4DJ
7SWKiAtSUJaMxqW/rUKstYi3vL4TTsH2Lc2ogpwjutZq8gGBNg+/bC96gZmo
tmyzs3+jQ+dRXpPOC5g7a8yFVXUhJoUBaupzuD8wCS/Tl+HDV+WsyewzxBkG
r+4NkONQToNp/NlnsBjxWyTd3YMMA8fjX789he6ST5qi6R58k+J1cdxTqNVm
c9fc60WkptPd7tlKHLWpeq/l1QdBRMjlonOVKPkl9H7NZB9Ca0Q9aaRKTAwb
LB243Q/mT/tNHZh88Pe6z89wU+BBNP1m/3I+Lngk5/EGFDDq/JM2VsyDSbdn
Z0HyP+ix15jbAx622idlUK0HQBH/ZaYvrkCAkVhJlgwgZmd4382ICkw0pfXF
JPyLYKV59uuZcmSqBcX6mA5io7fWrYOZ5dCV8R/MEw1irtRrS6dDORacT/Dd
cmIIMgO3HZGSMpAeB3H7dD7iZDSnoep0GU7e5abp1H1EuWfr1LFlZag2v6xJ
iR6G0xTc51eWguJ50iJRewS0iy6cxuBSdFm+lcQLRhDD+j3fSa0UpbkwVQSN
YjlVo9D8Ny4CuXYUw7lRBIQLGKeFHFxMzk/oejIG7/P8RoEeB+xBw2ztXQRK
9e8avopn43JOcojMm8DNNXeGdOPYoPuMruXQCETYXhoPjWVjlUBQutufQM9R
s0Yyg42rzEMNqaEEXD3ag1zobETYZX1eGE9AK+uVj9ibjdVJyzw0igi4KaZN
V5iyMedwbrG0mMCKHyCKNmHj/Wj/u6ISAguca/NfGbFxw78icGcZgU96gfqx
VDZUG3xOJQsISA8zRiTabHS1MnPnS77/kr865ClZeJYydVjSTsCR5PtcOclC
hmOwWUEnASf/9DjfcRa8Hm7kucgIFJ3KYi8kWHhx5s3rhCECqTucVfEKFm5b
2jJpIwQ6+rWiO3pZONF3z9eEIDBclmKwWc7C+l3H5MJxAkM+KRaj71lQI7cV
3pgi0NY7m+4pZaGH7xgVMk2AuULXtriNBUFUwSarWQJh+4R66u9YuGO8aEKl
IrBuRrWZLmbhPxn7ZkQ=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"fluence\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  ImageSize->Medium,
  Method->{},
  PlotLabel->FormBox[
   "\"NEW FLUENCE\\nNd=10,Ns=162,phis=0,\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
\\(a\\)]\\)=0.693147,\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
\\(s\\)]\\)=0.346574,g=0.6,y=0.5\"", TraditionalForm],
  PlotRange->{{0, 0.929238815542512}, {0, 0.19915494309189535`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.01858477631085024, 0.01858477631085024}, {0., 
   0.}}]], "Print",
 CellChangeTimes->{3.5904976172986193`*^9, 3.590497680910239*^9, 
  3.590771212401266*^9, 3.590783328583918*^9, 3.590788326574972*^9, 
  3.590788416216214*^9, 3.590828539370352*^9, 3.590873078107813*^9, 
  3.590874225413691*^9, 3.591186986643909*^9, 3.591187672940242*^9, 
  3.591221669493431*^9, 3.591224862992929*^9, 3.591224903406517*^9, 
  3.59122794046469*^9, 3.591288689726178*^9, 3.591297032250455*^9, 
  3.591297706293561*^9}]
}, Open  ]],

Cell[BoxData["\[NonBreakingSpace]"], "Input",
 CellChangeTimes->{{3.591296181926818*^9, 3.5912962138258553`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
szUwt5WXiT2iK8LvvGXD86Xfufh7b2naSyeuDHC/uygXH6bzZ87TGeHfsfO7
r7SdpTNnelRrE42Qn10so0tRv18XiLcMUfUt3mbqGUVy6BPm326i65FiXkYu
l6FEPEoDV07Q1nr5+J/on3LoFwEAtcfUUcrdfWqHR885DN5jZm7/Rnp2Y7rf
iQ1S8WL/wFismnkpHxxvAE8oc7eM1wT3+tr3ToZut7+qGKca2J7UqkMyT10b
xPVD3xr66VM9v9L5Gctod1srFztw22o+ls7PT9bC1NZQ10sGjv/bqlg2PSqv
36ivr6eQsOX/K57TlnqRMT1y/N9Hwd/xVjwyTPf6e+nK+TOFfoAtLc3UtGU9
rd98zNW5w+zoJ9wxstI3IRu7Q2+pjjWzrdpIRy8PYewB4Kp5OivWWlpv9Fmz
/czcY6a635U+7z93aT3M7Mg1ei2kuGctfYFOmOi3UuT08c7R7baXafWer2ti
bAN+U+X5lb5jvYYWeXPte2uOuraWGTeV21afVL9H2e+ZHpYGxnGzv5PWHK09
8QeaUa75Lm1L1h+k+7EkjV39F+7vay3/Xq75kR+z7qTLg1OUyRUDq6kL/4P7
3T9wpR43k4tnMH72zMJDxTNVH8VbwnVRr3stuVtzf4Cd/xeOz60qBgn5GLK3
u5u6ha23t5/uDYYpVim5EAAcIV/bO12rU1V+P4zdY0a7XpTmy52+X8/0/Ube
t/Uf0qN4lHtO97mJdRyOH29xnvCVLxBvgf2qPL/SQ+9z17mVZ/puXvteu33g
J9L8x6HztyksrhccOlWsrb7kbbqb/3M4TGFui5DmckKmJpGROiXy/WobPRL+
vKDoqVoc539dnOtfeKCa6zIbT/ubXIM9v11SfEYpa5270/9oXp4v9ntfBUWd
HF/FWzRHt8+fpjNnOulw8zpuH5/c9Y2L+8GfY0/4PYYGAEPY+hTHh718Dmnl
HiM/16tb91vnYovs90zNxJ00LvzVzNU3uPux0XUcbhxvsVbxq5ZrXgHoq/b8
spa7peTSte8xqYbdyn30SDEmzZbiHrP1BbNjcl28yrHQNO1T3JNV/ZOEMf5j
8eUa42m36nG4QvH7rd7dQTcGxygWL66TZPsXu1lnX4qJV/u8ni/3Weq3eIvF
10l+58ZfXPvJ4v1VnMPXr3cBAIGRfSD1/3D3+Y2a1XsMO3Z479ZfHdk3+Vm6
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
KGyZ1DjX5zg/N5XIr/cufT3BrfnWZ+1460g8oL1MTL9k/Yc0HBefMatza3KJ
Ya5PzPbTXvdZA18L8vll4dpPhy9x9+yndpykSdWwOUd9Lb8ofP1Zz/sU2ovt
Lej3eqazfa8X4nrfr5dzmZzL502/b7PUOYDOx1sLU9e4MYje2iN5jW1x08zd
YnrXvHy6FLNlH2iskSw9oxGfLecmufGE4efyAKDC9/FsqFhDtG/vT+XXm8hZ
rg6bC2piLXxg7jF8bkNV93Cxr2tp22UpRrR4vDUkBz/l1tXk12+y8V62lGum
7os0zcXFx9GvHjQE//wyd+0nhz7h70l7vtF9fpIVx4g1V/uQqeXj67Vopfr3
tvRrqyFpORfKXF1/77geby085D7Hy17DyZtcXKaVuzUh9a5h+mgya3PZ7RR7
L9So7RmUOUkAv+H6eFasi8CPUdyr4cqOSTYZrvUUnHsM+/tVufZE8ftZG0da
O95K6VF+bLhLuRaC5OecWjEdt4ZjHXrW64lHIxSNL76jUxvnl4lrXxhXcfel
CuN48VlaTT6LZtZlfGAwj8tto6VzD/1fWcx6UF/Hyjy3462BAz9hfs4yulSm
PnCWq4+llbvFPD9l1izPcGuVSpuyt032gcZYaBs9CsobB+AbfB/IJyrVRWDm
i9z9HGH7SRm9xwXrHmPX+r0kN19p9fPAyvFWUKxTfVlzzZaYM61Tn5mra99A
t/CQWIVdS3JqMc0B1tD5ZezaZ2vHl8ZgZXtITdOB0jVcq7kWs1Kdfv/kqImm
et4o7NuTu79GvVXGxNU3Su/ZzkCN2V2Nt5TPhCvkKbK51trPzOVaNXLudo56
mn6g+p20xoD5+mhiPZ6Vmw/QfZv7KKfTaRoZGcGGLZBbJBIxeKJ/r8jdKj+3
z+duuVgLldtP4/GWn+8xSnbFW+z3yceZlvowWzreLMXYUK8emVhzXrc+s9wP
E8+Jtcxxfa2N1msLvto6v4xc+8q5vHK9xNLRm3I9sxpfyzZ2QRy/b6P7vqnF
SDTTf5x2H+qp6WNv1lTfu1J8fMvhz1O7uRlvDbT+nPs5b5Ydl2UM9d3KZTKF
3hjyPUM7Z8KL9Z3d3d0axxYbtmBsP/7xjw2d53zNncr197jcrWpq+prF9b4w
Xk/Cz/cYJXviLX4cavnZqsXjLVKODT+4r71GSlwH8aoqt6ZEkYuGeIu3MHWR
Oc529MsVzh9xrY/D267r1udcau38qnztq58TPX3oO0okirXmIpEwDfb30pn2
/bS1cYn8upUHaTxAcwhWzd4Tz4d/w5pjn5JqnKx8W4iLvd4b81yLtxT3pIr3
9ewDuU9mnX7fLSX+s0MeA17zoM77H//4R9q1axc2bIHcPvroI0Pn+VDHM/K1
5tvcLap6/C/y0z1GyZ54a5J7j4z0UtNU1fFWjA2VazUZ5XJr1PuBeEuJPWfs
uR7n6WRIeX04sxnpSaCt9s6vite+agxWZgu9QLtbu+jWyNSiWseWiT+iwUX2
OwdKbo5GBkcCO9/nVry1wOVi1VWsScb2ydTtu6VBWdPQ2BgQAKwxm7v1FZe7
dUTnmbIjql7fVuTne4wt8ZaiJ6Pl96ia462o/6ifO1Iht4b4us/57Xg4bfY3
qWHs8w/7+jLkEtMUDkcoEo0W1iU7s0UpYXXepQbPr0rX/sIMf++tW32QhmMx
iorvkfDfWDxBqQyiDQBHpN3pd6wco6w9Ub6Xw1jXi8zrjY5lmJolzKa3FhEA
qlRV7pZ7fbeK5Nxv6/c4f99jbrf+oup4i38Gt6aK/P8qjrfivNJb61U5t0aR
i1Zm3LwYsc81a62/Ulk1eH5VuvaVvVZdXVsAAKq5cKfiLW7NUbn7W8E8dbG5
W7u/5r6a072faedVGF2LCADmVJW7tVpRO1n/wubEI/fpfGc7tbe3U2dnJ13p
HqCooRxnO/pT+fkeY0/evrJO0aTl/anieHOfS/o13yrm1ojj5dKmVdN6qv84
bQytoqWhEK1q3FhYR3U/WpqjyExTT+d+2tC4ikLC10OhRtpzoo8SHsdsdu3z
balesPV6/YHk4vnljsrXvnItkz/uWQCLiEvxFv8MqMK4TDHXz94XxOdxpzTW
Ui/MXOTny+vMrUUEAHOUdezKT4XwuVtrTzB5QTNfVX4Ok5mkji3/KP37paEX
qLFB/n67zlXKM5pn1j5au8f5+x7DxzfW5qWYHqCF5/rV9Dap4nhzNbb1YwEx
Nvxcp6Y1Fztq5AxP9WjU9S+9p7vbWjX7pxWfFXhXr822fWbyedYuprmtPJfO
L/dUvvaV81uuruUGAN14y2ouuZ5Rbn6r/Gcv/xyGH8sU+6o2aN7XpqSa/Mzm
k7wKgNozz+VuVcrJVOVuMT05xfXGujnpGblP+uo9X1KcGR8lB/6vwWf0GW4t
4PFh8+MNf99j7Ji/e8zVBq9ujVkVx5t75tagE8+KNWx11nAp+o+ocnSYPnBr
T/yBZgbeV7+3wrZk/UG6H0vSmGJNfFX9pK2ycZ/TUo+1TTS8mOa28tw4v1xl
4NpX9Dk2Nf+dGaeulla6G7D62wC+ohlv2X//TQ7w/TP147l8fuo/6IxlSmMB
zefo/s6rAKg5ihyIZ4+Wzwfg1hJy94DKOekzPa+T9hwaW7u88nOiiQvy+NN8
LWmf32PYtU0V5xp1ZPn3tNpeTNaPd4a+YNaU//rWX9UvKZdbw8TnhW3Hl6p5
uoHDYn+SbfQo/+00akct31Oqhb+g7l3tRR06+/ZZPpcr5VLXJufPL1cZufYV
64YMn7+5SSkP05NnDAC1QiveqvSc2gquNs4a3efQA9y6w7pCT2RxX8Q6QNrj
Op28Ch/0xHFDJoW6QrXOb++xqrapMObQ27uZPsUaqKcOys9R0neKz4kVeZoy
pnbzkp00zCd9yfEW+z11sPUBzOda+PseszAh10l7cru1nll8XVi95/7Wvp/Z
451la9pq5JHp5tYkvufGwk/t+K3G+HOa9pW+/sSebwt/M6r87GH7PCueLeS3
4+G/m/p9qmfnPovzIYtwbqvE2fPLXUav/aHDcg9UQ/Uy8r9rvRjHf4M66QDV
0Iq3VjgQbyn6XahzNXN0u+MljWd130qvEPMKNNccKdYqFbdlvuiJ4zSpzqsj
7xv4gR/fY9VYT2d+aXbgI9V1na+VIQ7zhkrf5wPduRS+/25+e37La9TWfpZu
DE4IMWiK4rE4pYwMBtj7ndlj6fN7zBQzl2Q1F55fL2lDrbVqjjex8znFcS3b
I0krtyZfR4Jd47X99B90xoiPqatpHYVWbaRLhc8TxdrYOsX6sNw4F2s/t189
9lyI3aHW5mZqaWmxZWve3aHoM2vzPudSlEgt0mCrxLnzy12Gr32u10O55yk5
Guv+QLrfrdj9hW8+dwACy7V4iwrP2+RaPsvo+OAM5XIZioVv0F7xc2PdSYqn
HjGv20b3E1mauPLr4p918rf557Lysz6vnzu5QcqDXeFdDjc4y3/vMZsvwGwr
36Zb0WRhDJJJTVNP+6vydRyL0IGl4ms30Y1YlmYGjP1emj2vmHHDibsa64Eq
7re5evT+vsewax0r14nUMyDVq9O/15pj/XgX5WjozJvMMd9EJ7pHhRg7Xsqt
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
Y9poxzPCvjfQrYTXewIAAAAAAHb5/64XFfg=
    "], {{0, 132}, {860, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{327.37031250000007`, Automatic},
  ImageSizeRaw->{860, 132},
  PlotRange->{{0, 860}, {0, 132}}]], "Input"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"n", ",", "i", ",", "q", ",", "qx", ",", "qy", ",", "w"}], 
  "]"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"np", ",", "ip", ",", "qp", ",", "qxp", ",", "qyp", ",", "wp"}], 
  "]"}], "\n", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"phis", ",", "r", ",", "PhiR", ",", "R"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"phis", "=", "0.0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.5"}], "}"}], "//", "ToPackedArray"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"VscnmFun1", "[", "rp_", "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    RowBox[{"OpticalPathC", "[", 
     RowBox[{"rp", ",", 
      RowBox[{"phis", "+", "\[Pi]"}]}], "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.591289092617951*^9, 3.591289096699136*^9}, {
   3.591289151169221*^9, 3.591289197960516*^9}, {3.5912892582141542`*^9, 
   3.591289273430256*^9}, 3.591292727377857*^9, {3.5912928528820553`*^9, 
   3.591292880778864*^9}, {3.5912944988968782`*^9, 3.591294500103883*^9}, {
   3.5912945307439528`*^9, 3.591294780439762*^9}, 3.591294906246036*^9, {
   3.5912949666782303`*^9, 3.591294983882948*^9}, {3.5912951473335114`*^9, 
   3.591295198143057*^9}, {3.5912952345489683`*^9, 3.591295235525834*^9}, {
   3.5912952691557817`*^9, 3.59129528621136*^9}, {3.591295355723359*^9, 
   3.591295358400779*^9}, {3.591295746153701*^9, 3.591295811424574*^9}, {
   3.591295857615892*^9, 3.591295920376814*^9}, {3.591296022957185*^9, 
   3.591296048137591*^9}, {3.591296143570107*^9, 3.591296163761733*^9}, {
   3.591296421101753*^9, 3.591296527313637*^9}}]
}, Open  ]]
},
WindowSize->{740, 752},
WindowMargins->{{21, Automatic}, {Automatic, 14}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 135, 3, 30, "Text"],
Cell[695, 25, 2482, 59, 258, "Code"],
Cell[CellGroupData[{
Cell[3202, 88, 189, 2, 80, "Section"],
Cell[3394, 92, 7907, 209, 577, "Code"],
Cell[11304, 303, 513, 14, 50, "Text"],
Cell[CellGroupData[{
Cell[11842, 321, 4921, 128, 290, "Input"],
Cell[CellGroupData[{
Cell[16788, 453, 993, 16, 21, "Print"],
Cell[17784, 471, 159726, 2599, 434, "Print"]
}, Open  ]]
}, Open  ]],
Cell[177537, 3074, 447, 14, 50, "Text"],
Cell[CellGroupData[{
Cell[178009, 3092, 5097, 129, 290, "Input"],
Cell[CellGroupData[{
Cell[183131, 3225, 1617, 25, 21, "Print"],
Cell[184751, 3252, 14984, 287, 243, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199796, 3546, 100, 1, 80, "Section"],
Cell[199899, 3549, 222, 3, 50, "Code"],
Cell[200124, 3554, 11234, 276, 799, "Code"],
Cell[211361, 3832, 344, 5, 28, "Text"],
Cell[CellGroupData[{
Cell[211730, 3841, 751, 15, 29, "Input"],
Cell[212484, 3858, 141, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212662, 3864, 860, 19, 45, "Input"],
Cell[213525, 3885, 498, 11, 70, "Message"],
Cell[214026, 3898, 479, 10, 70, "Message"],
Cell[214508, 3910, 477, 10, 70, "Message"],
Cell[214988, 3922, 634, 12, 70, "Message"],
Cell[215625, 3936, 477, 10, 70, "Message"],
Cell[216105, 3948, 532, 11, 70, "Message"],
Cell[216640, 3961, 634, 12, 70, "Message"],
Cell[217277, 3975, 581, 11, 70, "Message"],
Cell[217861, 3988, 1715, 26, 70, "Output"]
}, Open  ]],
Cell[219591, 4017, 481, 7, 28, "Text"],
Cell[CellGroupData[{
Cell[220097, 4028, 771, 14, 29, "Input"],
Cell[220871, 4044, 499, 11, 70, "Message"],
Cell[221373, 4057, 477, 10, 70, "Message"],
Cell[221853, 4069, 477, 10, 70, "Message"],
Cell[222333, 4081, 634, 12, 70, "Message"],
Cell[222970, 4095, 476, 10, 70, "Message"],
Cell[223449, 4107, 532, 11, 70, "Message"],
Cell[223984, 4120, 636, 12, 70, "Message"],
Cell[224623, 4134, 581, 11, 70, "Message"],
Cell[CellGroupData[{
Cell[225229, 4149, 927, 17, 22, "Print"],
Cell[226159, 4168, 958, 18, 22, "Print"],
Cell[227120, 4188, 975, 19, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[228122, 4211, 106, 2, 28, "Text"],
Cell[CellGroupData[{
Cell[228253, 4217, 814, 24, 61, "Input"],
Cell[CellGroupData[{
Cell[229092, 4245, 726, 14, 22, "Print"],
Cell[229821, 4261, 744, 15, 22, "Print"]
}, Open  ]],
Cell[230580, 4279, 438, 9, 24, "Message"],
Cell[231021, 4290, 438, 9, 24, "Message"],
Cell[231462, 4301, 1429, 22, 28, "Output"],
Cell[232894, 4325, 1959, 40, 29, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[234902, 4371, 269, 5, 85, "Section"],
Cell[CellGroupData[{
Cell[235196, 4380, 76830, 1930, 3290, "Code"],
Cell[CellGroupData[{
Cell[312051, 6314, 406, 10, 22, "Print"],
Cell[312460, 6326, 432, 11, 38, "Print"],
Cell[312895, 6339, 450, 12, 38, "Print"],
Cell[313348, 6353, 432, 11, 38, "Print"],
Cell[313783, 6366, 452, 12, 38, "Print"],
Cell[314238, 6380, 305, 8, 22, "Print"],
Cell[314546, 6390, 372, 8, 22, "Print"],
Cell[314921, 6400, 350, 8, 22, "Print"],
Cell[315274, 6410, 1529, 29, 38, "Print"],
Cell[316806, 6441, 486, 13, 22, "Print"],
Cell[317295, 6456, 738, 22, 21, "Print"],
Cell[318036, 6480, 748, 18, 21, "Print"],
Cell[318787, 6500, 336, 8, 21, "Print"],
Cell[319126, 6510, 281, 6, 21, "Print"],
Cell[319410, 6518, 1212, 23, 37, "Print"],
Cell[320625, 6543, 416, 10, 21, "Print"],
Cell[321044, 6555, 382, 9, 21, "Print"],
Cell[321429, 6566, 362, 8, 22, "Print"],
Cell[321794, 6576, 245, 6, 22, "Print"],
Cell[322042, 6584, 364, 8, 22, "Print"],
Cell[322409, 6594, 247, 6, 22, "Print"],
Cell[322659, 6602, 312, 7, 24, "Print"],
Cell[322974, 6611, 241, 6, 21, "Print"],
Cell[323218, 6619, 356, 8, 21, "Print"],
Cell[323577, 6629, 364, 8, 21, "Print"],
Cell[323944, 6639, 346, 7, 23, "Print"],
Cell[324293, 6648, 354, 8, 23, "Print"],
Cell[324650, 6658, 282, 6, 22, "Print"],
Cell[324935, 6666, 295, 7, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325279, 6679, 10817, 228, 267, "Code"],
Cell[336099, 6909, 3633, 66, 271, "Print"]
}, Open  ]],
Cell[339747, 6978, 113, 1, 28, "Input"],
Cell[339863, 6981, 16583, 276, 65, "Input"],
Cell[356449, 7259, 1627, 35, 130, "Code"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
